

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Wed Jun 08 09:52:42 2022

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	strings,global,class=STRING,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    49                           	dabs	1,0x7E,2
    50  0000                     
    51                           ; Version 2.30
    52                           ; Generated 26/08/2020 GMT
    53                           ; 
    54                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution. Publication is not required when
    68                           ;        this file is used in an embedded application.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC16F877A Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     	;# 
    87  0001                     	;# 
    88  0002                     	;# 
    89  0003                     	;# 
    90  0004                     	;# 
    91  0005                     	;# 
    92  0006                     	;# 
    93  0007                     	;# 
    94  0008                     	;# 
    95  0009                     	;# 
    96  000A                     	;# 
    97  000B                     	;# 
    98  000C                     	;# 
    99  000D                     	;# 
   100  000E                     	;# 
   101  000E                     	;# 
   102  000F                     	;# 
   103  0010                     	;# 
   104  0011                     	;# 
   105  0012                     	;# 
   106  0013                     	;# 
   107  0014                     	;# 
   108  0015                     	;# 
   109  0015                     	;# 
   110  0016                     	;# 
   111  0017                     	;# 
   112  0018                     	;# 
   113  0019                     	;# 
   114  001A                     	;# 
   115  001B                     	;# 
   116  001B                     	;# 
   117  001C                     	;# 
   118  001D                     	;# 
   119  001E                     	;# 
   120  001F                     	;# 
   121  0081                     	;# 
   122  0085                     	;# 
   123  0086                     	;# 
   124  0087                     	;# 
   125  0088                     	;# 
   126  0089                     	;# 
   127  008C                     	;# 
   128  008D                     	;# 
   129  008E                     	;# 
   130  0091                     	;# 
   131  0092                     	;# 
   132  0093                     	;# 
   133  0094                     	;# 
   134  0098                     	;# 
   135  0099                     	;# 
   136  009C                     	;# 
   137  009D                     	;# 
   138  009E                     	;# 
   139  009F                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  018C                     	;# 
   145  018D                     	;# 
   146  0000                     	;# 
   147  0001                     	;# 
   148  0002                     	;# 
   149  0003                     	;# 
   150  0004                     	;# 
   151  0005                     	;# 
   152  0006                     	;# 
   153  0007                     	;# 
   154  0008                     	;# 
   155  0009                     	;# 
   156  000A                     	;# 
   157  000B                     	;# 
   158  000C                     	;# 
   159  000D                     	;# 
   160  000E                     	;# 
   161  000E                     	;# 
   162  000F                     	;# 
   163  0010                     	;# 
   164  0011                     	;# 
   165  0012                     	;# 
   166  0013                     	;# 
   167  0014                     	;# 
   168  0015                     	;# 
   169  0015                     	;# 
   170  0016                     	;# 
   171  0017                     	;# 
   172  0018                     	;# 
   173  0019                     	;# 
   174  001A                     	;# 
   175  001B                     	;# 
   176  001B                     	;# 
   177  001C                     	;# 
   178  001D                     	;# 
   179  001E                     	;# 
   180  001F                     	;# 
   181  0081                     	;# 
   182  0085                     	;# 
   183  0086                     	;# 
   184  0087                     	;# 
   185  0088                     	;# 
   186  0089                     	;# 
   187  008C                     	;# 
   188  008D                     	;# 
   189  008E                     	;# 
   190  0091                     	;# 
   191  0092                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0098                     	;# 
   195  0099                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009E                     	;# 
   199  009F                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  0091                     	;# 
   251  0092                     	;# 
   252  0093                     	;# 
   253  0094                     	;# 
   254  0098                     	;# 
   255  0099                     	;# 
   256  009C                     	;# 
   257  009D                     	;# 
   258  009E                     	;# 
   259  009F                     	;# 
   260  010C                     	;# 
   261  010D                     	;# 
   262  010E                     	;# 
   263  010F                     	;# 
   264  018C                     	;# 
   265  018D                     	;# 
   266                           
   267                           	psect	idataCOMMON
   268  0716                     __pidataCOMMON:
   269                           
   270                           ;initializer for _pos
   271  0716  3402               	retlw	2
   272                           
   273                           	psect	idataBANK0
   274  0708                     __pidataBANK0:
   275                           
   276                           ;initializer for _B_rate
   277  0708  3480               	retlw	128
   278  0709  3425               	retlw	37
   279                           
   280                           ;initializer for _time_delay
   281  070A  3402               	retlw	2
   282  070B  3400               	retlw	0
   283                           
   284                           ;initializer for _flag_dc
   285  070C  3401               	retlw	1
   286                           
   287                           ;initializer for _LCD_SWAP_OLL
   288  070D  34FF               	retlw	255
   289                           
   290                           ;initializer for _OpenServo
   291  070E  3401               	retlw	1
   292                           
   293                           ;initializer for _BackLight_State
   294  070F  3408               	retlw	8
   295                           
   296                           	psect	nvBANK0
   297  004C                     __pnvBANK0:
   298  004C                     _i2c_add:
   299  004C                     	ds	1
   300  0019                     _TXREG	set	25
   301  0015                     _CCPR1L	set	21
   302  001E                     _ADRESH	set	30
   303  001A                     _RCREG	set	26
   304  0001                     _TMR0	set	1
   305  0013                     _SSPBUF	set	19
   306  0014                     _SSPCON	set	20
   307  00C6                     _RX9	set	198
   308  005E                     _PEIE	set	94
   309  00C4                     _CREN	set	196
   310  00C7                     _SPEN	set	199
   311  005C                     _INTE	set	92
   312  00BD                     _CCP1X	set	189
   313  00BC                     _CCP1Y	set	188
   314  0092                     _TMR2ON	set	146
   315  0091                     _T2CKPS1	set	145
   316  0090                     _T2CKPS0	set	144
   317  00BB                     _CCP1M3	set	187
   318  00BA                     _CCP1M2	set	186
   319  00FA                     _GO_DONE	set	250
   320  00FD                     _CHS2	set	253
   321  00FC                     _CHS1	set	252
   322  00FB                     _CHS0	set	251
   323  00F8                     _ADON	set	248
   324  00FF                     _ADCS1	set	255
   325  00FE                     _ADCS0	set	254
   326  005D                     _T0IE	set	93
   327  005F                     _GIE	set	95
   328  0065                     _RCIF	set	101
   329  0059                     _INTF	set	89
   330  005A                     _T0IF	set	90
   331  0032                     _RB2	set	50
   332  0031                     _RB1	set	49
   333  0035                     _RB5	set	53
   334  0036                     _RB6	set	54
   335  0063                     _SSPIF	set	99
   336  0099                     _SPBRG	set	153
   337  0092                     _PR2	set	146
   338  009E                     _ADRESL	set	158
   339  0093                     _SSPADD	set	147
   340  0094                     _SSPSTAT	set	148
   341  0091                     _SSPCON2	set	145
   342  04C6                     _TX9	set	1222
   343  0465                     _RCIE	set	1125
   344  04C5                     _TXEN	set	1221
   345  043F                     _TRISC7	set	1087
   346  043E                     _TRISC6	set	1086
   347  04C4                     _SYNC	set	1220
   348  04C2                     _BRGH	set	1218
   349  04C1                     _TRMT	set	1217
   350  040E                     _INTEDG	set	1038
   351  043A                     _TRISC2	set	1082
   352  04FB                     _PCFG3	set	1275
   353  04FA                     _PCFG2	set	1274
   354  04F9                     _PCFG1	set	1273
   355  04F8                     _PCFG0	set	1272
   356  04FE                     _ADCS2	set	1278
   357  04FF                     _ADFM	set	1279
   358  040D                     _T0CS	set	1037
   359  0408                     _PS0	set	1032
   360  0409                     _PS1	set	1033
   361  040A                     _PS2	set	1034
   362  040B                     _PSA	set	1035
   363  0430                     _TRISB0	set	1072
   364  0432                     _TRISB2	set	1074
   365  0431                     _TRISB1	set	1073
   366  0428                     _TRISA0	set	1064
   367  0435                     _TRISB5	set	1077
   368  0436                     _TRISB6	set	1078
   369  048E                     _ACKSTAT	set	1166
   370  048A                     _PEN	set	1162
   371  0488                     _SEN	set	1160
   372  043C                     _TRISC4	set	1084
   373  043B                     _TRISC3	set	1083
   374  010C                     _EEDATA	set	268
   375  010D                     _EEADR	set	269
   376  018D                     _EECON2	set	397
   377  018C                     _EECON1bits	set	396
   378  0C61                     _WR	set	3169
   379  0C67                     _EEPGD	set	3175
   380                           
   381                           	psect	strings
   382  04AD                     __pstrings:
   383  04AD                     stringtab:
   384  04AD                     __stringtab:
   385  04AD                     stringcode:	
   386                           ;	String table - string pointers are 1 byte each
   387                           
   388  04AD                     stringdir:
   389  04AD  3004               	movlw	high stringdir
   390  04AE  008A               	movwf	10
   391  04AF  0804               	movf	4,w
   392  04B0  0A84               	incf	4,f
   393  04B1  0782               	addwf	2,f
   394  04B2                     __stringbase:
   395  04B2  3400               	retlw	0
   396  04B3                     __end_of__stringtab:
   397  04B3                     STR_1:
   398  04B3  3420               	retlw	32	;' '
   399  04B4  3420               	retlw	32	;' '
   400  04B5  3420               	retlw	32	;' '
   401  04B6  3420               	retlw	32	;' '
   402  04B7  3456               	retlw	86	;'V'
   403  04B8  3449               	retlw	73	;'I'
   404  04B9  3420               	retlw	32	;' '
   405  04BA  3458               	retlw	88	;'X'
   406  04BB  3455               	retlw	85	;'U'
   407  04BC  3420               	retlw	32	;' '
   408  04BD  344C               	retlw	76	;'L'
   409  04BE  3459               	retlw	89	;'Y'
   410  04BF  3420               	retlw	32	;' '
   411  04C0  3420               	retlw	32	;' '
   412  04C1  3420               	retlw	32	;' '
   413  04C2  3420               	retlw	32	;' '
   414  04C3  3400               	retlw	0
   415  04C4                     STR_2:
   416  04C4  3420               	retlw	32	;' '
   417  04C5  3420               	retlw	32	;' '
   418  04C6  3420               	retlw	32	;' '
   419  04C7  3454               	retlw	84	;'T'
   420  04C8  3441               	retlw	65	;'A'
   421  04C9  344E               	retlw	78	;'N'
   422  04CA  3420               	retlw	32	;' '
   423  04CB  344D               	retlw	77	;'M'
   424  04CC  3441               	retlw	65	;'A'
   425  04CD  3449               	retlw	73	;'I'
   426  04CE  3420               	retlw	32	;' '
   427  04CF  344E               	retlw	78	;'N'
   428  04D0  3441               	retlw	65	;'A'
   429  04D1  344D               	retlw	77	;'M'
   430  04D2  3420               	retlw	32	;' '
   431  04D3  3420               	retlw	32	;' '
   432  04D4  3400               	retlw	0
   433  04D5                     STR_3:
   434  04D5  3420               	retlw	32	;' '
   435  04D6  3453               	retlw	83	;'S'
   436  04D7  3450               	retlw	80	;'P'
   437  04D8  3431               	retlw	49	;'1'
   438  04D9  3420               	retlw	32	;' '
   439  04DA  3420               	retlw	32	;' '
   440  04DB  3453               	retlw	83	;'S'
   441  04DC  3450               	retlw	80	;'P'
   442  04DD  3432               	retlw	50	;'2'
   443  04DE  3420               	retlw	32	;' '
   444  04DF  3420               	retlw	32	;' '
   445  04E0  3453               	retlw	83	;'S'
   446  04E1  3450               	retlw	80	;'P'
   447  04E2  3433               	retlw	51	;'3'
   448  04E3  3420               	retlw	32	;' '
   449  04E4  3400               	retlw	0
   450  04E5                     STR_4:
   451  04E5  3474               	retlw	116	;'t'
   452  04E6  346F               	retlw	111	;'o'
   453  04E7  3463               	retlw	99	;'c'
   454  04E8  3420               	retlw	32	;' '
   455  04E9  3464               	retlw	100	;'d'
   456  04EA  3469               	retlw	105	;'i'
   457  04EB  346E               	retlw	110	;'n'
   458  04EC  3400               	retlw	0
   459  04ED                     STR_6:
   460  04ED  3463               	retlw	99	;'c'
   461  04EE  3468               	retlw	104	;'h'
   462  04EF  3465               	retlw	101	;'e'
   463  04F0  3463               	retlw	99	;'c'
   464  04F1  346B               	retlw	107	;'k'
   465  04F2  340A               	retlw	10
   466  04F3  3400               	retlw	0
   467  04F4                     STR_5:
   468  04F4  3474               	retlw	116	;'t'
   469  04F5  346F               	retlw	111	;'o'
   470  04F6  3463               	retlw	99	;'c'
   471  04F7  3420               	retlw	32	;' '
   472  04F8  3464               	retlw	100	;'d'
   473  04F9  346F               	retlw	111	;'o'
   474  04FA  3400               	retlw	0
   475                           
   476                           	psect	cinit
   477  0015                     start_initialization:	
   478                           ; #config settings
   479                           
   480  0015                     __initialization:
   481                           
   482                           ; Initialize objects allocated to BANK0
   483  0015  1383               	bcf	3,7	;select IRP bank0
   484  0016  3045               	movlw	low (__pdataBANK0+8)
   485  0017  00FD               	movwf	btemp+-1
   486  0018  3007               	movlw	high __pidataBANK0
   487  0019  00FE               	movwf	btemp
   488  001A  3008               	movlw	low __pidataBANK0
   489  001B  00FF               	movwf	btemp+1
   490  001C  303D               	movlw	low __pdataBANK0
   491  001D  0084               	movwf	4
   492  001E  120A  118A  2679  120A  118A  	fcall	init_ram0
   493                           
   494                           ; Initialize objects allocated to COMMON
   495  0023  120A  118A  2716  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   496  0028  00FD               	movwf	__pdataCOMMON& (0+127)
   497                           
   498                           ; Clear objects allocated to BANK0
   499  0029  01C5               	clrf	__pbssBANK0& (0+127)
   500  002A  01C6               	clrf	(__pbssBANK0+1)& (0+127)
   501  002B  01C7               	clrf	(__pbssBANK0+2)& (0+127)
   502  002C  01C8               	clrf	(__pbssBANK0+3)& (0+127)
   503  002D  01C9               	clrf	(__pbssBANK0+4)& (0+127)
   504  002E  01CA               	clrf	(__pbssBANK0+5)& (0+127)
   505  002F  01CB               	clrf	(__pbssBANK0+6)& (0+127)
   506                           
   507                           ; Clear objects allocated to COMMON
   508  0030  01FA               	clrf	__pbssCOMMON& (0+127)
   509  0031  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   510  0032  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
   511  0033                     end_of_initialization:	
   512                           ;End of C runtime variable initialization code
   513                           
   514  0033                     __end_of__initialization:
   515  0033  0183               	clrf	3
   516  0034  120A  118A  2837   	ljmp	_main	;jump to C main() function
   517                           
   518                           	psect	bssCOMMON
   519  007A                     __pbssCOMMON:
   520  007A                     _result:
   521  007A                     	ds	1
   522  007B                     _cnt_pos:
   523  007B                     	ds	1
   524  007C                     _SelectServo:
   525  007C                     	ds	1
   526                           
   527                           	psect	dataCOMMON
   528  007D                     __pdataCOMMON:
   529  007D                     _pos:
   530  007D                     	ds	1
   531                           
   532                           	psect	bssBANK0
   533  0045                     __pbssBANK0:
   534  0045                     _cnt_time_delay:
   535  0045                     	ds	2
   536  0047                     _count_sp3:
   537  0047                     	ds	1
   538  0048                     _count_sp2:
   539  0048                     	ds	1
   540  0049                     _count_sp1:
   541  0049                     	ds	1
   542  004A                     _flag_trans:
   543  004A                     	ds	1
   544  004B                     _RS:
   545  004B                     	ds	1
   546                           
   547                           	psect	dataBANK0
   548  003D                     __pdataBANK0:
   549  003D                     _B_rate:
   550  003D                     	ds	2
   551  003F                     _time_delay:
   552  003F                     	ds	2
   553  0041                     _flag_dc:
   554  0041                     	ds	1
   555  0042                     _LCD_SWAP_OLL:
   556  0042                     	ds	1
   557  0043                     _OpenServo:
   558  0043                     	ds	1
   559  0044                     _BackLight_State:
   560  0044                     	ds	1
   561                           
   562                           	psect	inittext
   563  0675                     init_fetch0:	
   564                           ;	Called with low address in FSR and high address in W
   565                           
   566  0675  087E               	movf	btemp,w
   567  0676  008A               	movwf	10
   568  0677  087F               	movf	btemp+1,w
   569  0678  0082               	movwf	2
   570  0679                     init_ram0:	
   571                           ;Called with:
   572                           ;	high address of idata address in btemp 
   573                           ;	low address of idata address in btemp+1 
   574                           ;	low address of data in FSR
   575                           ;	high address + 1 of data in btemp-1
   576                           
   577  0679  120A  118A  2675  120A  118A  	fcall	init_fetch0
   578  067E  0080               	movwf	0
   579  067F  0A84               	incf	4,f
   580  0680  0804               	movf	4,w
   581  0681  067D               	xorwf	btemp+-1,w
   582  0682  1903               	btfsc	3,2
   583  0683  3400               	retlw	0
   584  0684  0AFF               	incf	btemp+1,f
   585  0685  1903               	btfsc	3,2
   586  0686  0AFE               	incf	btemp,f
   587  0687  2E79               	goto	init_ram0
   588                           
   589                           	psect	cstackCOMMON
   590  0070                     __pcstackCOMMON:
   591  0070                     ?_IO_Expander_Write:
   592  0070                     ?_LCD_CMD:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0070                     ?_Servo_Init:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0070                     ?_ADC_Init:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0070                     ?_init_PWM:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     ?_IR_Init:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ?_config_UART:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ?_EEPROM_Read:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0070                     ?_UART_send_string:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     ?_EEPROM_Write:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0070                     ?_I2C_Master_Init:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0070                     ?_I2C_Master_Wait:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0070                     ?_I2C_Master_Start:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0070                     ?_I2C_Master_Stop:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ?_I2C_Master_Write:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ?_LCD_Init:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0070                     ?_LCD_Write_4Bit:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ?_LCD_Write_Char:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0070                     ?_LCD_Write_String:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0070                     ?_LCD_Clear:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0070                     ?_main:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ?_isr1:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     ?_UART_send_char:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ??_UART_send_char:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ?i1_ADC_Read:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0070                     UART_send_char@bt:	
   665                           ; 2 bytes @ 0x0
   666                           
   667  0070                     EEPROM_Write@Data:	
   668                           ; 1 bytes @ 0x0
   669                           
   670                           
   671                           ; 1 bytes @ 0x0
   672  0070                     	ds	1
   673  0071                     ??_UART_send_string:
   674  0071                     ??_EEPROM_Write:	
   675                           ; 1 bytes @ 0x1
   676                           
   677  0071                     EEPROM_Write@Address:	
   678                           ; 1 bytes @ 0x1
   679                           
   680                           
   681                           ; 1 bytes @ 0x1
   682  0071                     	ds	1
   683  0072                     ??i1_ADC_Read:
   684  0072                     UART_send_string@st_pt:	
   685                           ; 1 bytes @ 0x2
   686                           
   687                           
   688                           ; 1 bytes @ 0x2
   689  0072                     	ds	1
   690  0073                     i1ADC_Read@result:
   691                           
   692                           ; 2 bytes @ 0x3
   693  0073                     	ds	2
   694  0075                     i1ADC_Read@ADC_channel:
   695                           
   696                           ; 1 bytes @ 0x5
   697  0075                     	ds	1
   698  0076                     ?i1_setPWM_DutyCycle:
   699  0076                     i1setPWM_DutyCycle@DC:	
   700                           ; 1 bytes @ 0x6
   701                           
   702                           
   703                           ; 2 bytes @ 0x6
   704  0076                     	ds	2
   705  0078                     ??i1_setPWM_DutyCycle:
   706                           
   707                           ; 1 bytes @ 0x8
   708  0078                     	ds	2
   709                           
   710                           	psect	cstackBANK0
   711  0020                     __pcstackBANK0:
   712  0020                     ??_isr1:
   713                           
   714                           ; 1 bytes @ 0x0
   715  0020                     	ds	8
   716  0028                     ??_Servo_Init:
   717  0028                     ??_ADC_Init:	
   718                           ; 1 bytes @ 0x8
   719                           
   720  0028                     ??_init_PWM:	
   721                           ; 1 bytes @ 0x8
   722                           
   723  0028                     ??_IR_Init:	
   724                           ; 1 bytes @ 0x8
   725                           
   726  0028                     ??_config_UART:	
   727                           ; 1 bytes @ 0x8
   728                           
   729  0028                     ??_EEPROM_Read:	
   730                           ; 1 bytes @ 0x8
   731                           
   732  0028                     ??_I2C_Master_Init:	
   733                           ; 1 bytes @ 0x8
   734                           
   735  0028                     ??_I2C_Master_Wait:	
   736                           ; 1 bytes @ 0x8
   737                           
   738  0028                     ??_I2C_Master_Start:	
   739                           ; 1 bytes @ 0x8
   740                           
   741  0028                     ??_I2C_Master_Stop:	
   742                           ; 1 bytes @ 0x8
   743                           
   744  0028                     ??_I2C_Master_Write:	
   745                           ; 1 bytes @ 0x8
   746                           
   747  0028                     ?_ADC_Read:	
   748                           ; 1 bytes @ 0x8
   749                           
   750  0028                     ?___awdiv:	
   751                           ; 2 bytes @ 0x8
   752                           
   753  0028                     ?___awmod:	
   754                           ; 2 bytes @ 0x8
   755                           
   756  0028                     I2C_Master_Write@data:	
   757                           ; 2 bytes @ 0x8
   758                           
   759  0028                     EEPROM_Read@Address:	
   760                           ; 1 bytes @ 0x8
   761                           
   762  0028                     ___awdiv@divisor:	
   763                           ; 1 bytes @ 0x8
   764                           
   765  0028                     ___awmod@divisor:	
   766                           ; 2 bytes @ 0x8
   767                           
   768                           
   769                           ; 2 bytes @ 0x8
   770  0028                     	ds	1
   771  0029                     ??_IO_Expander_Write:
   772  0029                     IO_Expander_Write@Data:	
   773                           ; 1 bytes @ 0x9
   774                           
   775                           
   776                           ; 1 bytes @ 0x9
   777  0029                     	ds	1
   778  002A                     ??_ADC_Read:
   779  002A                     ??_LCD_Write_4Bit:	
   780                           ; 1 bytes @ 0xA
   781                           
   782  002A                     ___awdiv@dividend:	
   783                           ; 1 bytes @ 0xA
   784                           
   785  002A                     ___awmod@dividend:	
   786                           ; 2 bytes @ 0xA
   787                           
   788                           
   789                           ; 2 bytes @ 0xA
   790  002A                     	ds	1
   791  002B                     LCD_Write_4Bit@Nibble:
   792  002B                     ADC_Read@result:	
   793                           ; 1 bytes @ 0xB
   794                           
   795                           
   796                           ; 2 bytes @ 0xB
   797  002B                     	ds	1
   798  002C                     ??_LCD_CMD:
   799  002C                     ??_LCD_Write_Char:	
   800                           ; 1 bytes @ 0xC
   801                           
   802  002C                     ??___awdiv:	
   803                           ; 1 bytes @ 0xC
   804                           
   805  002C                     ??___awmod:	
   806                           ; 1 bytes @ 0xC
   807                           
   808                           
   809                           ; 1 bytes @ 0xC
   810  002C                     	ds	1
   811  002D                     LCD_CMD@CMD:
   812  002D                     LCD_Write_Char@Data:	
   813                           ; 1 bytes @ 0xD
   814                           
   815  002D                     ADC_Read@ADC_channel:	
   816                           ; 1 bytes @ 0xD
   817                           
   818  002D                     ___awdiv@counter:	
   819                           ; 1 bytes @ 0xD
   820                           
   821  002D                     ___awmod@counter:	
   822                           ; 1 bytes @ 0xD
   823                           
   824                           
   825                           ; 1 bytes @ 0xD
   826  002D                     	ds	1
   827  002E                     ?_setPWM_DutyCycle:
   828  002E                     ??_LCD_Init:	
   829                           ; 1 bytes @ 0xE
   830                           
   831  002E                     ??_LCD_Write_String:	
   832                           ; 1 bytes @ 0xE
   833                           
   834  002E                     ?_LCD_Set_Cursor:	
   835                           ; 1 bytes @ 0xE
   836                           
   837  002E                     ??_LCD_Clear:	
   838                           ; 1 bytes @ 0xE
   839                           
   840  002E                     LCD_Set_Cursor@COL:	
   841                           ; 1 bytes @ 0xE
   842                           
   843  002E                     ___awdiv@sign:	
   844                           ; 1 bytes @ 0xE
   845                           
   846  002E                     ___awmod@sign:	
   847                           ; 1 bytes @ 0xE
   848                           
   849  002E                     LCD_Write_String@i:	
   850                           ; 1 bytes @ 0xE
   851                           
   852  002E                     setPWM_DutyCycle@DC:	
   853                           ; 2 bytes @ 0xE
   854                           
   855                           
   856                           ; 2 bytes @ 0xE
   857  002E                     	ds	1
   858  002F                     ??_LCD_Set_Cursor:
   859  002F                     ___awdiv@quotient:	
   860                           ; 1 bytes @ 0xF
   861                           
   862                           
   863                           ; 2 bytes @ 0xF
   864  002F                     	ds	1
   865  0030                     ??_setPWM_DutyCycle:
   866  0030                     LCD_Write_String@Str:	
   867                           ; 1 bytes @ 0x10
   868                           
   869                           
   870                           ; 1 bytes @ 0x10
   871  0030                     	ds	1
   872  0031                     LCD_Init@I2C_Add:
   873  0031                     LCD_Set_Cursor@ROW:	
   874                           ; 1 bytes @ 0x11
   875                           
   876                           
   877                           ; 1 bytes @ 0x11
   878  0031                     	ds	1
   879  0032                     ?_LCD_Write:
   880  0032                     LCD_Write@x:	
   881                           ; 1 bytes @ 0x12
   882                           
   883                           
   884                           ; 1 bytes @ 0x12
   885  0032                     	ds	1
   886  0033                     LCD_Write@y:
   887                           
   888                           ; 1 bytes @ 0x13
   889  0033                     	ds	1
   890  0034                     ??_LCD_Write:
   891                           
   892                           ; 1 bytes @ 0x14
   893  0034                     	ds	3
   894  0037                     LCD_Write@i:
   895                           
   896                           ; 1 bytes @ 0x17
   897  0037                     	ds	1
   898  0038                     LCD_Write@c:
   899                           
   900                           ; 1 bytes @ 0x18
   901  0038                     	ds	1
   902  0039                     LCD_Write@y_:
   903                           
   904                           ; 1 bytes @ 0x19
   905  0039                     	ds	1
   906  003A                     LCD_Write@count_sp:
   907                           
   908                           ; 1 bytes @ 0x1A
   909  003A                     	ds	1
   910  003B                     ??_main:
   911                           
   912                           ; 1 bytes @ 0x1B
   913  003B                     	ds	2
   914                           
   915                           	psect	maintext
   916  0037                     __pmaintext:	
   917 ;;
   918 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   919 ;;
   920 ;; *************** function _main *****************
   921 ;; Defined at:
   922 ;;		line 79 in file "BTL_HIHI_main.c"
   923 ;; Parameters:    Size  Location     Type
   924 ;;		None
   925 ;; Auto vars:     Size  Location     Type
   926 ;;  tmp             1    0        unsigned char 
   927 ;; Return value:  Size  Location     Type
   928 ;;                  1    wreg      void 
   929 ;; Registers used:
   930 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   931 ;; Tracked objects:
   932 ;;		On entry : B00/0
   933 ;;		On exit  : 0/0
   934 ;;		Unchanged: 0/0
   935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   936 ;;      Params:         0       0       0       0       0
   937 ;;      Locals:         0       0       0       0       0
   938 ;;      Temps:          0       2       0       0       0
   939 ;;      Totals:         0       2       0       0       0
   940 ;;Total ram usage:        2 bytes
   941 ;; Hardware stack levels required when called:   10
   942 ;; This function calls:
   943 ;;		_ADC_Init
   944 ;;		_ADC_Read
   945 ;;		_EEPROM_Read
   946 ;;		_I2C_Master_Init
   947 ;;		_IR_Init
   948 ;;		_LCD_Clear
   949 ;;		_LCD_Init
   950 ;;		_LCD_Set_Cursor
   951 ;;		_LCD_Write
   952 ;;		_LCD_Write_String
   953 ;;		_Servo_Init
   954 ;;		_config_UART
   955 ;;		_init_PWM
   956 ;;		_setPWM_DutyCycle
   957 ;; This function is called by:
   958 ;;		Startup code after reset
   959 ;; This function uses a non-reentrant model
   960 ;;
   961                           
   962                           
   963                           ;psect for function _main
   964  0037                     _main:
   965  0037                     l1874:	
   966                           ;incstack = 0
   967 ;; hardware stack exceeded
   968                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   969                           
   970                           
   971                           ;BTL_HIHI_main.c: 83:     I2C_Master_Init();
   972  0037  120A  118A  26D2  120A  118A  	fcall	_I2C_Master_Init
   973                           
   974                           ;BTL_HIHI_main.c: 86:     LCD_Init(0x4E);
   975  003C  304E               	movlw	78
   976  003D  120A  118A  223F  120A  118A  	fcall	_LCD_Init
   977  0042                     l1876:
   978                           
   979                           ;BTL_HIHI_main.c: 87:     LCD_Set_Cursor(1, 1);
   980  0042  1283               	bcf	3,5	;RP0=0, select bank0
   981  0043  1303               	bcf	3,6	;RP1=0, select bank0
   982  0044  01AE               	clrf	LCD_Set_Cursor@COL
   983  0045  0AAE               	incf	LCD_Set_Cursor@COL,f
   984  0046  3001               	movlw	1
   985  0047  120A  118A  2551  120A  118A  	fcall	_LCD_Set_Cursor
   986  004C                     l1878:
   987                           
   988                           ;BTL_HIHI_main.c: 88:     LCD_Write_String("    VI XU LY    ");
   989  004C  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   990  004D  120A  118A  2528  120A  118A  	fcall	_LCD_Write_String
   991  0052                     l1880:
   992                           
   993                           ;BTL_HIHI_main.c: 89:     LCD_Set_Cursor(2, 1);
   994  0052  1283               	bcf	3,5	;RP0=0, select bank0
   995  0053  1303               	bcf	3,6	;RP1=0, select bank0
   996  0054  01AE               	clrf	LCD_Set_Cursor@COL
   997  0055  0AAE               	incf	LCD_Set_Cursor@COL,f
   998  0056  3002               	movlw	2
   999  0057  120A  118A  2551  120A  118A  	fcall	_LCD_Set_Cursor
  1000  005C                     l1882:
  1001                           
  1002                           ;BTL_HIHI_main.c: 90:     LCD_Write_String("   TAN MAI NAM  ");
  1003  005C  3012               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1004  005D  120A  118A  2528  120A  118A  	fcall	_LCD_Write_String
  1005                           
  1006                           ;BTL_HIHI_main.c: 91:     LCD_Clear();
  1007  0062  120A  118A  26A9  120A  118A  	fcall	_LCD_Clear
  1008  0067                     l1884:
  1009                           
  1010                           ;BTL_HIHI_main.c: 94:     Servo_Init();
  1011  0067  120A  118A  26EB  120A  118A  	fcall	_Servo_Init
  1012  006C                     l1886:
  1013                           
  1014                           ;BTL_HIHI_main.c: 97:     ADC_Init();
  1015  006C  120A  118A  26B7  120A  118A  	fcall	_ADC_Init
  1016  0071                     l1888:
  1017                           
  1018                           ;BTL_HIHI_main.c: 98:     init_PWM();
  1019  0071  120A  118A  24FB  120A  118A  	fcall	_init_PWM
  1020  0076                     l1890:
  1021                           
  1022                           ;BTL_HIHI_main.c: 101:     IR_Init();
  1023  0076  120A  118A  2710  120A  118A  	fcall	_IR_Init
  1024  007B                     l1892:
  1025                           
  1026                           ;BTL_HIHI_main.c: 104:     config_UART();
  1027  007B  120A  118A  260D  120A  118A  	fcall	_config_UART
  1028  0080                     l1894:
  1029                           
  1030                           ;BTL_HIHI_main.c: 110:     TRISB6 = 0;
  1031  0080  1683               	bsf	3,5	;RP0=1, select bank1
  1032  0081  1303               	bcf	3,6	;RP1=0, select bank1
  1033  0082  1306               	bcf	6,6	;volatile
  1034  0083                     l1896:
  1035                           
  1036                           ;BTL_HIHI_main.c: 111:     TRISB5 = 0;
  1037  0083  1286               	bcf	6,5	;volatile
  1038  0084                     l1898:
  1039                           
  1040                           ;BTL_HIHI_main.c: 112:     RB6 = 1;
  1041  0084  1283               	bcf	3,5	;RP0=0, select bank0
  1042  0085  1303               	bcf	3,6	;RP1=0, select bank0
  1043  0086  1706               	bsf	6,6	;volatile
  1044  0087                     l1900:
  1045                           
  1046                           ;BTL_HIHI_main.c: 113:     RB5 = 1;
  1047  0087  1686               	bsf	6,5	;volatile
  1048  0088                     l1902:
  1049                           
  1050                           ;BTL_HIHI_main.c: 116:     TRISA0 = 1;
  1051  0088  1683               	bsf	3,5	;RP0=1, select bank1
  1052  0089  1303               	bcf	3,6	;RP1=0, select bank1
  1053  008A  1405               	bsf	5,0	;volatile
  1054  008B                     l1904:
  1055                           
  1056                           ;BTL_HIHI_main.c: 117:     TRISB1 = 0;
  1057  008B  1086               	bcf	6,1	;volatile
  1058  008C                     l1906:
  1059                           
  1060                           ;BTL_HIHI_main.c: 118:     TRISB2 = 0;
  1061  008C  1106               	bcf	6,2	;volatile
  1062  008D                     l1908:
  1063                           
  1064                           ;BTL_HIHI_main.c: 119:     RB1 = 0;
  1065  008D  1283               	bcf	3,5	;RP0=0, select bank0
  1066  008E  1303               	bcf	3,6	;RP1=0, select bank0
  1067  008F  1086               	bcf	6,1	;volatile
  1068  0090                     l1910:
  1069                           
  1070                           ;BTL_HIHI_main.c: 122:     TRISB0 = 1;
  1071  0090  1683               	bsf	3,5	;RP0=1, select bank1
  1072  0091  1303               	bcf	3,6	;RP1=0, select bank1
  1073  0092  1406               	bsf	6,0	;volatile
  1074  0093                     l1912:
  1075                           
  1076                           ;BTL_HIHI_main.c: 125:     uint8_t tmp;;BTL_HIHI_main.c: 126:     count_sp1 = EEPROM_Rea
      +                          d(0x00);
  1077  0093  3000               	movlw	0
  1078  0094  120A  118A  269A  120A  118A  	fcall	_EEPROM_Read
  1079  0099  1283               	bcf	3,5	;RP0=0, select bank0
  1080  009A  1303               	bcf	3,6	;RP1=0, select bank0
  1081  009B  00BB               	movwf	??_main
  1082  009C  083B               	movf	??_main,w
  1083  009D  00C9               	movwf	_count_sp1
  1084  009E                     l1914:
  1085                           
  1086                           ;BTL_HIHI_main.c: 127:     count_sp2 = EEPROM_Read(0x01);
  1087  009E  3001               	movlw	1
  1088  009F  120A  118A  269A  120A  118A  	fcall	_EEPROM_Read
  1089  00A4  1283               	bcf	3,5	;RP0=0, select bank0
  1090  00A5  1303               	bcf	3,6	;RP1=0, select bank0
  1091  00A6  00BB               	movwf	??_main
  1092  00A7  083B               	movf	??_main,w
  1093  00A8  00C8               	movwf	_count_sp2
  1094  00A9                     l1916:
  1095                           
  1096                           ;BTL_HIHI_main.c: 128:     count_sp3 = EEPROM_Read(0x02);
  1097  00A9  3002               	movlw	2
  1098  00AA  120A  118A  269A  120A  118A  	fcall	_EEPROM_Read
  1099  00AF  1283               	bcf	3,5	;RP0=0, select bank0
  1100  00B0  1303               	bcf	3,6	;RP1=0, select bank0
  1101  00B1  00BB               	movwf	??_main
  1102  00B2  083B               	movf	??_main,w
  1103  00B3  00C7               	movwf	_count_sp3
  1104  00B4                     l1918:
  1105  00B4  0842               	movf	_LCD_SWAP_OLL,w
  1106  00B5  1903               	btfsc	3,2
  1107  00B6  28B8               	goto	u1241
  1108  00B7  28B9               	goto	u1240
  1109  00B8                     u1241:
  1110  00B8  2902               	goto	l1934
  1111  00B9                     u1240:
  1112  00B9                     l1920:
  1113                           
  1114                           ;BTL_HIHI_main.c: 135:         {;BTL_HIHI_main.c: 136:             LCD_Clear();
  1115  00B9  120A  118A  26A9  120A  118A  	fcall	_LCD_Clear
  1116  00BE                     l1922:
  1117                           
  1118                           ;BTL_HIHI_main.c: 137:             LCD_Set_Cursor(1, 1);
  1119  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  1120  00BF  1303               	bcf	3,6	;RP1=0, select bank0
  1121  00C0  01AE               	clrf	LCD_Set_Cursor@COL
  1122  00C1  0AAE               	incf	LCD_Set_Cursor@COL,f
  1123  00C2  3001               	movlw	1
  1124  00C3  120A  118A  2551  120A  118A  	fcall	_LCD_Set_Cursor
  1125  00C8                     l1924:
  1126                           
  1127                           ;BTL_HIHI_main.c: 138:             LCD_Write_String(" SP1  SP2  SP3 ");
  1128  00C8  3023               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1129  00C9  120A  118A  2528  120A  118A  	fcall	_LCD_Write_String
  1130  00CE                     l1926:
  1131                           
  1132                           ;BTL_HIHI_main.c: 141:             LCD_Write(98, 2, 2);
  1133  00CE  3002               	movlw	2
  1134  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  1135  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  1136  00D1  00BB               	movwf	??_main
  1137  00D2  083B               	movf	??_main,w
  1138  00D3  00B2               	movwf	LCD_Write@x
  1139  00D4  3002               	movlw	2
  1140  00D5  00BC               	movwf	??_main+1
  1141  00D6  083C               	movf	??_main+1,w
  1142  00D7  00B3               	movwf	LCD_Write@y
  1143  00D8  3062               	movlw	98
  1144  00D9  120A  118A  23B0  120A  118A  	fcall	_LCD_Write
  1145  00DE                     l1928:
  1146                           
  1147                           ;BTL_HIHI_main.c: 142:             LCD_Write(38, 2, 7);
  1148  00DE  3002               	movlw	2
  1149  00DF  1283               	bcf	3,5	;RP0=0, select bank0
  1150  00E0  1303               	bcf	3,6	;RP1=0, select bank0
  1151  00E1  00BB               	movwf	??_main
  1152  00E2  083B               	movf	??_main,w
  1153  00E3  00B2               	movwf	LCD_Write@x
  1154  00E4  3007               	movlw	7
  1155  00E5  00BC               	movwf	??_main+1
  1156  00E6  083C               	movf	??_main+1,w
  1157  00E7  00B3               	movwf	LCD_Write@y
  1158  00E8  3026               	movlw	38
  1159  00E9  120A  118A  23B0  120A  118A  	fcall	_LCD_Write
  1160  00EE                     l1930:
  1161                           
  1162                           ;BTL_HIHI_main.c: 143:             LCD_Write(90, 2, 12);
  1163  00EE  3002               	movlw	2
  1164  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  1165  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  1166  00F1  00BB               	movwf	??_main
  1167  00F2  083B               	movf	??_main,w
  1168  00F3  00B2               	movwf	LCD_Write@x
  1169  00F4  300C               	movlw	12
  1170  00F5  00BC               	movwf	??_main+1
  1171  00F6  083C               	movf	??_main+1,w
  1172  00F7  00B3               	movwf	LCD_Write@y
  1173  00F8  305A               	movlw	90
  1174  00F9  120A  118A  23B0  120A  118A  	fcall	_LCD_Write
  1175  00FE                     l1932:
  1176                           
  1177                           ;BTL_HIHI_main.c: 145:             LCD_SWAP_OLL = 0;
  1178  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  1179  00FF  1303               	bcf	3,6	;RP1=0, select bank0
  1180  0100  01C2               	clrf	_LCD_SWAP_OLL
  1181                           
  1182                           ;BTL_HIHI_main.c: 146:         }
  1183  0101  2930               	goto	l1948
  1184  0102                     l1934:
  1185                           
  1186                           ;BTL_HIHI_main.c: 148:         {;BTL_HIHI_main.c: 149:             if (0 != LCD_SWAP_OLL
      +                          )
  1187  0102  0842               	movf	_LCD_SWAP_OLL,w
  1188  0103  1903               	btfsc	3,2
  1189  0104  2906               	goto	u1251
  1190  0105  2907               	goto	u1250
  1191  0106                     u1251:
  1192  0106  2930               	goto	l1948
  1193  0107                     u1250:
  1194  0107                     l1936:
  1195                           
  1196                           ;BTL_HIHI_main.c: 150:             {;BTL_HIHI_main.c: 151:                 LCD_Clear();
  1197  0107  120A  118A  26A9  120A  118A  	fcall	_LCD_Clear
  1198  010C                     l1938:
  1199                           
  1200                           ;BTL_HIHI_main.c: 152:                 LCD_Set_Cursor(1, 1);
  1201  010C  1283               	bcf	3,5	;RP0=0, select bank0
  1202  010D  1303               	bcf	3,6	;RP1=0, select bank0
  1203  010E  01AE               	clrf	LCD_Set_Cursor@COL
  1204  010F  0AAE               	incf	LCD_Set_Cursor@COL,f
  1205  0110  3001               	movlw	1
  1206  0111  120A  118A  2551  120A  118A  	fcall	_LCD_Set_Cursor
  1207  0116                     l1940:
  1208                           
  1209                           ;BTL_HIHI_main.c: 153:                 LCD_Write_String("toc din");
  1210  0116  3033               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1211  0117  120A  118A  2528  120A  118A  	fcall	_LCD_Write_String
  1212  011C                     l1942:
  1213                           
  1214                           ;BTL_HIHI_main.c: 154:                 LCD_Set_Cursor(2, 1);
  1215  011C  1283               	bcf	3,5	;RP0=0, select bank0
  1216  011D  1303               	bcf	3,6	;RP1=0, select bank0
  1217  011E  01AE               	clrf	LCD_Set_Cursor@COL
  1218  011F  0AAE               	incf	LCD_Set_Cursor@COL,f
  1219  0120  3002               	movlw	2
  1220  0121  120A  118A  2551  120A  118A  	fcall	_LCD_Set_Cursor
  1221  0126                     l1944:
  1222                           
  1223                           ;BTL_HIHI_main.c: 155:                 LCD_Write_String("toc do");
  1224  0126  3042               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1225  0127  120A  118A  2528  120A  118A  	fcall	_LCD_Write_String
  1226  012C                     l1946:
  1227                           
  1228                           ;BTL_HIHI_main.c: 157:                 LCD_SWAP_OLL = 1;
  1229  012C  1283               	bcf	3,5	;RP0=0, select bank0
  1230  012D  1303               	bcf	3,6	;RP1=0, select bank0
  1231  012E  01C2               	clrf	_LCD_SWAP_OLL
  1232  012F  0AC2               	incf	_LCD_SWAP_OLL,f
  1233  0130                     l1948:
  1234                           
  1235                           ;BTL_HIHI_main.c: 162:         if (OpenServo == 1)
  1236  0130  0343               	decf	_OpenServo,w
  1237  0131  1D03               	btfss	3,2
  1238  0132  2934               	goto	u1261
  1239  0133  2935               	goto	u1260
  1240  0134                     u1261:
  1241  0134  293A               	goto	l1952
  1242  0135                     u1260:
  1243  0135                     l1950:
  1244                           
  1245                           ;BTL_HIHI_main.c: 163:         {;BTL_HIHI_main.c: 164:             pos = 6;
  1246  0135  3006               	movlw	6
  1247  0136  00BB               	movwf	??_main
  1248  0137  083B               	movf	??_main,w
  1249  0138  00FD               	movwf	_pos
  1250                           
  1251                           ;BTL_HIHI_main.c: 165:         }
  1252  0139  293E               	goto	l1954
  1253  013A                     l1952:
  1254                           
  1255                           ;BTL_HIHI_main.c: 167:         {;BTL_HIHI_main.c: 168:             pos = 14;
  1256  013A  300E               	movlw	14
  1257  013B  00BB               	movwf	??_main
  1258  013C  083B               	movf	??_main,w
  1259  013D  00FD               	movwf	_pos
  1260  013E                     l1954:
  1261                           
  1262                           ;BTL_HIHI_main.c: 172:         setPWM_DutyCycle(ADC_Read(0));
  1263  013E  3000               	movlw	0
  1264  013F  120A  118A  2409  120A  118A  	fcall	_ADC_Read
  1265  0144  1283               	bcf	3,5	;RP0=0, select bank0
  1266  0145  1303               	bcf	3,6	;RP1=0, select bank0
  1267  0146  0829               	movf	?_ADC_Read+1,w
  1268  0147  00AF               	movwf	setPWM_DutyCycle@DC+1
  1269  0148  0828               	movf	?_ADC_Read,w
  1270  0149  00AE               	movwf	setPWM_DutyCycle@DC
  1271  014A  120A  118A  2643  120A  118A  	fcall	_setPWM_DutyCycle
  1272  014F                     l1956:
  1273                           
  1274                           ;BTL_HIHI_main.c: 175:         RB2 = flag_dc;
  1275  014F  1283               	bcf	3,5	;RP0=0, select bank0
  1276  0150  1303               	bcf	3,6	;RP1=0, select bank0
  1277  0151  1841               	btfsc	_flag_dc,0
  1278  0152  2954               	goto	u1271
  1279  0153  2958               	goto	u1270
  1280  0154                     u1271:
  1281  0154  1283               	bcf	3,5	;RP0=0, select bank0
  1282  0155  1303               	bcf	3,6	;RP1=0, select bank0
  1283  0156  1506               	bsf	6,2	;volatile
  1284  0157  295B               	goto	u1284
  1285  0158                     u1270:
  1286  0158  1283               	bcf	3,5	;RP0=0, select bank0
  1287  0159  1303               	bcf	3,6	;RP1=0, select bank0
  1288  015A  1106               	bcf	6,2	;volatile
  1289  015B                     u1284:
  1290  015B  28B4               	goto	l1918
  1291  015C  120A  118A  2812   	ljmp	start
  1292  015F                     __end_of_main:
  1293                           
  1294                           	psect	text1
  1295  0643                     __ptext1:	
  1296 ;; *************** function _setPWM_DutyCycle *****************
  1297 ;; Defined at:
  1298 ;;		line 398 in file "BTL_HIHI_main.c"
  1299 ;; Parameters:    Size  Location     Type
  1300 ;;  DC              2   14[BANK0 ] unsigned int 
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;		None
  1303 ;; Return value:  Size  Location     Type
  1304 ;;                  1    wreg      void 
  1305 ;; Registers used:
  1306 ;;		wreg, status,2, status,0
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1312 ;;      Params:         0       2       0       0       0
  1313 ;;      Locals:         0       0       0       0       0
  1314 ;;      Temps:          0       2       0       0       0
  1315 ;;      Totals:         0       4       0       0       0
  1316 ;;Total ram usage:        4 bytes
  1317 ;; Hardware stack levels used:    1
  1318 ;; Hardware stack levels required when called:    3
  1319 ;; This function calls:
  1320 ;;		Nothing
  1321 ;; This function is called by:
  1322 ;;		_main
  1323 ;; This function uses a non-reentrant model
  1324 ;;
  1325                           
  1326                           
  1327                           ;psect for function _setPWM_DutyCycle
  1328  0643                     _setPWM_DutyCycle:
  1329  0643                     l1808:	
  1330                           ;incstack = 0
  1331                           ; Regs used in _setPWM_DutyCycle: [wreg+status,2+status,0]
  1332                           
  1333                           
  1334                           ;BTL_HIHI_main.c: 398: void setPWM_DutyCycle(uint16_t DC);BTL_HIHI_main.c: 399: {;BTL_HI
      +                          HI_main.c: 403:     CCP1Y = DC & (1 << 0);
  1335  0643  1283               	bcf	3,5	;RP0=0, select bank0
  1336  0644  1303               	bcf	3,6	;RP1=0, select bank0
  1337  0645  182E               	btfsc	setPWM_DutyCycle@DC,0
  1338  0646  2E48               	goto	u1081
  1339  0647  2E4C               	goto	u1080
  1340  0648                     u1081:
  1341  0648  1283               	bcf	3,5	;RP0=0, select bank0
  1342  0649  1303               	bcf	3,6	;RP1=0, select bank0
  1343  064A  1617               	bsf	23,4	;volatile
  1344  064B  2E4F               	goto	u1094
  1345  064C                     u1080:
  1346  064C  1283               	bcf	3,5	;RP0=0, select bank0
  1347  064D  1303               	bcf	3,6	;RP1=0, select bank0
  1348  064E  1217               	bcf	23,4	;volatile
  1349  064F                     u1094:
  1350                           
  1351                           ;BTL_HIHI_main.c: 404:     CCP1X = DC & (1 << 1);
  1352  064F  1297               	bcf	23,5	;volatile
  1353  0650                     l1810:
  1354                           
  1355                           ;BTL_HIHI_main.c: 406:     CCPR1L = DC >> 2;
  1356  0650  082F               	movf	setPWM_DutyCycle@DC+1,w
  1357  0651  00B1               	movwf	??_setPWM_DutyCycle+1
  1358  0652  082E               	movf	setPWM_DutyCycle@DC,w
  1359  0653  00B0               	movwf	??_setPWM_DutyCycle
  1360  0654  1003               	clrc
  1361  0655  0CB1               	rrf	??_setPWM_DutyCycle+1,f
  1362  0656  0CB0               	rrf	??_setPWM_DutyCycle,f
  1363  0657  1003               	clrc
  1364  0658  0CB1               	rrf	??_setPWM_DutyCycle+1,f
  1365  0659  0CB0               	rrf	??_setPWM_DutyCycle,f
  1366  065A  0830               	movf	??_setPWM_DutyCycle,w
  1367  065B  0095               	movwf	21	;volatile
  1368  065C                     l365:
  1369  065C  0008               	return
  1370  065D                     __end_of_setPWM_DutyCycle:
  1371                           
  1372                           	psect	text2
  1373  04FB                     __ptext2:	
  1374 ;; *************** function _init_PWM *****************
  1375 ;; Defined at:
  1376 ;;		line 367 in file "BTL_HIHI_main.c"
  1377 ;; Parameters:    Size  Location     Type
  1378 ;;		None
  1379 ;; Auto vars:     Size  Location     Type
  1380 ;;		None
  1381 ;; Return value:  Size  Location     Type
  1382 ;;                  1    wreg      void 
  1383 ;; Registers used:
  1384 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1385 ;; Tracked objects:
  1386 ;;		On entry : 0/0
  1387 ;;		On exit  : 0/0
  1388 ;;		Unchanged: 0/0
  1389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1390 ;;      Params:         0       0       0       0       0
  1391 ;;      Locals:         0       0       0       0       0
  1392 ;;      Temps:          0       0       0       0       0
  1393 ;;      Totals:         0       0       0       0       0
  1394 ;;Total ram usage:        0 bytes
  1395 ;; Hardware stack levels used:    1
  1396 ;; Hardware stack levels required when called:    3
  1397 ;; This function calls:
  1398 ;;		Nothing
  1399 ;; This function is called by:
  1400 ;;		_main
  1401 ;; This function uses a non-reentrant model
  1402 ;;
  1403                           
  1404                           
  1405                           ;psect for function _init_PWM
  1406  04FB                     _init_PWM:
  1407  04FB                     l1724:	
  1408                           ;incstack = 0
  1409                           ; Regs used in _init_PWM: [wreg-fsr0h+status,2+status,0]
  1410                           
  1411                           
  1412                           ;BTL_HIHI_main.c: 370:     CCP1M2 = 1;
  1413  04FB  1283               	bcf	3,5	;RP0=0, select bank0
  1414  04FC  1303               	bcf	3,6	;RP1=0, select bank0
  1415  04FD  1517               	bsf	23,2	;volatile
  1416                           
  1417                           ;BTL_HIHI_main.c: 371:     CCP1M3 = 1;
  1418  04FE  1597               	bsf	23,3	;volatile
  1419                           
  1420                           ;BTL_HIHI_main.c: 373:     TRISC2 = 0;
  1421  04FF  1683               	bsf	3,5	;RP0=1, select bank1
  1422  0500  1303               	bcf	3,6	;RP1=0, select bank1
  1423  0501  1107               	bcf	7,2	;volatile
  1424                           
  1425                           ;BTL_HIHI_main.c: 375:     switch (1)
  1426  0502  2D11               	goto	l1726
  1427  0503                     l358:	
  1428                           ;BTL_HIHI_main.c: 376:     {;BTL_HIHI_main.c: 377:     case 1:
  1429                           
  1430                           
  1431                           ;BTL_HIHI_main.c: 378:     {;BTL_HIHI_main.c: 379:         T2CKPS0 = 0;
  1432  0503  1283               	bcf	3,5	;RP0=0, select bank0
  1433  0504  1303               	bcf	3,6	;RP1=0, select bank0
  1434  0505  1012               	bcf	18,0	;volatile
  1435                           
  1436                           ;BTL_HIHI_main.c: 380:         T2CKPS1 = 0;
  1437  0506  1092               	bcf	18,1	;volatile
  1438                           
  1439                           ;BTL_HIHI_main.c: 381:         break;
  1440  0507  2D21               	goto	l359
  1441  0508                     l360:	
  1442                           ;BTL_HIHI_main.c: 382:     };BTL_HIHI_main.c: 383:     case 4:
  1443                           
  1444                           
  1445                           ;BTL_HIHI_main.c: 384:     {;BTL_HIHI_main.c: 385:         T2CKPS0 = 1;
  1446  0508  1283               	bcf	3,5	;RP0=0, select bank0
  1447  0509  1303               	bcf	3,6	;RP1=0, select bank0
  1448  050A  1412               	bsf	18,0	;volatile
  1449                           
  1450                           ;BTL_HIHI_main.c: 386:         T2CKPS1 = 0;
  1451  050B  1092               	bcf	18,1	;volatile
  1452                           
  1453                           ;BTL_HIHI_main.c: 387:         break;
  1454  050C  2D21               	goto	l359
  1455  050D                     l361:	
  1456                           ;BTL_HIHI_main.c: 388:     };BTL_HIHI_main.c: 389:     case 16:
  1457                           
  1458                           
  1459                           ;BTL_HIHI_main.c: 390:         T2CKPS1 = 1;
  1460  050D  1283               	bcf	3,5	;RP0=0, select bank0
  1461  050E  1303               	bcf	3,6	;RP1=0, select bank0
  1462  050F  1492               	bsf	18,1	;volatile
  1463                           
  1464                           ;BTL_HIHI_main.c: 391:     }
  1465  0510  2D21               	goto	l359
  1466  0511                     l1726:
  1467                           
  1468                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1469                           ; Switch size 1, requested type "simple"
  1470                           ; Number of cases is 1, Range of values is 0 to 0
  1471                           ; switch strategies available:
  1472                           ; Name         Instructions Cycles
  1473                           ; simple_byte            4     3 (average)
  1474                           ; direct_byte           11     8 (fixed)
  1475                           ; jumptable            260     6 (fixed)
  1476                           ;	Chosen strategy is simple_byte
  1477  0511  3000               	movlw	0
  1478  0512  3A00               	xorlw	0	; case 0
  1479  0513  1903               	skipnz
  1480  0514  2D16               	goto	l2092
  1481  0515  2D21               	goto	l359
  1482  0516                     l2092:
  1483                           
  1484                           ; Switch size 1, requested type "simple"
  1485                           ; Number of cases is 3, Range of values is 1 to 16
  1486                           ; switch strategies available:
  1487                           ; Name         Instructions Cycles
  1488                           ; simple_byte           10     6 (average)
  1489                           ; direct_byte           59    11 (fixed)
  1490                           ; jumptable            263     9 (fixed)
  1491                           ;	Chosen strategy is simple_byte
  1492  0516  3001               	movlw	1
  1493  0517  3A01               	xorlw	1	; case 1
  1494  0518  1903               	skipnz
  1495  0519  2D03               	goto	l358
  1496  051A  3A05               	xorlw	5	; case 4
  1497  051B  1903               	skipnz
  1498  051C  2D08               	goto	l360
  1499  051D  3A14               	xorlw	20	; case 16
  1500  051E  1903               	skipnz
  1501  051F  2D0D               	goto	l361
  1502  0520  2D21               	goto	l359
  1503  0521                     l359:
  1504                           
  1505                           ;BTL_HIHI_main.c: 392:     TMR2ON = 1;
  1506  0521  1283               	bcf	3,5	;RP0=0, select bank0
  1507  0522  1512               	bsf	18,2	;volatile
  1508  0523                     l1728:
  1509                           
  1510                           ;BTL_HIHI_main.c: 394:     PR2 = ((float)(20000000 / 3950)) / (4 * 1) - 1;
  1511  0523  30F0               	movlw	240
  1512  0524  1683               	bsf	3,5	;RP0=1, select bank1
  1513  0525  1303               	bcf	3,6	;RP1=0, select bank1
  1514  0526  0092               	movwf	18	;volatile
  1515  0527                     l362:
  1516  0527  0008               	return
  1517  0528                     __end_of_init_PWM:
  1518                           
  1519                           	psect	text3
  1520  060D                     __ptext3:	
  1521 ;; *************** function _config_UART *****************
  1522 ;; Defined at:
  1523 ;;		line 431 in file "BTL_HIHI_main.c"
  1524 ;; Parameters:    Size  Location     Type
  1525 ;;		None
  1526 ;; Auto vars:     Size  Location     Type
  1527 ;;		None
  1528 ;; Return value:  Size  Location     Type
  1529 ;;                  1    wreg      void 
  1530 ;; Registers used:
  1531 ;;		wreg
  1532 ;; Tracked objects:
  1533 ;;		On entry : 0/0
  1534 ;;		On exit  : 0/0
  1535 ;;		Unchanged: 0/0
  1536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1537 ;;      Params:         0       0       0       0       0
  1538 ;;      Locals:         0       0       0       0       0
  1539 ;;      Temps:          0       0       0       0       0
  1540 ;;      Totals:         0       0       0       0       0
  1541 ;;Total ram usage:        0 bytes
  1542 ;; Hardware stack levels used:    1
  1543 ;; Hardware stack levels required when called:    3
  1544 ;; This function calls:
  1545 ;;		Nothing
  1546 ;; This function is called by:
  1547 ;;		_main
  1548 ;; This function uses a non-reentrant model
  1549 ;;
  1550                           
  1551                           
  1552                           ;psect for function _config_UART
  1553  060D                     _config_UART:
  1554  060D                     l1736:	
  1555                           ;incstack = 0
  1556                           ; Regs used in _config_UART: [wreg]
  1557                           
  1558                           
  1559                           ;BTL_HIHI_main.c: 434:     BRGH = 1;
  1560  060D  1683               	bsf	3,5	;RP0=1, select bank1
  1561  060E  1303               	bcf	3,6	;RP1=0, select bank1
  1562  060F  1518               	bsf	24,2	;volatile
  1563  0610                     l1738:
  1564                           
  1565                           ;BTL_HIHI_main.c: 435:     SPBRG = 129;
  1566  0610  3081               	movlw	129
  1567  0611  0099               	movwf	25	;volatile
  1568  0612                     l1740:
  1569                           
  1570                           ;BTL_HIHI_main.c: 437:     SYNC = 0;
  1571  0612  1218               	bcf	24,4	;volatile
  1572  0613                     l1742:
  1573                           
  1574                           ;BTL_HIHI_main.c: 438:     SPEN = 1;
  1575  0613  1283               	bcf	3,5	;RP0=0, select bank0
  1576  0614  1303               	bcf	3,6	;RP1=0, select bank0
  1577  0615  1798               	bsf	24,7	;volatile
  1578  0616                     l1744:
  1579                           
  1580                           ;BTL_HIHI_main.c: 440:     TRISC6 = 1;
  1581  0616  1683               	bsf	3,5	;RP0=1, select bank1
  1582  0617  1303               	bcf	3,6	;RP1=0, select bank1
  1583  0618  1707               	bsf	7,6	;volatile
  1584  0619                     l1746:
  1585                           
  1586                           ;BTL_HIHI_main.c: 441:     TRISC7 = 1;
  1587  0619  1787               	bsf	7,7	;volatile
  1588  061A                     l1748:
  1589                           
  1590                           ;BTL_HIHI_main.c: 443:     TXEN = 1;
  1591  061A  1698               	bsf	24,5	;volatile
  1592  061B                     l1750:
  1593                           
  1594                           ;BTL_HIHI_main.c: 444:     CREN = 1;
  1595  061B  1283               	bcf	3,5	;RP0=0, select bank0
  1596  061C  1303               	bcf	3,6	;RP1=0, select bank0
  1597  061D  1618               	bsf	24,4	;volatile
  1598  061E                     l1752:
  1599                           
  1600                           ;BTL_HIHI_main.c: 447:     RCIE = 1;
  1601  061E  1683               	bsf	3,5	;RP0=1, select bank1
  1602  061F  1303               	bcf	3,6	;RP1=0, select bank1
  1603  0620  168C               	bsf	12,5	;volatile
  1604  0621                     l1754:
  1605                           
  1606                           ;BTL_HIHI_main.c: 448:     PEIE = 1;
  1607  0621  170B               	bsf	11,6	;volatile
  1608  0622                     l1756:
  1609                           
  1610                           ;BTL_HIHI_main.c: 449:     GIE = 1;
  1611  0622  178B               	bsf	11,7	;volatile
  1612  0623                     l1758:
  1613                           
  1614                           ;BTL_HIHI_main.c: 451:     TX9 = 0;
  1615  0623  1318               	bcf	24,6	;volatile
  1616  0624                     l1760:
  1617                           
  1618                           ;BTL_HIHI_main.c: 452:     RX9 = 0;
  1619  0624  1283               	bcf	3,5	;RP0=0, select bank0
  1620  0625  1303               	bcf	3,6	;RP1=0, select bank0
  1621  0626  1318               	bcf	24,6	;volatile
  1622  0627                     l383:
  1623  0627  0008               	return
  1624  0628                     __end_of_config_UART:
  1625                           
  1626                           	psect	text4
  1627  06EB                     __ptext4:	
  1628 ;; *************** function _Servo_Init *****************
  1629 ;; Defined at:
  1630 ;;		line 278 in file "BTL_HIHI_main.c"
  1631 ;; Parameters:    Size  Location     Type
  1632 ;;		None
  1633 ;; Auto vars:     Size  Location     Type
  1634 ;;		None
  1635 ;; Return value:  Size  Location     Type
  1636 ;;                  1    wreg      void 
  1637 ;; Registers used:
  1638 ;;		None
  1639 ;; Tracked objects:
  1640 ;;		On entry : 0/0
  1641 ;;		On exit  : 0/0
  1642 ;;		Unchanged: 0/0
  1643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1644 ;;      Params:         0       0       0       0       0
  1645 ;;      Locals:         0       0       0       0       0
  1646 ;;      Temps:          0       0       0       0       0
  1647 ;;      Totals:         0       0       0       0       0
  1648 ;;Total ram usage:        0 bytes
  1649 ;; Hardware stack levels used:    1
  1650 ;; Hardware stack levels required when called:    3
  1651 ;; This function calls:
  1652 ;;		Nothing
  1653 ;; This function is called by:
  1654 ;;		_main
  1655 ;; This function uses a non-reentrant model
  1656 ;;
  1657                           
  1658                           
  1659                           ;psect for function _Servo_Init
  1660  06EB                     _Servo_Init:
  1661  06EB                     l1720:	
  1662                           ;incstack = 0
  1663                           ; Regs used in _Servo_Init: []
  1664                           
  1665                           
  1666                           ;BTL_HIHI_main.c: 281:     PSA = 0;
  1667  06EB  1683               	bsf	3,5	;RP0=1, select bank1
  1668  06EC  1303               	bcf	3,6	;RP1=0, select bank1
  1669  06ED  1181               	bcf	1,3	;volatile
  1670                           
  1671                           ;BTL_HIHI_main.c: 283:     PS2 = 0;
  1672  06EE  1101               	bcf	1,2	;volatile
  1673                           
  1674                           ;BTL_HIHI_main.c: 284:     PS1 = 0;
  1675  06EF  1081               	bcf	1,1	;volatile
  1676                           
  1677                           ;BTL_HIHI_main.c: 285:     PS0 = 0;
  1678  06F0  1001               	bcf	1,0	;volatile
  1679                           
  1680                           ;BTL_HIHI_main.c: 287:     T0CS = 0;
  1681  06F1  1281               	bcf	1,5	;volatile
  1682                           
  1683                           ;BTL_HIHI_main.c: 289:     GIE = 1;
  1684  06F2  178B               	bsf	11,7	;volatile
  1685                           
  1686                           ;BTL_HIHI_main.c: 290:     T0IE = 1;
  1687  06F3  168B               	bsf	11,5	;volatile
  1688                           
  1689                           ;BTL_HIHI_main.c: 291:     T0IF = 0;
  1690  06F4  110B               	bcf	11,2	;volatile
  1691  06F5                     l338:
  1692  06F5  0008               	return
  1693  06F6                     __end_of_Servo_Init:
  1694                           
  1695                           	psect	text5
  1696  0528                     __ptext5:	
  1697 ;; *************** function _LCD_Write_String *****************
  1698 ;; Defined at:
  1699 ;;		line 106 in file "I2C_LCD.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;  Str             1    wreg     PTR unsigned char 
  1702 ;;		 -> STR_5(7), STR_4(8), STR_3(16), STR_2(17), 
  1703 ;;		 -> STR_1(17), 
  1704 ;; Auto vars:     Size  Location     Type
  1705 ;;  Str             1   16[BANK0 ] PTR unsigned char 
  1706 ;;		 -> STR_5(7), STR_4(8), STR_3(16), STR_2(17), 
  1707 ;;		 -> STR_1(17), 
  1708 ;;  i               2   14[BANK0 ] int 
  1709 ;; Return value:  Size  Location     Type
  1710 ;;                  1    wreg      void 
  1711 ;; Registers used:
  1712 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1713 ;; Tracked objects:
  1714 ;;		On entry : 0/0
  1715 ;;		On exit  : 0/0
  1716 ;;		Unchanged: 0/0
  1717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1718 ;;      Params:         0       0       0       0       0
  1719 ;;      Locals:         0       3       0       0       0
  1720 ;;      Temps:          0       0       0       0       0
  1721 ;;      Totals:         0       3       0       0       0
  1722 ;;Total ram usage:        3 bytes
  1723 ;; Hardware stack levels used:    1
  1724 ;; Hardware stack levels required when called:    8
  1725 ;; This function calls:
  1726 ;;		_LCD_Write_Char
  1727 ;; This function is called by:
  1728 ;;		_main
  1729 ;; This function uses a non-reentrant model
  1730 ;;
  1731                           
  1732                           
  1733                           ;psect for function _LCD_Write_String
  1734  0528                     _LCD_Write_String:
  1735                           
  1736                           ;incstack = 0
  1737 ;; hardware stack exceeded
  1738                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1739                           ;LCD_Write_String@Str stored from wreg
  1740  0528  1283               	bcf	3,5	;RP0=0, select bank0
  1741  0529  1303               	bcf	3,6	;RP1=0, select bank0
  1742  052A  00B0               	movwf	LCD_Write_String@Str
  1743  052B                     l1708:
  1744                           
  1745                           ;I2C_LCD.c: 106: void LCD_Write_String(char *Str);I2C_LCD.c: 107: {;I2C_LCD.c: 108:   fo
      +                          r (int i = 0; Str[i] != '\0'; i++)
  1746  052B  01AE               	clrf	LCD_Write_String@i
  1747  052C  01AF               	clrf	LCD_Write_String@i+1
  1748  052D  2D43               	goto	l1714
  1749  052E                     l1710:
  1750                           
  1751                           ;I2C_LCD.c: 109:     LCD_Write_Char(Str[i]);
  1752  052E  082E               	movf	LCD_Write_String@i,w
  1753  052F  0730               	addwf	LCD_Write_String@Str,w
  1754  0530  0084               	movwf	4
  1755  0531  120A  118A  24AD  120A  118A  	fcall	stringdir
  1756  0536  120A  118A  2573  120A  118A  	fcall	_LCD_Write_Char
  1757  053B                     l1712:
  1758  053B  3001               	movlw	1
  1759  053C  1283               	bcf	3,5	;RP0=0, select bank0
  1760  053D  1303               	bcf	3,6	;RP1=0, select bank0
  1761  053E  07AE               	addwf	LCD_Write_String@i,f
  1762  053F  1803               	skipnc
  1763  0540  0AAF               	incf	LCD_Write_String@i+1,f
  1764  0541  3000               	movlw	0
  1765  0542  07AF               	addwf	LCD_Write_String@i+1,f
  1766  0543                     l1714:
  1767  0543  082E               	movf	LCD_Write_String@i,w
  1768  0544  0730               	addwf	LCD_Write_String@Str,w
  1769  0545  0084               	movwf	4
  1770  0546  120A  118A  24AD  120A  118A  	fcall	stringdir
  1771  054B  3A00               	xorlw	0
  1772  054C  1D03               	skipz
  1773  054D  2D4F               	goto	u961
  1774  054E  2D50               	goto	u960
  1775  054F                     u961:
  1776  054F  2D2E               	goto	l1710
  1777  0550                     u960:
  1778  0550                     l76:
  1779  0550  0008               	return
  1780  0551                     __end_of_LCD_Write_String:
  1781                           
  1782                           	psect	text6
  1783  03B0                     __ptext6:	
  1784 ;; *************** function _LCD_Write *****************
  1785 ;; Defined at:
  1786 ;;		line 295 in file "BTL_HIHI_main.c"
  1787 ;; Parameters:    Size  Location     Type
  1788 ;;  count_sp        1    wreg     unsigned char 
  1789 ;;  x               1   18[BANK0 ] unsigned char 
  1790 ;;  y               1   19[BANK0 ] unsigned char 
  1791 ;; Auto vars:     Size  Location     Type
  1792 ;;  count_sp        1   26[BANK0 ] unsigned char 
  1793 ;;  y_              1   25[BANK0 ] unsigned char 
  1794 ;;  c               1   24[BANK0 ] unsigned char 
  1795 ;;  i               1   23[BANK0 ] unsigned char 
  1796 ;; Return value:  Size  Location     Type
  1797 ;;                  1    wreg      void 
  1798 ;; Registers used:
  1799 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1800 ;; Tracked objects:
  1801 ;;		On entry : 0/0
  1802 ;;		On exit  : 0/0
  1803 ;;		Unchanged: 0/0
  1804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1805 ;;      Params:         0       2       0       0       0
  1806 ;;      Locals:         0       4       0       0       0
  1807 ;;      Temps:          0       3       0       0       0
  1808 ;;      Totals:         0       9       0       0       0
  1809 ;;Total ram usage:        9 bytes
  1810 ;; Hardware stack levels used:    1
  1811 ;; Hardware stack levels required when called:    9
  1812 ;; This function calls:
  1813 ;;		_LCD_Set_Cursor
  1814 ;;		_LCD_Write_Char
  1815 ;;		___awdiv
  1816 ;;		___awmod
  1817 ;; This function is called by:
  1818 ;;		_main
  1819 ;; This function uses a non-reentrant model
  1820 ;;
  1821                           
  1822                           
  1823                           ;psect for function _LCD_Write
  1824  03B0                     _LCD_Write:
  1825                           
  1826                           ;incstack = 0
  1827 ;; hardware stack exceeded
  1828                           ; Regs used in _LCD_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1829                           ;LCD_Write@count_sp stored from wreg
  1830  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  1831  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  1832  03B2  00BA               	movwf	LCD_Write@count_sp
  1833  03B3                     l1770:
  1834                           
  1835                           ;BTL_HIHI_main.c: 295: void LCD_Write(uint8_t count_sp, uint8_t x, uint8_t y);BTL_HIHI_m
      +                          ain.c: 296: {;BTL_HIHI_main.c: 297:     char c;;BTL_HIHI_main.c: 298:     uint8_t y_=y+2
      +                          ;
  1836  03B3  0833               	movf	LCD_Write@y,w
  1837  03B4  3E02               	addlw	2
  1838  03B5  00B4               	movwf	??_LCD_Write
  1839  03B6  0834               	movf	??_LCD_Write,w
  1840  03B7  00B9               	movwf	LCD_Write@y_
  1841  03B8                     l1772:
  1842                           
  1843                           ;BTL_HIHI_main.c: 299:     uint8_t i;;BTL_HIHI_main.c: 300:     for (i = 2; i >= 0; i--)
  1844  03B8  3002               	movlw	2
  1845  03B9  00B4               	movwf	??_LCD_Write
  1846  03BA  0834               	movf	??_LCD_Write,w
  1847  03BB  00B7               	movwf	LCD_Write@i
  1848  03BC                     l1776:
  1849                           
  1850                           ;BTL_HIHI_main.c: 301:     {;BTL_HIHI_main.c: 302:         c = count_sp % 10 + 48;
  1851  03BC  300A               	movlw	10
  1852  03BD  00A8               	movwf	___awmod@divisor
  1853  03BE  3000               	movlw	0
  1854  03BF  00A9               	movwf	___awmod@divisor+1
  1855  03C0  083A               	movf	LCD_Write@count_sp,w
  1856  03C1  00B4               	movwf	??_LCD_Write
  1857  03C2  01B5               	clrf	??_LCD_Write+1
  1858  03C3  0834               	movf	??_LCD_Write,w
  1859  03C4  00AA               	movwf	___awmod@dividend
  1860  03C5  0835               	movf	??_LCD_Write+1,w
  1861  03C6  00AB               	movwf	___awmod@dividend+1
  1862  03C7  120A  118A  2355  120A  118A  	fcall	___awmod
  1863  03CC  1283               	bcf	3,5	;RP0=0, select bank0
  1864  03CD  1303               	bcf	3,6	;RP1=0, select bank0
  1865  03CE  0828               	movf	?___awmod,w
  1866  03CF  3E30               	addlw	48
  1867  03D0  00B6               	movwf	??_LCD_Write+2
  1868  03D1  0836               	movf	??_LCD_Write+2,w
  1869  03D2  00B8               	movwf	LCD_Write@c
  1870  03D3                     l1778:
  1871                           
  1872                           ;BTL_HIHI_main.c: 304:         LCD_Set_Cursor(x, y_);
  1873  03D3  0839               	movf	LCD_Write@y_,w
  1874  03D4  00B4               	movwf	??_LCD_Write
  1875  03D5  0834               	movf	??_LCD_Write,w
  1876  03D6  00AE               	movwf	LCD_Set_Cursor@COL
  1877  03D7  0832               	movf	LCD_Write@x,w
  1878  03D8  120A  118A  2551  120A  118A  	fcall	_LCD_Set_Cursor
  1879  03DD                     l1780:
  1880                           
  1881                           ;BTL_HIHI_main.c: 305:         LCD_Write_Char(c);
  1882  03DD  1283               	bcf	3,5	;RP0=0, select bank0
  1883  03DE  1303               	bcf	3,6	;RP1=0, select bank0
  1884  03DF  0838               	movf	LCD_Write@c,w
  1885  03E0  120A  118A  2573  120A  118A  	fcall	_LCD_Write_Char
  1886  03E5                     l1782:
  1887                           
  1888                           ;BTL_HIHI_main.c: 306:         y_--;
  1889  03E5  3001               	movlw	1
  1890  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  1891  03E7  1303               	bcf	3,6	;RP1=0, select bank0
  1892  03E8  02B9               	subwf	LCD_Write@y_,f
  1893  03E9                     l1784:
  1894                           
  1895                           ;BTL_HIHI_main.c: 308:         count_sp /= 10;
  1896  03E9  300A               	movlw	10
  1897  03EA  00A8               	movwf	___awdiv@divisor
  1898  03EB  3000               	movlw	0
  1899  03EC  00A9               	movwf	___awdiv@divisor+1
  1900  03ED  083A               	movf	LCD_Write@count_sp,w
  1901  03EE  00B4               	movwf	??_LCD_Write
  1902  03EF  01B5               	clrf	??_LCD_Write+1
  1903  03F0  0834               	movf	??_LCD_Write,w
  1904  03F1  00AA               	movwf	___awdiv@dividend
  1905  03F2  0835               	movf	??_LCD_Write+1,w
  1906  03F3  00AB               	movwf	___awdiv@dividend+1
  1907  03F4  120A  118A  22EC  120A  118A  	fcall	___awdiv
  1908  03F9  1283               	bcf	3,5	;RP0=0, select bank0
  1909  03FA  1303               	bcf	3,6	;RP1=0, select bank0
  1910  03FB  0828               	movf	?___awdiv,w
  1911  03FC  00B6               	movwf	??_LCD_Write+2
  1912  03FD  0836               	movf	??_LCD_Write+2,w
  1913  03FE  00BA               	movwf	LCD_Write@count_sp
  1914  03FF                     l1786:
  1915                           
  1916                           ;BTL_HIHI_main.c: 309:         if(count_sp<=0)
  1917  03FF  083A               	movf	LCD_Write@count_sp,w
  1918  0400  1D03               	btfss	3,2
  1919  0401  2C03               	goto	u971
  1920  0402  2C04               	goto	u970
  1921  0403                     u971:
  1922  0403  2C05               	goto	l1790
  1923  0404                     u970:
  1924  0404  2C08               	goto	l344
  1925  0405                     l1790:
  1926                           
  1927                           ;BTL_HIHI_main.c: 313:     }
  1928  0405  3001               	movlw	1
  1929  0406  02B7               	subwf	LCD_Write@i,f
  1930  0407  2BBC               	goto	l1776
  1931  0408                     l344:
  1932  0408  0008               	return
  1933  0409                     __end_of_LCD_Write:
  1934                           
  1935                           	psect	text7
  1936  0355                     __ptext7:	
  1937 ;; *************** function ___awmod *****************
  1938 ;; Defined at:
  1939 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\awmod.c"
  1940 ;; Parameters:    Size  Location     Type
  1941 ;;  divisor         2    8[BANK0 ] int 
  1942 ;;  dividend        2   10[BANK0 ] int 
  1943 ;; Auto vars:     Size  Location     Type
  1944 ;;  sign            1   14[BANK0 ] unsigned char 
  1945 ;;  counter         1   13[BANK0 ] unsigned char 
  1946 ;; Return value:  Size  Location     Type
  1947 ;;                  2    8[BANK0 ] int 
  1948 ;; Registers used:
  1949 ;;		wreg, status,2, status,0
  1950 ;; Tracked objects:
  1951 ;;		On entry : 0/0
  1952 ;;		On exit  : 0/0
  1953 ;;		Unchanged: 0/0
  1954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1955 ;;      Params:         0       4       0       0       0
  1956 ;;      Locals:         0       2       0       0       0
  1957 ;;      Temps:          0       1       0       0       0
  1958 ;;      Totals:         0       7       0       0       0
  1959 ;;Total ram usage:        7 bytes
  1960 ;; Hardware stack levels used:    1
  1961 ;; Hardware stack levels required when called:    3
  1962 ;; This function calls:
  1963 ;;		Nothing
  1964 ;; This function is called by:
  1965 ;;		_LCD_Write
  1966 ;; This function uses a non-reentrant model
  1967 ;;
  1968                           
  1969                           
  1970                           ;psect for function ___awmod
  1971  0355                     ___awmod:
  1972  0355                     l1634:	
  1973                           ;incstack = 0
  1974                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1975                           
  1976  0355  1283               	bcf	3,5	;RP0=0, select bank0
  1977  0356  1303               	bcf	3,6	;RP1=0, select bank0
  1978  0357  01AE               	clrf	___awmod@sign
  1979  0358                     l1636:
  1980  0358  1FAB               	btfss	___awmod@dividend+1,7
  1981  0359  2B5B               	goto	u871
  1982  035A  2B5C               	goto	u870
  1983  035B                     u871:
  1984  035B  2B63               	goto	l1642
  1985  035C                     u870:
  1986  035C                     l1638:
  1987  035C  09AA               	comf	___awmod@dividend,f
  1988  035D  09AB               	comf	___awmod@dividend+1,f
  1989  035E  0AAA               	incf	___awmod@dividend,f
  1990  035F  1903               	skipnz
  1991  0360  0AAB               	incf	___awmod@dividend+1,f
  1992  0361                     l1640:
  1993  0361  01AE               	clrf	___awmod@sign
  1994  0362  0AAE               	incf	___awmod@sign,f
  1995  0363                     l1642:
  1996  0363  1FA9               	btfss	___awmod@divisor+1,7
  1997  0364  2B66               	goto	u881
  1998  0365  2B67               	goto	u880
  1999  0366                     u881:
  2000  0366  2B6C               	goto	l1646
  2001  0367                     u880:
  2002  0367                     l1644:
  2003  0367  09A8               	comf	___awmod@divisor,f
  2004  0368  09A9               	comf	___awmod@divisor+1,f
  2005  0369  0AA8               	incf	___awmod@divisor,f
  2006  036A  1903               	skipnz
  2007  036B  0AA9               	incf	___awmod@divisor+1,f
  2008  036C                     l1646:
  2009  036C  0828               	movf	___awmod@divisor,w
  2010  036D  0429               	iorwf	___awmod@divisor+1,w
  2011  036E  1903               	btfsc	3,2
  2012  036F  2B71               	goto	u891
  2013  0370  2B72               	goto	u890
  2014  0371                     u891:
  2015  0371  2BA1               	goto	l1664
  2016  0372                     u890:
  2017  0372                     l1648:
  2018  0372  01AD               	clrf	___awmod@counter
  2019  0373  0AAD               	incf	___awmod@counter,f
  2020  0374  2B80               	goto	l1654
  2021  0375                     l1650:
  2022  0375  3001               	movlw	1
  2023  0376                     u905:
  2024  0376  1003               	clrc
  2025  0377  0DA8               	rlf	___awmod@divisor,f
  2026  0378  0DA9               	rlf	___awmod@divisor+1,f
  2027  0379  3EFF               	addlw	-1
  2028  037A  1D03               	skipz
  2029  037B  2B76               	goto	u905
  2030  037C                     l1652:
  2031  037C  3001               	movlw	1
  2032  037D  00AC               	movwf	??___awmod
  2033  037E  082C               	movf	??___awmod,w
  2034  037F  07AD               	addwf	___awmod@counter,f
  2035  0380                     l1654:
  2036  0380  1FA9               	btfss	___awmod@divisor+1,7
  2037  0381  2B83               	goto	u911
  2038  0382  2B84               	goto	u910
  2039  0383                     u911:
  2040  0383  2B75               	goto	l1650
  2041  0384                     u910:
  2042  0384                     l1656:
  2043  0384  0829               	movf	___awmod@divisor+1,w
  2044  0385  022B               	subwf	___awmod@dividend+1,w
  2045  0386  1D03               	skipz
  2046  0387  2B8A               	goto	u925
  2047  0388  0828               	movf	___awmod@divisor,w
  2048  0389  022A               	subwf	___awmod@dividend,w
  2049  038A                     u925:
  2050  038A  1C03               	skipc
  2051  038B  2B8D               	goto	u921
  2052  038C  2B8E               	goto	u920
  2053  038D                     u921:
  2054  038D  2B94               	goto	l1660
  2055  038E                     u920:
  2056  038E                     l1658:
  2057  038E  0828               	movf	___awmod@divisor,w
  2058  038F  02AA               	subwf	___awmod@dividend,f
  2059  0390  0829               	movf	___awmod@divisor+1,w
  2060  0391  1C03               	skipc
  2061  0392  03AB               	decf	___awmod@dividend+1,f
  2062  0393  02AB               	subwf	___awmod@dividend+1,f
  2063  0394                     l1660:
  2064  0394  3001               	movlw	1
  2065  0395                     u935:
  2066  0395  1003               	clrc
  2067  0396  0CA9               	rrf	___awmod@divisor+1,f
  2068  0397  0CA8               	rrf	___awmod@divisor,f
  2069  0398  3EFF               	addlw	-1
  2070  0399  1D03               	skipz
  2071  039A  2B95               	goto	u935
  2072  039B                     l1662:
  2073  039B  3001               	movlw	1
  2074  039C  02AD               	subwf	___awmod@counter,f
  2075  039D  1D03               	btfss	3,2
  2076  039E  2BA0               	goto	u941
  2077  039F  2BA1               	goto	u940
  2078  03A0                     u941:
  2079  03A0  2B84               	goto	l1656
  2080  03A1                     u940:
  2081  03A1                     l1664:
  2082  03A1  082E               	movf	___awmod@sign,w
  2083  03A2  1903               	btfsc	3,2
  2084  03A3  2BA5               	goto	u951
  2085  03A4  2BA6               	goto	u950
  2086  03A5                     u951:
  2087  03A5  2BAB               	goto	l1668
  2088  03A6                     u950:
  2089  03A6                     l1666:
  2090  03A6  09AA               	comf	___awmod@dividend,f
  2091  03A7  09AB               	comf	___awmod@dividend+1,f
  2092  03A8  0AAA               	incf	___awmod@dividend,f
  2093  03A9  1903               	skipnz
  2094  03AA  0AAB               	incf	___awmod@dividend+1,f
  2095  03AB                     l1668:
  2096  03AB  082B               	movf	___awmod@dividend+1,w
  2097  03AC  00A9               	movwf	?___awmod+1
  2098  03AD  082A               	movf	___awmod@dividend,w
  2099  03AE  00A8               	movwf	?___awmod
  2100  03AF                     l644:
  2101  03AF  0008               	return
  2102  03B0                     __end_of___awmod:
  2103                           
  2104                           	psect	text8
  2105  02EC                     __ptext8:	
  2106 ;; *************** function ___awdiv *****************
  2107 ;; Defined at:
  2108 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\awdiv.c"
  2109 ;; Parameters:    Size  Location     Type
  2110 ;;  divisor         2    8[BANK0 ] int 
  2111 ;;  dividend        2   10[BANK0 ] int 
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;  quotient        2   15[BANK0 ] int 
  2114 ;;  sign            1   14[BANK0 ] unsigned char 
  2115 ;;  counter         1   13[BANK0 ] unsigned char 
  2116 ;; Return value:  Size  Location     Type
  2117 ;;                  2    8[BANK0 ] int 
  2118 ;; Registers used:
  2119 ;;		wreg, status,2, status,0
  2120 ;; Tracked objects:
  2121 ;;		On entry : 0/0
  2122 ;;		On exit  : 0/0
  2123 ;;		Unchanged: 0/0
  2124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2125 ;;      Params:         0       4       0       0       0
  2126 ;;      Locals:         0       4       0       0       0
  2127 ;;      Temps:          0       1       0       0       0
  2128 ;;      Totals:         0       9       0       0       0
  2129 ;;Total ram usage:        9 bytes
  2130 ;; Hardware stack levels used:    1
  2131 ;; Hardware stack levels required when called:    3
  2132 ;; This function calls:
  2133 ;;		Nothing
  2134 ;; This function is called by:
  2135 ;;		_LCD_Write
  2136 ;; This function uses a non-reentrant model
  2137 ;;
  2138                           
  2139                           
  2140                           ;psect for function ___awdiv
  2141  02EC                     ___awdiv:
  2142  02EC                     l1590:	
  2143                           ;incstack = 0
  2144                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2145                           
  2146  02EC  1283               	bcf	3,5	;RP0=0, select bank0
  2147  02ED  1303               	bcf	3,6	;RP1=0, select bank0
  2148  02EE  01AE               	clrf	___awdiv@sign
  2149  02EF                     l1592:
  2150  02EF  1FA9               	btfss	___awdiv@divisor+1,7
  2151  02F0  2AF2               	goto	u771
  2152  02F1  2AF3               	goto	u770
  2153  02F2                     u771:
  2154  02F2  2AFA               	goto	l1598
  2155  02F3                     u770:
  2156  02F3                     l1594:
  2157  02F3  09A8               	comf	___awdiv@divisor,f
  2158  02F4  09A9               	comf	___awdiv@divisor+1,f
  2159  02F5  0AA8               	incf	___awdiv@divisor,f
  2160  02F6  1903               	skipnz
  2161  02F7  0AA9               	incf	___awdiv@divisor+1,f
  2162  02F8                     l1596:
  2163  02F8  01AE               	clrf	___awdiv@sign
  2164  02F9  0AAE               	incf	___awdiv@sign,f
  2165  02FA                     l1598:
  2166  02FA  1FAB               	btfss	___awdiv@dividend+1,7
  2167  02FB  2AFD               	goto	u781
  2168  02FC  2AFE               	goto	u780
  2169  02FD                     u781:
  2170  02FD  2B07               	goto	l1604
  2171  02FE                     u780:
  2172  02FE                     l1600:
  2173  02FE  09AA               	comf	___awdiv@dividend,f
  2174  02FF  09AB               	comf	___awdiv@dividend+1,f
  2175  0300  0AAA               	incf	___awdiv@dividend,f
  2176  0301  1903               	skipnz
  2177  0302  0AAB               	incf	___awdiv@dividend+1,f
  2178  0303                     l1602:
  2179  0303  3001               	movlw	1
  2180  0304  00AC               	movwf	??___awdiv
  2181  0305  082C               	movf	??___awdiv,w
  2182  0306  06AE               	xorwf	___awdiv@sign,f
  2183  0307                     l1604:
  2184  0307  01AF               	clrf	___awdiv@quotient
  2185  0308  01B0               	clrf	___awdiv@quotient+1
  2186  0309                     l1606:
  2187  0309  0828               	movf	___awdiv@divisor,w
  2188  030A  0429               	iorwf	___awdiv@divisor+1,w
  2189  030B  1903               	btfsc	3,2
  2190  030C  2B0E               	goto	u791
  2191  030D  2B0F               	goto	u790
  2192  030E                     u791:
  2193  030E  2B46               	goto	l1626
  2194  030F                     u790:
  2195  030F                     l1608:
  2196  030F  01AD               	clrf	___awdiv@counter
  2197  0310  0AAD               	incf	___awdiv@counter,f
  2198  0311  2B1D               	goto	l1614
  2199  0312                     l1610:
  2200  0312  3001               	movlw	1
  2201  0313                     u805:
  2202  0313  1003               	clrc
  2203  0314  0DA8               	rlf	___awdiv@divisor,f
  2204  0315  0DA9               	rlf	___awdiv@divisor+1,f
  2205  0316  3EFF               	addlw	-1
  2206  0317  1D03               	skipz
  2207  0318  2B13               	goto	u805
  2208  0319                     l1612:
  2209  0319  3001               	movlw	1
  2210  031A  00AC               	movwf	??___awdiv
  2211  031B  082C               	movf	??___awdiv,w
  2212  031C  07AD               	addwf	___awdiv@counter,f
  2213  031D                     l1614:
  2214  031D  1FA9               	btfss	___awdiv@divisor+1,7
  2215  031E  2B20               	goto	u811
  2216  031F  2B21               	goto	u810
  2217  0320                     u811:
  2218  0320  2B12               	goto	l1610
  2219  0321                     u810:
  2220  0321                     l1616:
  2221  0321  3001               	movlw	1
  2222  0322                     u825:
  2223  0322  1003               	clrc
  2224  0323  0DAF               	rlf	___awdiv@quotient,f
  2225  0324  0DB0               	rlf	___awdiv@quotient+1,f
  2226  0325  3EFF               	addlw	-1
  2227  0326  1D03               	skipz
  2228  0327  2B22               	goto	u825
  2229  0328  0829               	movf	___awdiv@divisor+1,w
  2230  0329  022B               	subwf	___awdiv@dividend+1,w
  2231  032A  1D03               	skipz
  2232  032B  2B2E               	goto	u835
  2233  032C  0828               	movf	___awdiv@divisor,w
  2234  032D  022A               	subwf	___awdiv@dividend,w
  2235  032E                     u835:
  2236  032E  1C03               	skipc
  2237  032F  2B31               	goto	u831
  2238  0330  2B32               	goto	u830
  2239  0331                     u831:
  2240  0331  2B39               	goto	l1622
  2241  0332                     u830:
  2242  0332                     l1618:
  2243  0332  0828               	movf	___awdiv@divisor,w
  2244  0333  02AA               	subwf	___awdiv@dividend,f
  2245  0334  0829               	movf	___awdiv@divisor+1,w
  2246  0335  1C03               	skipc
  2247  0336  03AB               	decf	___awdiv@dividend+1,f
  2248  0337  02AB               	subwf	___awdiv@dividend+1,f
  2249  0338                     l1620:
  2250  0338  142F               	bsf	___awdiv@quotient,0
  2251  0339                     l1622:
  2252  0339  3001               	movlw	1
  2253  033A                     u845:
  2254  033A  1003               	clrc
  2255  033B  0CA9               	rrf	___awdiv@divisor+1,f
  2256  033C  0CA8               	rrf	___awdiv@divisor,f
  2257  033D  3EFF               	addlw	-1
  2258  033E  1D03               	skipz
  2259  033F  2B3A               	goto	u845
  2260  0340                     l1624:
  2261  0340  3001               	movlw	1
  2262  0341  02AD               	subwf	___awdiv@counter,f
  2263  0342  1D03               	btfss	3,2
  2264  0343  2B45               	goto	u851
  2265  0344  2B46               	goto	u850
  2266  0345                     u851:
  2267  0345  2B21               	goto	l1616
  2268  0346                     u850:
  2269  0346                     l1626:
  2270  0346  082E               	movf	___awdiv@sign,w
  2271  0347  1903               	btfsc	3,2
  2272  0348  2B4A               	goto	u861
  2273  0349  2B4B               	goto	u860
  2274  034A                     u861:
  2275  034A  2B50               	goto	l1630
  2276  034B                     u860:
  2277  034B                     l1628:
  2278  034B  09AF               	comf	___awdiv@quotient,f
  2279  034C  09B0               	comf	___awdiv@quotient+1,f
  2280  034D  0AAF               	incf	___awdiv@quotient,f
  2281  034E  1903               	skipnz
  2282  034F  0AB0               	incf	___awdiv@quotient+1,f
  2283  0350                     l1630:
  2284  0350  0830               	movf	___awdiv@quotient+1,w
  2285  0351  00A9               	movwf	?___awdiv+1
  2286  0352  082F               	movf	___awdiv@quotient,w
  2287  0353  00A8               	movwf	?___awdiv
  2288  0354                     l631:
  2289  0354  0008               	return
  2290  0355                     __end_of___awdiv:
  2291                           
  2292                           	psect	text9
  2293  0573                     __ptext9:	
  2294 ;; *************** function _LCD_Write_Char *****************
  2295 ;; Defined at:
  2296 ;;		line 99 in file "I2C_LCD.c"
  2297 ;; Parameters:    Size  Location     Type
  2298 ;;  Data            1    wreg     unsigned char 
  2299 ;; Auto vars:     Size  Location     Type
  2300 ;;  Data            1   13[BANK0 ] unsigned char 
  2301 ;; Return value:  Size  Location     Type
  2302 ;;                  1    wreg      void 
  2303 ;; Registers used:
  2304 ;;		wreg, status,2, status,0, pclath, cstack
  2305 ;; Tracked objects:
  2306 ;;		On entry : 0/0
  2307 ;;		On exit  : 0/0
  2308 ;;		Unchanged: 0/0
  2309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2310 ;;      Params:         0       0       0       0       0
  2311 ;;      Locals:         0       1       0       0       0
  2312 ;;      Temps:          0       1       0       0       0
  2313 ;;      Totals:         0       2       0       0       0
  2314 ;;Total ram usage:        2 bytes
  2315 ;; Hardware stack levels used:    1
  2316 ;; Hardware stack levels required when called:    7
  2317 ;; This function calls:
  2318 ;;		_LCD_Write_4Bit
  2319 ;; This function is called by:
  2320 ;;		_LCD_Write_String
  2321 ;;		_LCD_Write
  2322 ;; This function uses a non-reentrant model
  2323 ;;
  2324                           
  2325                           
  2326                           ;psect for function _LCD_Write_Char
  2327  0573                     _LCD_Write_Char:
  2328                           
  2329                           ;incstack = 0
  2330 ;; hardware stack exceeded
  2331                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2332                           ;LCD_Write_Char@Data stored from wreg
  2333  0573  1283               	bcf	3,5	;RP0=0, select bank0
  2334  0574  1303               	bcf	3,6	;RP1=0, select bank0
  2335  0575  00AD               	movwf	LCD_Write_Char@Data
  2336  0576                     l1568:
  2337                           
  2338                           ;I2C_LCD.c: 99: void LCD_Write_Char(char Data);I2C_LCD.c: 100: {;I2C_LCD.c: 101:   RS = 
      +                          1;
  2339  0576  01CB               	clrf	_RS
  2340  0577  0ACB               	incf	_RS,f
  2341  0578                     l1570:
  2342                           
  2343                           ;I2C_LCD.c: 102:   LCD_Write_4Bit(Data & 0xF0);
  2344  0578  082D               	movf	LCD_Write_Char@Data,w
  2345  0579  39F0               	andlw	240
  2346  057A  120A  118A  2592  120A  118A  	fcall	_LCD_Write_4Bit
  2347                           
  2348                           ;I2C_LCD.c: 103:   LCD_Write_4Bit((Data << 4) & 0xF0);
  2349  057F  1283               	bcf	3,5	;RP0=0, select bank0
  2350  0580  1303               	bcf	3,6	;RP1=0, select bank0
  2351  0581  082D               	movf	LCD_Write_Char@Data,w
  2352  0582  00AC               	movwf	??_LCD_Write_Char
  2353  0583  3003               	movlw	3
  2354  0584                     u755:
  2355  0584  1003               	clrc
  2356  0585  0DAC               	rlf	??_LCD_Write_Char,f
  2357  0586  3EFF               	addlw	-1
  2358  0587  1D03               	skipz
  2359  0588  2D84               	goto	u755
  2360  0589  1003               	clrc
  2361  058A  0D2C               	rlf	??_LCD_Write_Char,w
  2362  058B  39F0               	andlw	240
  2363  058C  120A  118A  2592  120A  118A  	fcall	_LCD_Write_4Bit
  2364  0591                     l70:
  2365  0591  0008               	return
  2366  0592                     __end_of_LCD_Write_Char:
  2367                           
  2368                           	psect	text10
  2369  0551                     __ptext10:	
  2370 ;; *************** function _LCD_Set_Cursor *****************
  2371 ;; Defined at:
  2372 ;;		line 112 in file "I2C_LCD.c"
  2373 ;; Parameters:    Size  Location     Type
  2374 ;;  ROW             1    wreg     unsigned char 
  2375 ;;  COL             1   14[BANK0 ] unsigned char 
  2376 ;; Auto vars:     Size  Location     Type
  2377 ;;  ROW             1   17[BANK0 ] unsigned char 
  2378 ;; Return value:  Size  Location     Type
  2379 ;;                  1    wreg      void 
  2380 ;; Registers used:
  2381 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2382 ;; Tracked objects:
  2383 ;;		On entry : 0/0
  2384 ;;		On exit  : 0/0
  2385 ;;		Unchanged: 0/0
  2386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2387 ;;      Params:         0       1       0       0       0
  2388 ;;      Locals:         0       1       0       0       0
  2389 ;;      Temps:          0       2       0       0       0
  2390 ;;      Totals:         0       4       0       0       0
  2391 ;;Total ram usage:        4 bytes
  2392 ;; Hardware stack levels used:    1
  2393 ;; Hardware stack levels required when called:    8
  2394 ;; This function calls:
  2395 ;;		_LCD_CMD
  2396 ;; This function is called by:
  2397 ;;		_main
  2398 ;;		_LCD_Write
  2399 ;; This function uses a non-reentrant model
  2400 ;;
  2401                           
  2402                           
  2403                           ;psect for function _LCD_Set_Cursor
  2404  0551                     _LCD_Set_Cursor:
  2405                           
  2406                           ;incstack = 0
  2407 ;; hardware stack exceeded
  2408                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2409                           ;LCD_Set_Cursor@ROW stored from wreg
  2410  0551  1283               	bcf	3,5	;RP0=0, select bank0
  2411  0552  1303               	bcf	3,6	;RP1=0, select bank0
  2412  0553  00B1               	movwf	LCD_Set_Cursor@ROW
  2413  0554                     l1572:
  2414                           
  2415                           ;I2C_LCD.c: 112: void LCD_Set_Cursor(unsigned char ROW, unsigned char COL);I2C_LCD.c: 11
      +                          3: {;I2C_LCD.c: 114:   switch (ROW)
  2416  0554  2D65               	goto	l1578
  2417  0555                     l1574:
  2418                           
  2419                           ;I2C_LCD.c: 117:     LCD_CMD(0xC0 + COL - 1);
  2420  0555  082E               	movf	LCD_Set_Cursor@COL,w
  2421  0556  3EBF               	addlw	191
  2422  0557  120A  118A  25EF  120A  118A  	fcall	_LCD_CMD
  2423                           
  2424                           ;I2C_LCD.c: 118:     break;
  2425  055C  2D72               	goto	l83
  2426  055D                     l1576:
  2427                           
  2428                           ;I2C_LCD.c: 122:     LCD_CMD(0x80 + COL - 1);
  2429  055D  082E               	movf	LCD_Set_Cursor@COL,w
  2430  055E  3E7F               	addlw	127
  2431  055F  120A  118A  25EF  120A  118A  	fcall	_LCD_CMD
  2432                           
  2433                           ;I2C_LCD.c: 123:   }
  2434  0564  2D72               	goto	l83
  2435  0565                     l1578:
  2436  0565  0831               	movf	LCD_Set_Cursor@ROW,w
  2437  0566  00AF               	movwf	??_LCD_Set_Cursor
  2438  0567  01B0               	clrf	??_LCD_Set_Cursor+1
  2439                           
  2440                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2441                           ; Switch size 1, requested type "simple"
  2442                           ; Number of cases is 1, Range of values is 0 to 0
  2443                           ; switch strategies available:
  2444                           ; Name         Instructions Cycles
  2445                           ; simple_byte            4     3 (average)
  2446                           ; direct_byte           11     8 (fixed)
  2447                           ; jumptable            260     6 (fixed)
  2448                           ;	Chosen strategy is simple_byte
  2449  0568  0830               	movf	??_LCD_Set_Cursor+1,w
  2450  0569  3A00               	xorlw	0	; case 0
  2451  056A  1903               	skipnz
  2452  056B  2D6D               	goto	l2094
  2453  056C  2D5D               	goto	l1576
  2454  056D                     l2094:
  2455                           
  2456                           ; Switch size 1, requested type "simple"
  2457                           ; Number of cases is 1, Range of values is 2 to 2
  2458                           ; switch strategies available:
  2459                           ; Name         Instructions Cycles
  2460                           ; simple_byte            4     3 (average)
  2461                           ; direct_byte           14    11 (fixed)
  2462                           ; jumptable            263     9 (fixed)
  2463                           ;	Chosen strategy is simple_byte
  2464  056D  082F               	movf	??_LCD_Set_Cursor,w
  2465  056E  3A02               	xorlw	2	; case 2
  2466  056F  1903               	skipnz
  2467  0570  2D55               	goto	l1574
  2468  0571  2D5D               	goto	l1576
  2469  0572                     l83:
  2470  0572  0008               	return
  2471  0573                     __end_of_LCD_Set_Cursor:
  2472                           
  2473                           	psect	text11
  2474  023F                     __ptext11:	
  2475 ;; *************** function _LCD_Init *****************
  2476 ;; Defined at:
  2477 ;;		line 52 in file "I2C_LCD.c"
  2478 ;; Parameters:    Size  Location     Type
  2479 ;;  I2C_Add         1    wreg     unsigned char 
  2480 ;; Auto vars:     Size  Location     Type
  2481 ;;  I2C_Add         1   17[BANK0 ] unsigned char 
  2482 ;; Return value:  Size  Location     Type
  2483 ;;                  1    wreg      void 
  2484 ;; Registers used:
  2485 ;;		wreg, status,2, status,0, pclath, cstack
  2486 ;; Tracked objects:
  2487 ;;		On entry : 0/0
  2488 ;;		On exit  : 0/0
  2489 ;;		Unchanged: 0/0
  2490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2491 ;;      Params:         0       0       0       0       0
  2492 ;;      Locals:         0       1       0       0       0
  2493 ;;      Temps:          0       3       0       0       0
  2494 ;;      Totals:         0       4       0       0       0
  2495 ;;Total ram usage:        4 bytes
  2496 ;; Hardware stack levels used:    1
  2497 ;; Hardware stack levels required when called:    8
  2498 ;; This function calls:
  2499 ;;		_IO_Expander_Write
  2500 ;;		_LCD_CMD
  2501 ;; This function is called by:
  2502 ;;		_main
  2503 ;; This function uses a non-reentrant model
  2504 ;;
  2505                           
  2506                           
  2507                           ;psect for function _LCD_Init
  2508  023F                     _LCD_Init:
  2509                           
  2510                           ;incstack = 0
  2511 ;; hardware stack exceeded
  2512                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  2513                           ;LCD_Init@I2C_Add stored from wreg
  2514  023F  1283               	bcf	3,5	;RP0=0, select bank0
  2515  0240  1303               	bcf	3,6	;RP1=0, select bank0
  2516  0241  00B1               	movwf	LCD_Init@I2C_Add
  2517  0242                     l1682:
  2518                           
  2519                           ;I2C_LCD.c: 52: void LCD_Init(unsigned char I2C_Add);I2C_LCD.c: 53: {;I2C_LCD.c: 54:   i
      +                          2c_add = I2C_Add;
  2520  0242  0831               	movf	LCD_Init@I2C_Add,w
  2521  0243  00AE               	movwf	??_LCD_Init
  2522  0244  082E               	movf	??_LCD_Init,w
  2523  0245  00CC               	movwf	_i2c_add
  2524  0246                     l1684:
  2525                           
  2526                           ;I2C_LCD.c: 55:   IO_Expander_Write(0x00);
  2527  0246  3000               	movlw	0
  2528  0247  120A  118A  25B1  120A  118A  	fcall	_IO_Expander_Write
  2529  024C                     l1686:
  2530                           
  2531                           ;I2C_LCD.c: 56:   _delay((unsigned long)((30)*(20000000/4000.0)));
  2532  024C  30C3               	movlw	195
  2533  024D  1283               	bcf	3,5	;RP0=0, select bank0
  2534  024E  1303               	bcf	3,6	;RP1=0, select bank0
  2535  024F  00AF               	movwf	??_LCD_Init+1
  2536  0250  30CC               	movlw	204
  2537  0251  00AE               	movwf	??_LCD_Init
  2538  0252                     u1417:
  2539  0252  0BAE               	decfsz	??_LCD_Init,f
  2540  0253  2A52               	goto	u1417
  2541  0254  0BAF               	decfsz	??_LCD_Init+1,f
  2542  0255  2A52               	goto	u1417
  2543  0256  0000               	nop
  2544                           
  2545                           ;I2C_LCD.c: 57:   LCD_CMD(0x03);
  2546  0257  3003               	movlw	3
  2547  0258  120A  118A  25EF  120A  118A  	fcall	_LCD_CMD
  2548  025D                     l1688:
  2549                           
  2550                           ;I2C_LCD.c: 58:   _delay((unsigned long)((5)*(20000000/4000.0)));
  2551  025D  3021               	movlw	33
  2552  025E  1283               	bcf	3,5	;RP0=0, select bank0
  2553  025F  1303               	bcf	3,6	;RP1=0, select bank0
  2554  0260  00AF               	movwf	??_LCD_Init+1
  2555  0261  3075               	movlw	117
  2556  0262  00AE               	movwf	??_LCD_Init
  2557  0263                     u1427:
  2558  0263  0BAE               	decfsz	??_LCD_Init,f
  2559  0264  2A63               	goto	u1427
  2560  0265  0BAF               	decfsz	??_LCD_Init+1,f
  2561  0266  2A63               	goto	u1427
  2562  0267  2A68               	nop2
  2563  0268                     l1690:
  2564                           
  2565                           ;I2C_LCD.c: 59:   LCD_CMD(0x03);
  2566  0268  3003               	movlw	3
  2567  0269  120A  118A  25EF  120A  118A  	fcall	_LCD_CMD
  2568                           
  2569                           ;I2C_LCD.c: 60:   _delay((unsigned long)((5)*(20000000/4000.0)));
  2570  026E  3021               	movlw	33
  2571  026F  1283               	bcf	3,5	;RP0=0, select bank0
  2572  0270  1303               	bcf	3,6	;RP1=0, select bank0
  2573  0271  00AF               	movwf	??_LCD_Init+1
  2574  0272  3075               	movlw	117
  2575  0273  00AE               	movwf	??_LCD_Init
  2576  0274                     u1437:
  2577  0274  0BAE               	decfsz	??_LCD_Init,f
  2578  0275  2A74               	goto	u1437
  2579  0276  0BAF               	decfsz	??_LCD_Init+1,f
  2580  0277  2A74               	goto	u1437
  2581  0278  2A79               	nop2
  2582  0279                     l1692:
  2583                           
  2584                           ;I2C_LCD.c: 61:   LCD_CMD(0x03);
  2585  0279  3003               	movlw	3
  2586  027A  120A  118A  25EF  120A  118A  	fcall	_LCD_CMD
  2587  027F                     l1694:
  2588                           
  2589                           ;I2C_LCD.c: 62:   _delay((unsigned long)((5)*(20000000/4000.0)));
  2590  027F  3021               	movlw	33
  2591  0280  1283               	bcf	3,5	;RP0=0, select bank0
  2592  0281  1303               	bcf	3,6	;RP1=0, select bank0
  2593  0282  00AF               	movwf	??_LCD_Init+1
  2594  0283  3075               	movlw	117
  2595  0284  00AE               	movwf	??_LCD_Init
  2596  0285                     u1447:
  2597  0285  0BAE               	decfsz	??_LCD_Init,f
  2598  0286  2A85               	goto	u1447
  2599  0287  0BAF               	decfsz	??_LCD_Init+1,f
  2600  0288  2A85               	goto	u1447
  2601  0289  2A8A               	nop2
  2602                           
  2603                           ;I2C_LCD.c: 63:   LCD_CMD(0x02);
  2604  028A  3002               	movlw	2
  2605  028B  120A  118A  25EF  120A  118A  	fcall	_LCD_CMD
  2606  0290                     l1696:
  2607                           
  2608                           ;I2C_LCD.c: 64:   _delay((unsigned long)((5)*(20000000/4000.0)));
  2609  0290  3021               	movlw	33
  2610  0291  1283               	bcf	3,5	;RP0=0, select bank0
  2611  0292  1303               	bcf	3,6	;RP1=0, select bank0
  2612  0293  00AF               	movwf	??_LCD_Init+1
  2613  0294  3075               	movlw	117
  2614  0295  00AE               	movwf	??_LCD_Init
  2615  0296                     u1457:
  2616  0296  0BAE               	decfsz	??_LCD_Init,f
  2617  0297  2A96               	goto	u1457
  2618  0298  0BAF               	decfsz	??_LCD_Init+1,f
  2619  0299  2A96               	goto	u1457
  2620  029A  2A9B               	nop2
  2621  029B                     l1698:
  2622                           
  2623                           ;I2C_LCD.c: 65:   LCD_CMD(0x20 | (2 << 2));
  2624  029B  3028               	movlw	40
  2625  029C  120A  118A  25EF  120A  118A  	fcall	_LCD_CMD
  2626                           
  2627                           ;I2C_LCD.c: 66:   _delay((unsigned long)((50)*(20000000/4000.0)));
  2628  02A1  3002               	movlw	2
  2629  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  2630  02A3  1303               	bcf	3,6	;RP1=0, select bank0
  2631  02A4  00B0               	movwf	??_LCD_Init+2
  2632  02A5  3045               	movlw	69
  2633  02A6  00AF               	movwf	??_LCD_Init+1
  2634  02A7  30A9               	movlw	169
  2635  02A8  00AE               	movwf	??_LCD_Init
  2636  02A9                     u1467:
  2637  02A9  0BAE               	decfsz	??_LCD_Init,f
  2638  02AA  2AA9               	goto	u1467
  2639  02AB  0BAF               	decfsz	??_LCD_Init+1,f
  2640  02AC  2AA9               	goto	u1467
  2641  02AD  0BB0               	decfsz	??_LCD_Init+2,f
  2642  02AE  2AA9               	goto	u1467
  2643  02AF                     l1700:
  2644                           
  2645                           ;I2C_LCD.c: 67:   LCD_CMD(0x0C);
  2646  02AF  300C               	movlw	12
  2647  02B0  120A  118A  25EF  120A  118A  	fcall	_LCD_CMD
  2648  02B5                     l1702:
  2649                           
  2650                           ;I2C_LCD.c: 68:   _delay((unsigned long)((50)*(20000000/4000.0)));
  2651  02B5  3002               	movlw	2
  2652  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  2653  02B7  1303               	bcf	3,6	;RP1=0, select bank0
  2654  02B8  00B0               	movwf	??_LCD_Init+2
  2655  02B9  3045               	movlw	69
  2656  02BA  00AF               	movwf	??_LCD_Init+1
  2657  02BB  30A9               	movlw	169
  2658  02BC  00AE               	movwf	??_LCD_Init
  2659  02BD                     u1477:
  2660  02BD  0BAE               	decfsz	??_LCD_Init,f
  2661  02BE  2ABD               	goto	u1477
  2662  02BF  0BAF               	decfsz	??_LCD_Init+1,f
  2663  02C0  2ABD               	goto	u1477
  2664  02C1  0BB0               	decfsz	??_LCD_Init+2,f
  2665  02C2  2ABD               	goto	u1477
  2666                           
  2667                           ;I2C_LCD.c: 69:   LCD_CMD(0x01);
  2668  02C3  3001               	movlw	1
  2669  02C4  120A  118A  25EF  120A  118A  	fcall	_LCD_CMD
  2670  02C9                     l1704:
  2671                           
  2672                           ;I2C_LCD.c: 70:   _delay((unsigned long)((50)*(20000000/4000.0)));
  2673  02C9  3002               	movlw	2
  2674  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  2675  02CB  1303               	bcf	3,6	;RP1=0, select bank0
  2676  02CC  00B0               	movwf	??_LCD_Init+2
  2677  02CD  3045               	movlw	69
  2678  02CE  00AF               	movwf	??_LCD_Init+1
  2679  02CF  30A9               	movlw	169
  2680  02D0  00AE               	movwf	??_LCD_Init
  2681  02D1                     u1487:
  2682  02D1  0BAE               	decfsz	??_LCD_Init,f
  2683  02D2  2AD1               	goto	u1487
  2684  02D3  0BAF               	decfsz	??_LCD_Init+1,f
  2685  02D4  2AD1               	goto	u1487
  2686  02D5  0BB0               	decfsz	??_LCD_Init+2,f
  2687  02D6  2AD1               	goto	u1487
  2688  02D7                     l1706:
  2689                           
  2690                           ;I2C_LCD.c: 71:   LCD_CMD(0x04 | 0x02);
  2691  02D7  3006               	movlw	6
  2692  02D8  120A  118A  25EF  120A  118A  	fcall	_LCD_CMD
  2693                           
  2694                           ;I2C_LCD.c: 72:   _delay((unsigned long)((50)*(20000000/4000.0)));
  2695  02DD  3002               	movlw	2
  2696  02DE  1283               	bcf	3,5	;RP0=0, select bank0
  2697  02DF  1303               	bcf	3,6	;RP1=0, select bank0
  2698  02E0  00B0               	movwf	??_LCD_Init+2
  2699  02E1  3045               	movlw	69
  2700  02E2  00AF               	movwf	??_LCD_Init+1
  2701  02E3  30A9               	movlw	169
  2702  02E4  00AE               	movwf	??_LCD_Init
  2703  02E5                     u1497:
  2704  02E5  0BAE               	decfsz	??_LCD_Init,f
  2705  02E6  2AE5               	goto	u1497
  2706  02E7  0BAF               	decfsz	??_LCD_Init+1,f
  2707  02E8  2AE5               	goto	u1497
  2708  02E9  0BB0               	decfsz	??_LCD_Init+2,f
  2709  02EA  2AE5               	goto	u1497
  2710  02EB                     l58:
  2711  02EB  0008               	return
  2712  02EC                     __end_of_LCD_Init:
  2713                           
  2714                           	psect	text12
  2715  06A9                     __ptext12:	
  2716 ;; *************** function _LCD_Clear *****************
  2717 ;; Defined at:
  2718 ;;		line 150 in file "I2C_LCD.c"
  2719 ;; Parameters:    Size  Location     Type
  2720 ;;		None
  2721 ;; Auto vars:     Size  Location     Type
  2722 ;;		None
  2723 ;; Return value:  Size  Location     Type
  2724 ;;                  1    wreg      void 
  2725 ;; Registers used:
  2726 ;;		wreg, status,2, status,0, pclath, cstack
  2727 ;; Tracked objects:
  2728 ;;		On entry : 0/0
  2729 ;;		On exit  : 0/0
  2730 ;;		Unchanged: 0/0
  2731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2732 ;;      Params:         0       0       0       0       0
  2733 ;;      Locals:         0       0       0       0       0
  2734 ;;      Temps:          0       1       0       0       0
  2735 ;;      Totals:         0       1       0       0       0
  2736 ;;Total ram usage:        1 bytes
  2737 ;; Hardware stack levels used:    1
  2738 ;; Hardware stack levels required when called:    8
  2739 ;; This function calls:
  2740 ;;		_LCD_CMD
  2741 ;; This function is called by:
  2742 ;;		_main
  2743 ;; This function uses a non-reentrant model
  2744 ;;
  2745                           
  2746                           
  2747                           ;psect for function _LCD_Clear
  2748  06A9                     _LCD_Clear:
  2749  06A9                     l1716:	
  2750                           ;incstack = 0
  2751 ;; hardware stack exceeded
  2752                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  2753                           
  2754                           
  2755                           ;I2C_LCD.c: 152:   LCD_CMD(0x01);
  2756  06A9  3001               	movlw	1
  2757  06AA  120A  118A  25EF  120A  118A  	fcall	_LCD_CMD
  2758  06AF                     l1718:
  2759                           
  2760                           ;I2C_LCD.c: 153:   _delay((unsigned long)((40)*(20000000/4000000.0)));
  2761  06AF  3041               	movlw	65
  2762  06B0  1283               	bcf	3,5	;RP0=0, select bank0
  2763  06B1  1303               	bcf	3,6	;RP1=0, select bank0
  2764  06B2  00AE               	movwf	??_LCD_Clear
  2765  06B3                     u1507:
  2766  06B3  0BAE               	decfsz	??_LCD_Clear,f
  2767  06B4  2EB3               	goto	u1507
  2768  06B5  2EB6               	nop2
  2769  06B6                     l98:
  2770  06B6  0008               	return
  2771  06B7                     __end_of_LCD_Clear:
  2772                           
  2773                           	psect	text13
  2774  05EF                     __ptext13:	
  2775 ;; *************** function _LCD_CMD *****************
  2776 ;; Defined at:
  2777 ;;		line 92 in file "I2C_LCD.c"
  2778 ;; Parameters:    Size  Location     Type
  2779 ;;  CMD             1    wreg     unsigned char 
  2780 ;; Auto vars:     Size  Location     Type
  2781 ;;  CMD             1   13[BANK0 ] unsigned char 
  2782 ;; Return value:  Size  Location     Type
  2783 ;;                  1    wreg      void 
  2784 ;; Registers used:
  2785 ;;		wreg, status,2, status,0, pclath, cstack
  2786 ;; Tracked objects:
  2787 ;;		On entry : 0/0
  2788 ;;		On exit  : 0/0
  2789 ;;		Unchanged: 0/0
  2790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2791 ;;      Params:         0       0       0       0       0
  2792 ;;      Locals:         0       1       0       0       0
  2793 ;;      Temps:          0       1       0       0       0
  2794 ;;      Totals:         0       2       0       0       0
  2795 ;;Total ram usage:        2 bytes
  2796 ;; Hardware stack levels used:    1
  2797 ;; Hardware stack levels required when called:    7
  2798 ;; This function calls:
  2799 ;;		_LCD_Write_4Bit
  2800 ;; This function is called by:
  2801 ;;		_LCD_Init
  2802 ;;		_LCD_Set_Cursor
  2803 ;;		_LCD_Clear
  2804 ;;		_LCD_SL
  2805 ;;		_LCD_SR
  2806 ;; This function uses a non-reentrant model
  2807 ;;
  2808                           
  2809                           
  2810                           ;psect for function _LCD_CMD
  2811  05EF                     _LCD_CMD:
  2812                           
  2813                           ;incstack = 0
  2814 ;; hardware stack exceeded
  2815                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  2816                           ;LCD_CMD@CMD stored from wreg
  2817  05EF  1283               	bcf	3,5	;RP0=0, select bank0
  2818  05F0  1303               	bcf	3,6	;RP1=0, select bank0
  2819  05F1  00AD               	movwf	LCD_CMD@CMD
  2820  05F2                     l1562:
  2821                           
  2822                           ;I2C_LCD.c: 92: void LCD_CMD(unsigned char CMD);I2C_LCD.c: 93: {;I2C_LCD.c: 94:   RS = 0
      +                          ;
  2823  05F2  01CB               	clrf	_RS
  2824  05F3                     l1564:
  2825                           
  2826                           ;I2C_LCD.c: 95:   LCD_Write_4Bit(CMD & 0xF0);
  2827  05F3  082D               	movf	LCD_CMD@CMD,w
  2828  05F4  39F0               	andlw	240
  2829  05F5  120A  118A  2592  120A  118A  	fcall	_LCD_Write_4Bit
  2830  05FA                     l1566:
  2831                           
  2832                           ;I2C_LCD.c: 96:   LCD_Write_4Bit((CMD << 4) & 0xF0);
  2833  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  2834  05FB  1303               	bcf	3,6	;RP1=0, select bank0
  2835  05FC  082D               	movf	LCD_CMD@CMD,w
  2836  05FD  00AC               	movwf	??_LCD_CMD
  2837  05FE  3003               	movlw	3
  2838  05FF                     u745:
  2839  05FF  1003               	clrc
  2840  0600  0DAC               	rlf	??_LCD_CMD,f
  2841  0601  3EFF               	addlw	-1
  2842  0602  1D03               	skipz
  2843  0603  2DFF               	goto	u745
  2844  0604  1003               	clrc
  2845  0605  0D2C               	rlf	??_LCD_CMD,w
  2846  0606  39F0               	andlw	240
  2847  0607  120A  118A  2592  120A  118A  	fcall	_LCD_Write_4Bit
  2848  060C                     l67:
  2849  060C  0008               	return
  2850  060D                     __end_of_LCD_CMD:
  2851                           
  2852                           	psect	text14
  2853  0592                     __ptext14:	
  2854 ;; *************** function _LCD_Write_4Bit *****************
  2855 ;; Defined at:
  2856 ;;		line 83 in file "I2C_LCD.c"
  2857 ;; Parameters:    Size  Location     Type
  2858 ;;  Nibble          1    wreg     unsigned char 
  2859 ;; Auto vars:     Size  Location     Type
  2860 ;;  Nibble          1   11[BANK0 ] unsigned char 
  2861 ;; Return value:  Size  Location     Type
  2862 ;;                  1    wreg      void 
  2863 ;; Registers used:
  2864 ;;		wreg, status,2, status,0, pclath, cstack
  2865 ;; Tracked objects:
  2866 ;;		On entry : 0/0
  2867 ;;		On exit  : 0/0
  2868 ;;		Unchanged: 0/0
  2869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2870 ;;      Params:         0       0       0       0       0
  2871 ;;      Locals:         0       1       0       0       0
  2872 ;;      Temps:          0       1       0       0       0
  2873 ;;      Totals:         0       2       0       0       0
  2874 ;;Total ram usage:        2 bytes
  2875 ;; Hardware stack levels used:    1
  2876 ;; Hardware stack levels required when called:    6
  2877 ;; This function calls:
  2878 ;;		_IO_Expander_Write
  2879 ;; This function is called by:
  2880 ;;		_LCD_CMD
  2881 ;;		_LCD_Write_Char
  2882 ;; This function uses a non-reentrant model
  2883 ;;
  2884                           
  2885                           
  2886                           ;psect for function _LCD_Write_4Bit
  2887  0592                     _LCD_Write_4Bit:
  2888                           
  2889                           ;incstack = 0
  2890 ;; hardware stack exceeded
  2891                           ; Regs used in _LCD_Write_4Bit: [wreg+status,2+status,0+pclath+cstack]
  2892                           ;LCD_Write_4Bit@Nibble stored from wreg
  2893  0592  1283               	bcf	3,5	;RP0=0, select bank0
  2894  0593  1303               	bcf	3,6	;RP1=0, select bank0
  2895  0594  00AB               	movwf	LCD_Write_4Bit@Nibble
  2896  0595                     l1556:
  2897                           
  2898                           ;I2C_LCD.c: 83: void LCD_Write_4Bit(unsigned char Nibble);I2C_LCD.c: 84: {;I2C_LCD.c: 86
      +                          :   Nibble |= RS;
  2899  0595  084B               	movf	_RS,w
  2900  0596  00AA               	movwf	??_LCD_Write_4Bit
  2901  0597  082A               	movf	??_LCD_Write_4Bit,w
  2902  0598  04AB               	iorwf	LCD_Write_4Bit@Nibble,f
  2903  0599                     l1558:
  2904                           
  2905                           ;I2C_LCD.c: 87:   IO_Expander_Write(Nibble | 0x04);
  2906  0599  082B               	movf	LCD_Write_4Bit@Nibble,w
  2907  059A  3804               	iorlw	4
  2908  059B  120A  118A  25B1  120A  118A  	fcall	_IO_Expander_Write
  2909  05A0                     l1560:
  2910                           
  2911                           ;I2C_LCD.c: 88:   IO_Expander_Write(Nibble & 0xFB);
  2912  05A0  1283               	bcf	3,5	;RP0=0, select bank0
  2913  05A1  1303               	bcf	3,6	;RP1=0, select bank0
  2914  05A2  082B               	movf	LCD_Write_4Bit@Nibble,w
  2915  05A3  39FB               	andlw	251
  2916  05A4  120A  118A  25B1  120A  118A  	fcall	_IO_Expander_Write
  2917                           
  2918                           ;I2C_LCD.c: 89:   _delay((unsigned long)((50)*(20000000/4000000.0)));
  2919  05A9  3052               	movlw	82
  2920  05AA  1283               	bcf	3,5	;RP0=0, select bank0
  2921  05AB  1303               	bcf	3,6	;RP1=0, select bank0
  2922  05AC  00AA               	movwf	??_LCD_Write_4Bit
  2923  05AD                     u1517:
  2924  05AD  0BAA               	decfsz	??_LCD_Write_4Bit,f
  2925  05AE  2DAD               	goto	u1517
  2926  05AF  0000               	nop
  2927  05B0                     l64:
  2928  05B0  0008               	return
  2929  05B1                     __end_of_LCD_Write_4Bit:
  2930                           
  2931                           	psect	text15
  2932  05B1                     __ptext15:	
  2933 ;; *************** function _IO_Expander_Write *****************
  2934 ;; Defined at:
  2935 ;;		line 75 in file "I2C_LCD.c"
  2936 ;; Parameters:    Size  Location     Type
  2937 ;;  Data            1    wreg     unsigned char 
  2938 ;; Auto vars:     Size  Location     Type
  2939 ;;  Data            1    9[BANK0 ] unsigned char 
  2940 ;; Return value:  Size  Location     Type
  2941 ;;                  1    wreg      void 
  2942 ;; Registers used:
  2943 ;;		wreg, status,2, status,0, pclath, cstack
  2944 ;; Tracked objects:
  2945 ;;		On entry : 0/0
  2946 ;;		On exit  : 0/0
  2947 ;;		Unchanged: 0/0
  2948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2949 ;;      Params:         0       0       0       0       0
  2950 ;;      Locals:         0       1       0       0       0
  2951 ;;      Temps:          0       0       0       0       0
  2952 ;;      Totals:         0       1       0       0       0
  2953 ;;Total ram usage:        1 bytes
  2954 ;; Hardware stack levels used:    1
  2955 ;; Hardware stack levels required when called:    5
  2956 ;; This function calls:
  2957 ;;		_I2C_Master_Start
  2958 ;;		_I2C_Master_Stop
  2959 ;;		_I2C_Master_Write
  2960 ;; This function is called by:
  2961 ;;		_LCD_Init
  2962 ;;		_LCD_Write_4Bit
  2963 ;;		_Backlight
  2964 ;;		_noBacklight
  2965 ;; This function uses a non-reentrant model
  2966 ;;
  2967                           
  2968                           
  2969                           ;psect for function _IO_Expander_Write
  2970  05B1                     _IO_Expander_Write:
  2971                           
  2972                           ;incstack = 0
  2973 ;; hardware stack exceeded
  2974                           ; Regs used in _IO_Expander_Write: [wreg+status,2+status,0+pclath+cstack]
  2975                           ;IO_Expander_Write@Data stored from wreg
  2976  05B1  1283               	bcf	3,5	;RP0=0, select bank0
  2977  05B2  1303               	bcf	3,6	;RP1=0, select bank0
  2978  05B3  00A9               	movwf	IO_Expander_Write@Data
  2979  05B4                     l1554:
  2980                           
  2981                           ;I2C_LCD.c: 75: void IO_Expander_Write(unsigned char Data);I2C_LCD.c: 76: {;I2C_LCD.c: 7
      +                          7:   I2C_Master_Start();
  2982  05B4  120A  118A  26FF  120A  118A  	fcall	_I2C_Master_Start
  2983                           
  2984                           ;I2C_LCD.c: 78:   I2C_Master_Write(i2c_add);
  2985  05B9  1283               	bcf	3,5	;RP0=0, select bank0
  2986  05BA  1303               	bcf	3,6	;RP1=0, select bank0
  2987  05BB  084C               	movf	_i2c_add,w
  2988  05BC  120A  118A  2688  120A  118A  	fcall	_I2C_Master_Write
  2989                           
  2990                           ;I2C_LCD.c: 79:   I2C_Master_Write(Data | BackLight_State);
  2991  05C1  1283               	bcf	3,5	;RP0=0, select bank0
  2992  05C2  1303               	bcf	3,6	;RP1=0, select bank0
  2993  05C3  0829               	movf	IO_Expander_Write@Data,w
  2994  05C4  0444               	iorwf	_BackLight_State,w
  2995  05C5  120A  118A  2688  120A  118A  	fcall	_I2C_Master_Write
  2996                           
  2997                           ;I2C_LCD.c: 80:   I2C_Master_Stop();
  2998  05CA  120A  118A  26F6  120A  118A  	fcall	_I2C_Master_Stop
  2999  05CF                     l61:
  3000  05CF  0008               	return
  3001  05D0                     __end_of_IO_Expander_Write:
  3002                           
  3003                           	psect	text16
  3004  0688                     __ptext16:	
  3005 ;; *************** function _I2C_Master_Write *****************
  3006 ;; Defined at:
  3007 ;;		line 37 in file "I2C_LCD.c"
  3008 ;; Parameters:    Size  Location     Type
  3009 ;;  data            1    wreg     unsigned char 
  3010 ;; Auto vars:     Size  Location     Type
  3011 ;;  data            1    8[BANK0 ] unsigned char 
  3012 ;; Return value:  Size  Location     Type
  3013 ;;                  1    wreg      unsigned char 
  3014 ;; Registers used:
  3015 ;;		wreg, status,2, status,0, pclath, cstack
  3016 ;; Tracked objects:
  3017 ;;		On entry : 0/0
  3018 ;;		On exit  : 0/0
  3019 ;;		Unchanged: 0/0
  3020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3021 ;;      Params:         0       0       0       0       0
  3022 ;;      Locals:         0       1       0       0       0
  3023 ;;      Temps:          0       0       0       0       0
  3024 ;;      Totals:         0       1       0       0       0
  3025 ;;Total ram usage:        1 bytes
  3026 ;; Hardware stack levels used:    1
  3027 ;; Hardware stack levels required when called:    4
  3028 ;; This function calls:
  3029 ;;		_I2C_Master_Wait
  3030 ;; This function is called by:
  3031 ;;		_IO_Expander_Write
  3032 ;; This function uses a non-reentrant model
  3033 ;;
  3034                           
  3035                           
  3036                           ;psect for function _I2C_Master_Write
  3037  0688                     _I2C_Master_Write:
  3038                           
  3039                           ;incstack = 0
  3040 ;; hardware stack exceeded
  3041                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3042                           ;I2C_Master_Write@data stored from wreg
  3043  0688  1283               	bcf	3,5	;RP0=0, select bank0
  3044  0689  1303               	bcf	3,6	;RP1=0, select bank0
  3045  068A  00A8               	movwf	I2C_Master_Write@data
  3046  068B                     l1550:
  3047                           
  3048                           ;I2C_LCD.c: 37: unsigned char I2C_Master_Write(unsigned char data);I2C_LCD.c: 38: {;I2C_
      +                          LCD.c: 39:   I2C_Master_Wait();
  3049  068B  120A  118A  26C5  120A  118A  	fcall	_I2C_Master_Wait
  3050  0690                     l1552:
  3051                           
  3052                           ;I2C_LCD.c: 40:   SSPBUF = data;
  3053  0690  1283               	bcf	3,5	;RP0=0, select bank0
  3054  0691  1303               	bcf	3,6	;RP1=0, select bank0
  3055  0692  0828               	movf	I2C_Master_Write@data,w
  3056  0693  0093               	movwf	19	;volatile
  3057  0694                     l52:	
  3058                           ;I2C_LCD.c: 42:     ;
  3059                           
  3060                           
  3061                           ;I2C_LCD.c: 41:   while (!SSPIF)
  3062  0694  1D8C               	btfss	12,3	;volatile
  3063  0695  2E97               	goto	u731
  3064  0696  2E98               	goto	u730
  3065  0697                     u731:
  3066  0697  2E94               	goto	l52
  3067  0698                     u730:
  3068  0698                     l54:
  3069                           
  3070                           ;I2C_LCD.c: 43:   SSPIF = 0;
  3071  0698  118C               	bcf	12,3	;volatile
  3072  0699                     l55:	
  3073                           ;I2C_LCD.c: 44:   return ACKSTAT;;	Return value of _I2C_Master_Write is never used
  3074                           
  3075  0699  0008               	return
  3076  069A                     __end_of_I2C_Master_Write:
  3077                           
  3078                           	psect	text17
  3079  06F6                     __ptext17:	
  3080 ;; *************** function _I2C_Master_Stop *****************
  3081 ;; Defined at:
  3082 ;;		line 31 in file "I2C_LCD.c"
  3083 ;; Parameters:    Size  Location     Type
  3084 ;;		None
  3085 ;; Auto vars:     Size  Location     Type
  3086 ;;		None
  3087 ;; Return value:  Size  Location     Type
  3088 ;;                  1    wreg      void 
  3089 ;; Registers used:
  3090 ;;		wreg, status,2, status,0, pclath, cstack
  3091 ;; Tracked objects:
  3092 ;;		On entry : 0/0
  3093 ;;		On exit  : 0/0
  3094 ;;		Unchanged: 0/0
  3095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3096 ;;      Params:         0       0       0       0       0
  3097 ;;      Locals:         0       0       0       0       0
  3098 ;;      Temps:          0       0       0       0       0
  3099 ;;      Totals:         0       0       0       0       0
  3100 ;;Total ram usage:        0 bytes
  3101 ;; Hardware stack levels used:    1
  3102 ;; Hardware stack levels required when called:    4
  3103 ;; This function calls:
  3104 ;;		_I2C_Master_Wait
  3105 ;; This function is called by:
  3106 ;;		_IO_Expander_Write
  3107 ;; This function uses a non-reentrant model
  3108 ;;
  3109                           
  3110                           
  3111                           ;psect for function _I2C_Master_Stop
  3112  06F6                     _I2C_Master_Stop:
  3113  06F6                     l1546:	
  3114                           ;incstack = 0
  3115 ;; hardware stack exceeded
  3116                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3117                           
  3118                           
  3119                           ;I2C_LCD.c: 33:   I2C_Master_Wait();
  3120  06F6  120A  118A  26C5  120A  118A  	fcall	_I2C_Master_Wait
  3121  06FB                     l1548:
  3122                           
  3123                           ;I2C_LCD.c: 34:   PEN = 1;
  3124  06FB  1683               	bsf	3,5	;RP0=1, select bank1
  3125  06FC  1303               	bcf	3,6	;RP1=0, select bank1
  3126  06FD  1511               	bsf	17,2	;volatile
  3127  06FE                     l49:
  3128  06FE  0008               	return
  3129  06FF                     __end_of_I2C_Master_Stop:
  3130                           
  3131                           	psect	text18
  3132  06FF                     __ptext18:	
  3133 ;; *************** function _I2C_Master_Start *****************
  3134 ;; Defined at:
  3135 ;;		line 25 in file "I2C_LCD.c"
  3136 ;; Parameters:    Size  Location     Type
  3137 ;;		None
  3138 ;; Auto vars:     Size  Location     Type
  3139 ;;		None
  3140 ;; Return value:  Size  Location     Type
  3141 ;;                  1    wreg      void 
  3142 ;; Registers used:
  3143 ;;		wreg, status,2, status,0, pclath, cstack
  3144 ;; Tracked objects:
  3145 ;;		On entry : 0/0
  3146 ;;		On exit  : 0/0
  3147 ;;		Unchanged: 0/0
  3148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3149 ;;      Params:         0       0       0       0       0
  3150 ;;      Locals:         0       0       0       0       0
  3151 ;;      Temps:          0       0       0       0       0
  3152 ;;      Totals:         0       0       0       0       0
  3153 ;;Total ram usage:        0 bytes
  3154 ;; Hardware stack levels used:    1
  3155 ;; Hardware stack levels required when called:    4
  3156 ;; This function calls:
  3157 ;;		_I2C_Master_Wait
  3158 ;; This function is called by:
  3159 ;;		_IO_Expander_Write
  3160 ;; This function uses a non-reentrant model
  3161 ;;
  3162                           
  3163                           
  3164                           ;psect for function _I2C_Master_Start
  3165  06FF                     _I2C_Master_Start:
  3166  06FF                     l1542:	
  3167                           ;incstack = 0
  3168 ;; hardware stack exceeded
  3169                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3170                           
  3171                           
  3172                           ;I2C_LCD.c: 27:   I2C_Master_Wait();
  3173  06FF  120A  118A  26C5  120A  118A  	fcall	_I2C_Master_Wait
  3174  0704                     l1544:
  3175                           
  3176                           ;I2C_LCD.c: 28:   SEN = 1;
  3177  0704  1683               	bsf	3,5	;RP0=1, select bank1
  3178  0705  1303               	bcf	3,6	;RP1=0, select bank1
  3179  0706  1411               	bsf	17,0	;volatile
  3180  0707                     l46:
  3181  0707  0008               	return
  3182  0708                     __end_of_I2C_Master_Start:
  3183                           
  3184                           	psect	text19
  3185  06C5                     __ptext19:	
  3186 ;; *************** function _I2C_Master_Wait *****************
  3187 ;; Defined at:
  3188 ;;		line 19 in file "I2C_LCD.c"
  3189 ;; Parameters:    Size  Location     Type
  3190 ;;		None
  3191 ;; Auto vars:     Size  Location     Type
  3192 ;;		None
  3193 ;; Return value:  Size  Location     Type
  3194 ;;                  1    wreg      void 
  3195 ;; Registers used:
  3196 ;;		wreg, status,2
  3197 ;; Tracked objects:
  3198 ;;		On entry : 0/0
  3199 ;;		On exit  : 0/0
  3200 ;;		Unchanged: 0/0
  3201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3202 ;;      Params:         0       0       0       0       0
  3203 ;;      Locals:         0       0       0       0       0
  3204 ;;      Temps:          0       0       0       0       0
  3205 ;;      Totals:         0       0       0       0       0
  3206 ;;Total ram usage:        0 bytes
  3207 ;; Hardware stack levels used:    1
  3208 ;; Hardware stack levels required when called:    3
  3209 ;; This function calls:
  3210 ;;		Nothing
  3211 ;; This function is called by:
  3212 ;;		_I2C_Master_Start
  3213 ;;		_I2C_Master_Stop
  3214 ;;		_I2C_Master_Write
  3215 ;; This function uses a non-reentrant model
  3216 ;;
  3217                           
  3218                           
  3219                           ;psect for function _I2C_Master_Wait
  3220  06C5                     _I2C_Master_Wait:
  3221  06C5                     l1538:	
  3222                           ;incstack = 0
  3223 ;; hardware stack exceeded
  3224                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3225                           
  3226  06C5                     l40:	
  3227                           ;I2C_LCD.c: 22:     ;
  3228                           
  3229                           
  3230                           ;I2C_LCD.c: 21:   while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F))
  3231  06C5  1683               	bsf	3,5	;RP0=1, select bank1
  3232  06C6  1303               	bcf	3,6	;RP1=0, select bank1
  3233  06C7  1914               	btfsc	20,2	;volatile
  3234  06C8  2ECA               	goto	u711
  3235  06C9  2ECB               	goto	u710
  3236  06CA                     u711:
  3237  06CA  2EC5               	goto	l40
  3238  06CB                     u710:
  3239  06CB                     l1540:
  3240  06CB  0811               	movf	17,w	;volatile
  3241  06CC  391F               	andlw	31
  3242  06CD  1D03               	btfss	3,2
  3243  06CE  2ED0               	goto	u721
  3244  06CF  2ED1               	goto	u720
  3245  06D0                     u721:
  3246  06D0  2EC5               	goto	l40
  3247  06D1                     u720:
  3248  06D1                     l43:
  3249  06D1  0008               	return
  3250  06D2                     __end_of_I2C_Master_Wait:
  3251                           
  3252                           	psect	text20
  3253  0710                     __ptext20:	
  3254 ;; *************** function _IR_Init *****************
  3255 ;; Defined at:
  3256 ;;		line 410 in file "BTL_HIHI_main.c"
  3257 ;; Parameters:    Size  Location     Type
  3258 ;;		None
  3259 ;; Auto vars:     Size  Location     Type
  3260 ;;		None
  3261 ;; Return value:  Size  Location     Type
  3262 ;;                  1    wreg      void 
  3263 ;; Registers used:
  3264 ;;		None
  3265 ;; Tracked objects:
  3266 ;;		On entry : 0/0
  3267 ;;		On exit  : 0/0
  3268 ;;		Unchanged: 0/0
  3269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3270 ;;      Params:         0       0       0       0       0
  3271 ;;      Locals:         0       0       0       0       0
  3272 ;;      Temps:          0       0       0       0       0
  3273 ;;      Totals:         0       0       0       0       0
  3274 ;;Total ram usage:        0 bytes
  3275 ;; Hardware stack levels used:    1
  3276 ;; Hardware stack levels required when called:    3
  3277 ;; This function calls:
  3278 ;;		Nothing
  3279 ;; This function is called by:
  3280 ;;		_main
  3281 ;; This function uses a non-reentrant model
  3282 ;;
  3283                           
  3284                           
  3285                           ;psect for function _IR_Init
  3286  0710                     _IR_Init:
  3287  0710                     l1734:	
  3288                           ;incstack = 0
  3289                           ; Regs used in _IR_Init: []
  3290                           
  3291                           
  3292                           ;BTL_HIHI_main.c: 412:     INTEDG = 1;
  3293  0710  1683               	bsf	3,5	;RP0=1, select bank1
  3294  0711  1303               	bcf	3,6	;RP1=0, select bank1
  3295  0712  1701               	bsf	1,6	;volatile
  3296                           
  3297                           ;BTL_HIHI_main.c: 413:     INTE = 1;
  3298  0713  160B               	bsf	11,4	;volatile
  3299                           
  3300                           ;BTL_HIHI_main.c: 414:     GIE = 1;
  3301  0714  178B               	bsf	11,7	;volatile
  3302  0715                     l368:
  3303  0715  0008               	return
  3304  0716                     __end_of_IR_Init:
  3305                           
  3306                           	psect	text21
  3307  06D2                     __ptext21:	
  3308 ;; *************** function _I2C_Master_Init *****************
  3309 ;; Defined at:
  3310 ;;		line 9 in file "I2C_LCD.c"
  3311 ;; Parameters:    Size  Location     Type
  3312 ;;		None
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;		None
  3315 ;; Return value:  Size  Location     Type
  3316 ;;                  1    wreg      void 
  3317 ;; Registers used:
  3318 ;;		wreg, status,2
  3319 ;; Tracked objects:
  3320 ;;		On entry : 0/0
  3321 ;;		On exit  : 0/0
  3322 ;;		Unchanged: 0/0
  3323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3324 ;;      Params:         0       0       0       0       0
  3325 ;;      Locals:         0       0       0       0       0
  3326 ;;      Temps:          0       0       0       0       0
  3327 ;;      Totals:         0       0       0       0       0
  3328 ;;Total ram usage:        0 bytes
  3329 ;; Hardware stack levels used:    1
  3330 ;; Hardware stack levels required when called:    3
  3331 ;; This function calls:
  3332 ;;		Nothing
  3333 ;; This function is called by:
  3334 ;;		_main
  3335 ;; This function uses a non-reentrant model
  3336 ;;
  3337                           
  3338                           
  3339                           ;psect for function _I2C_Master_Init
  3340  06D2                     _I2C_Master_Init:
  3341  06D2                     l1672:	
  3342                           ;incstack = 0
  3343                           ; Regs used in _I2C_Master_Init: [wreg+status,2]
  3344                           
  3345                           
  3346                           ;I2C_LCD.c: 11:   SSPCON = 0x28;
  3347  06D2  3028               	movlw	40
  3348  06D3  1283               	bcf	3,5	;RP0=0, select bank0
  3349  06D4  1303               	bcf	3,6	;RP1=0, select bank0
  3350  06D5  0094               	movwf	20	;volatile
  3351  06D6                     l1674:
  3352                           
  3353                           ;I2C_LCD.c: 12:   SSPCON2 = 0x00;
  3354  06D6  1683               	bsf	3,5	;RP0=1, select bank1
  3355  06D7  1303               	bcf	3,6	;RP1=0, select bank1
  3356  06D8  0191               	clrf	17	;volatile
  3357  06D9                     l1676:
  3358                           
  3359                           ;I2C_LCD.c: 13:   SSPSTAT = 0x00;
  3360  06D9  0194               	clrf	20	;volatile
  3361                           
  3362                           ;I2C_LCD.c: 14:   SSPADD = ((20000000 / 4) / 100000) - 1;
  3363  06DA  3031               	movlw	49
  3364  06DB  0093               	movwf	19	;volatile
  3365  06DC                     l1678:
  3366                           
  3367                           ;I2C_LCD.c: 15:   TRISC3 = 1;
  3368  06DC  1587               	bsf	7,3	;volatile
  3369  06DD                     l1680:
  3370                           
  3371                           ;I2C_LCD.c: 16:   TRISC4 = 1;
  3372  06DD  1607               	bsf	7,4	;volatile
  3373  06DE                     l37:
  3374  06DE  0008               	return
  3375  06DF                     __end_of_I2C_Master_Init:
  3376                           
  3377                           	psect	text22
  3378  069A                     __ptext22:	
  3379 ;; *************** function _EEPROM_Read *****************
  3380 ;; Defined at:
  3381 ;;		line 456 in file "BTL_HIHI_main.c"
  3382 ;; Parameters:    Size  Location     Type
  3383 ;;  Address         1    wreg     unsigned char 
  3384 ;; Auto vars:     Size  Location     Type
  3385 ;;  Address         1    8[BANK0 ] unsigned char 
  3386 ;; Return value:  Size  Location     Type
  3387 ;;                  1    wreg      unsigned char 
  3388 ;; Registers used:
  3389 ;;		wreg
  3390 ;; Tracked objects:
  3391 ;;		On entry : 0/0
  3392 ;;		On exit  : 0/0
  3393 ;;		Unchanged: 0/0
  3394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3395 ;;      Params:         0       0       0       0       0
  3396 ;;      Locals:         0       1       0       0       0
  3397 ;;      Temps:          0       0       0       0       0
  3398 ;;      Totals:         0       1       0       0       0
  3399 ;;Total ram usage:        1 bytes
  3400 ;; Hardware stack levels used:    1
  3401 ;; Hardware stack levels required when called:    3
  3402 ;; This function calls:
  3403 ;;		Nothing
  3404 ;; This function is called by:
  3405 ;;		_main
  3406 ;; This function uses a non-reentrant model
  3407 ;;
  3408                           
  3409                           
  3410                           ;psect for function _EEPROM_Read
  3411  069A                     _EEPROM_Read:
  3412                           
  3413                           ;incstack = 0
  3414                           ; Regs used in _EEPROM_Read: [wreg]
  3415                           ;EEPROM_Read@Address stored from wreg
  3416  069A  1283               	bcf	3,5	;RP0=0, select bank0
  3417  069B  1303               	bcf	3,6	;RP1=0, select bank0
  3418  069C  00A8               	movwf	EEPROM_Read@Address
  3419  069D                     l1762:
  3420                           
  3421                           ;BTL_HIHI_main.c: 456: uint8_t EEPROM_Read(uint8_t Address);BTL_HIHI_main.c: 457: {;BTL_
      +                          HIHI_main.c: 458:     EEADR = Address;
  3422  069D  0828               	movf	EEPROM_Read@Address,w
  3423  069E  1283               	bcf	3,5	;RP0=0, select bank2
  3424  069F  1703               	bsf	3,6	;RP1=1, select bank2
  3425  06A0  008D               	movwf	13	;volatile
  3426  06A1                     l1764:
  3427                           
  3428                           ;BTL_HIHI_main.c: 459:     EEPGD = 0;
  3429  06A1  1683               	bsf	3,5	;RP0=1, select bank3
  3430  06A2  1703               	bsf	3,6	;RP1=1, select bank3
  3431  06A3  138C               	bcf	12,7	;volsfr
  3432  06A4                     l1766:
  3433                           
  3434                           ;BTL_HIHI_main.c: 460:     EECON1bits.RD = 1;
  3435  06A4  140C               	bsf	12,0	;volsfr
  3436                           
  3437                           ;BTL_HIHI_main.c: 461:     return EEDATA;
  3438  06A5  1283               	bcf	3,5	;RP0=0, select bank2
  3439  06A6  1703               	bsf	3,6	;RP1=1, select bank2
  3440  06A7  080C               	movf	12,w	;volatile
  3441  06A8                     l386:
  3442  06A8  0008               	return
  3443  06A9                     __end_of_EEPROM_Read:
  3444                           
  3445                           	psect	text23
  3446  0409                     __ptext23:	
  3447 ;; *************** function _ADC_Read *****************
  3448 ;; Defined at:
  3449 ;;		line 340 in file "BTL_HIHI_main.c"
  3450 ;; Parameters:    Size  Location     Type
  3451 ;;  ADC_channel     1    wreg     unsigned char 
  3452 ;; Auto vars:     Size  Location     Type
  3453 ;;  ADC_channel     1   13[BANK0 ] unsigned char 
  3454 ;;  result          2   11[BANK0 ] unsigned int 
  3455 ;; Return value:  Size  Location     Type
  3456 ;;                  2    8[BANK0 ] unsigned int 
  3457 ;; Registers used:
  3458 ;;		wreg, status,2, status,0
  3459 ;; Tracked objects:
  3460 ;;		On entry : 0/0
  3461 ;;		On exit  : 0/0
  3462 ;;		Unchanged: 0/0
  3463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3464 ;;      Params:         0       2       0       0       0
  3465 ;;      Locals:         0       3       0       0       0
  3466 ;;      Temps:          0       1       0       0       0
  3467 ;;      Totals:         0       6       0       0       0
  3468 ;;Total ram usage:        6 bytes
  3469 ;; Hardware stack levels used:    1
  3470 ;; Hardware stack levels required when called:    3
  3471 ;; This function calls:
  3472 ;;		Nothing
  3473 ;; This function is called by:
  3474 ;;		_main
  3475 ;; This function uses a non-reentrant model
  3476 ;;
  3477                           
  3478                           
  3479                           ;psect for function _ADC_Read
  3480  0409                     _ADC_Read:
  3481                           
  3482                           ;incstack = 0
  3483                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  3484                           ;ADC_Read@ADC_channel stored from wreg
  3485  0409  1283               	bcf	3,5	;RP0=0, select bank0
  3486  040A  1303               	bcf	3,6	;RP1=0, select bank0
  3487  040B  00AD               	movwf	ADC_Read@ADC_channel
  3488  040C                     l1792:
  3489                           
  3490                           ;BTL_HIHI_main.c: 340: uint16_t ADC_Read(uint8_t ADC_channel);BTL_HIHI_main.c: 341: {;BT
      +                          L_HIHI_main.c: 343:     if (ADC_channel < 0 || ADC_channel > 7)
  3491  040C  3008               	movlw	8
  3492  040D  022D               	subwf	ADC_Read@ADC_channel,w
  3493  040E  1C03               	skipc
  3494  040F  2C11               	goto	u981
  3495  0410  2C12               	goto	u980
  3496  0411                     u981:
  3497  0411  2C15               	goto	l350
  3498  0412                     u980:
  3499  0412                     l1794:
  3500                           
  3501                           ;BTL_HIHI_main.c: 344:         return 0;
  3502  0412  01A8               	clrf	?_ADC_Read
  3503  0413  01A9               	clrf	?_ADC_Read+1
  3504  0414  2C5D               	goto	l351
  3505  0415                     l350:
  3506                           
  3507                           ;BTL_HIHI_main.c: 347:     CHS0 = (ADC_channel & 1) >> 0;
  3508  0415  182D               	btfsc	ADC_Read@ADC_channel,0
  3509  0416  2C18               	goto	u991
  3510  0417  2C1C               	goto	u990
  3511  0418                     u991:
  3512  0418  1283               	bcf	3,5	;RP0=0, select bank0
  3513  0419  1303               	bcf	3,6	;RP1=0, select bank0
  3514  041A  159F               	bsf	31,3	;volatile
  3515  041B  2C1F               	goto	u1004
  3516  041C                     u990:
  3517  041C  1283               	bcf	3,5	;RP0=0, select bank0
  3518  041D  1303               	bcf	3,6	;RP1=0, select bank0
  3519  041E  119F               	bcf	31,3	;volatile
  3520  041F                     u1004:
  3521  041F                     l1798:
  3522                           
  3523                           ;BTL_HIHI_main.c: 348:     CHS1 = (ADC_channel & 2) >> 1;
  3524  041F  082D               	movf	ADC_Read@ADC_channel,w
  3525  0420  00AA               	movwf	??_ADC_Read
  3526  0421  3001               	movlw	1
  3527  0422                     u1015:
  3528  0422  1003               	clrc
  3529  0423  0CAA               	rrf	??_ADC_Read,f
  3530  0424  3EFF               	addlw	-1
  3531  0425  1D03               	skipz
  3532  0426  2C22               	goto	u1015
  3533  0427  182A               	btfsc	??_ADC_Read,0
  3534  0428  2C2A               	goto	u1021
  3535  0429  2C2E               	goto	u1020
  3536  042A                     u1021:
  3537  042A  1283               	bcf	3,5	;RP0=0, select bank0
  3538  042B  1303               	bcf	3,6	;RP1=0, select bank0
  3539  042C  161F               	bsf	31,4	;volatile
  3540  042D  2C31               	goto	u1034
  3541  042E                     u1020:
  3542  042E  1283               	bcf	3,5	;RP0=0, select bank0
  3543  042F  1303               	bcf	3,6	;RP1=0, select bank0
  3544  0430  121F               	bcf	31,4	;volatile
  3545  0431                     u1034:
  3546                           
  3547                           ;BTL_HIHI_main.c: 349:     CHS2 = (ADC_channel & 4) >> 2;
  3548  0431  082D               	movf	ADC_Read@ADC_channel,w
  3549  0432  00AA               	movwf	??_ADC_Read
  3550  0433  3002               	movlw	2
  3551  0434                     u1045:
  3552  0434  1003               	clrc
  3553  0435  0CAA               	rrf	??_ADC_Read,f
  3554  0436  3EFF               	addlw	-1
  3555  0437  1D03               	skipz
  3556  0438  2C34               	goto	u1045
  3557  0439  182A               	btfsc	??_ADC_Read,0
  3558  043A  2C3C               	goto	u1051
  3559  043B  2C40               	goto	u1050
  3560  043C                     u1051:
  3561  043C  1283               	bcf	3,5	;RP0=0, select bank0
  3562  043D  1303               	bcf	3,6	;RP1=0, select bank0
  3563  043E  169F               	bsf	31,5	;volatile
  3564  043F  2C43               	goto	u1064
  3565  0440                     u1050:
  3566  0440  1283               	bcf	3,5	;RP0=0, select bank0
  3567  0441  1303               	bcf	3,6	;RP1=0, select bank0
  3568  0442  129F               	bcf	31,5	;volatile
  3569  0443                     u1064:
  3570  0443                     l1800:
  3571                           
  3572                           ;BTL_HIHI_main.c: 352:     _delay((unsigned long)((25)*(20000000/4000000.0)));
  3573  0443  3028               	movlw	40
  3574  0444  1283               	bcf	3,5	;RP0=0, select bank0
  3575  0445  1303               	bcf	3,6	;RP1=0, select bank0
  3576  0446  00AA               	movwf	??_ADC_Read
  3577  0447                     u1527:
  3578  0447  0BAA               	decfsz	??_ADC_Read,f
  3579  0448  2C47               	goto	u1527
  3580  0449  2C4A               	nop2
  3581  044A                     l1802:
  3582                           
  3583                           ;BTL_HIHI_main.c: 355:     GO_DONE = 1;
  3584  044A  1283               	bcf	3,5	;RP0=0, select bank0
  3585  044B  1303               	bcf	3,6	;RP1=0, select bank0
  3586  044C  151F               	bsf	31,2	;volatile
  3587  044D                     l352:	
  3588                           ;BTL_HIHI_main.c: 359:         ;
  3589                           
  3590                           
  3591                           ;BTL_HIHI_main.c: 358:     while (GO_DONE)
  3592  044D  191F               	btfsc	31,2	;volatile
  3593  044E  2C50               	goto	u1071
  3594  044F  2C51               	goto	u1070
  3595  0450                     u1071:
  3596  0450  2C4D               	goto	l352
  3597  0451                     u1070:
  3598  0451                     l1804:
  3599                           
  3600                           ;BTL_HIHI_main.c: 362:     uint16_t result = ((ADRESH << 8) + ADRESL);
  3601  0451  081E               	movf	30,w	;volatile
  3602  0452  00AC               	movwf	ADC_Read@result+1
  3603  0453  1683               	bsf	3,5	;RP0=1, select bank1
  3604  0454  1303               	bcf	3,6	;RP1=0, select bank1
  3605  0455  081E               	movf	30,w	;volatile
  3606  0456  1283               	bcf	3,5	;RP0=0, select bank0
  3607  0457  1303               	bcf	3,6	;RP1=0, select bank0
  3608  0458  00AB               	movwf	ADC_Read@result
  3609                           
  3610                           ;BTL_HIHI_main.c: 363:     return result;
  3611  0459  082C               	movf	ADC_Read@result+1,w
  3612  045A  00A9               	movwf	?_ADC_Read+1
  3613  045B  082B               	movf	ADC_Read@result,w
  3614  045C  00A8               	movwf	?_ADC_Read
  3615  045D                     l351:
  3616  045D  0008               	return
  3617  045E                     __end_of_ADC_Read:
  3618                           
  3619                           	psect	text24
  3620  06B7                     __ptext24:	
  3621 ;; *************** function _ADC_Init *****************
  3622 ;; Defined at:
  3623 ;;		line 318 in file "BTL_HIHI_main.c"
  3624 ;; Parameters:    Size  Location     Type
  3625 ;;		None
  3626 ;; Auto vars:     Size  Location     Type
  3627 ;;		None
  3628 ;; Return value:  Size  Location     Type
  3629 ;;                  1    wreg      void 
  3630 ;; Registers used:
  3631 ;;		None
  3632 ;; Tracked objects:
  3633 ;;		On entry : 0/0
  3634 ;;		On exit  : 0/0
  3635 ;;		Unchanged: 0/0
  3636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3637 ;;      Params:         0       0       0       0       0
  3638 ;;      Locals:         0       0       0       0       0
  3639 ;;      Temps:          0       0       0       0       0
  3640 ;;      Totals:         0       0       0       0       0
  3641 ;;Total ram usage:        0 bytes
  3642 ;; Hardware stack levels used:    1
  3643 ;; Hardware stack levels required when called:    3
  3644 ;; This function calls:
  3645 ;;		Nothing
  3646 ;; This function is called by:
  3647 ;;		_main
  3648 ;; This function uses a non-reentrant model
  3649 ;;
  3650                           
  3651                           
  3652                           ;psect for function _ADC_Init
  3653  06B7                     _ADC_Init:
  3654  06B7                     l1722:	
  3655                           ;incstack = 0
  3656                           ; Regs used in _ADC_Init: []
  3657                           
  3658                           
  3659                           ;BTL_HIHI_main.c: 323:     ADCS0 = 1;
  3660  06B7  1283               	bcf	3,5	;RP0=0, select bank0
  3661  06B8  1303               	bcf	3,6	;RP1=0, select bank0
  3662  06B9  171F               	bsf	31,6	;volatile
  3663                           
  3664                           ;BTL_HIHI_main.c: 324:     ADCS1 = 0;
  3665  06BA  139F               	bcf	31,7	;volatile
  3666                           
  3667                           ;BTL_HIHI_main.c: 326:     ADON = 1;
  3668  06BB  141F               	bsf	31,0	;volatile
  3669                           
  3670                           ;BTL_HIHI_main.c: 330:     ADFM = 1;
  3671  06BC  1683               	bsf	3,5	;RP0=1, select bank1
  3672  06BD  1303               	bcf	3,6	;RP1=0, select bank1
  3673  06BE  179F               	bsf	31,7	;volatile
  3674                           
  3675                           ;BTL_HIHI_main.c: 332:     ADCS2 = 1;
  3676  06BF  171F               	bsf	31,6	;volatile
  3677                           
  3678                           ;BTL_HIHI_main.c: 334:     PCFG0 = 0;
  3679  06C0  101F               	bcf	31,0	;volatile
  3680                           
  3681                           ;BTL_HIHI_main.c: 335:     PCFG1 = 0;
  3682  06C1  109F               	bcf	31,1	;volatile
  3683                           
  3684                           ;BTL_HIHI_main.c: 336:     PCFG2 = 0;
  3685  06C2  111F               	bcf	31,2	;volatile
  3686                           
  3687                           ;BTL_HIHI_main.c: 337:     PCFG3 = 0;
  3688  06C3  119F               	bcf	31,3	;volatile
  3689  06C4                     l347:
  3690  06C4  0008               	return
  3691  06C5                     __end_of_ADC_Init:
  3692                           
  3693                           	psect	text25
  3694  015F                     __ptext25:	
  3695 ;; *************** function _isr1 *****************
  3696 ;; Defined at:
  3697 ;;		line 181 in file "BTL_HIHI_main.c"
  3698 ;; Parameters:    Size  Location     Type
  3699 ;;		None
  3700 ;; Auto vars:     Size  Location     Type
  3701 ;;		None
  3702 ;; Return value:  Size  Location     Type
  3703 ;;                  1    wreg      void 
  3704 ;; Registers used:
  3705 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3706 ;; Tracked objects:
  3707 ;;		On entry : 0/0
  3708 ;;		On exit  : 0/0
  3709 ;;		Unchanged: 0/0
  3710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3711 ;;      Params:         0       0       0       0       0
  3712 ;;      Locals:         0       0       0       0       0
  3713 ;;      Temps:          0       8       0       0       0
  3714 ;;      Totals:         0       8       0       0       0
  3715 ;;Total ram usage:        8 bytes
  3716 ;; Hardware stack levels used:    1
  3717 ;; Hardware stack levels required when called:    2
  3718 ;; This function calls:
  3719 ;;		_EEPROM_Write
  3720 ;;		_UART_send_string
  3721 ;;		i1_ADC_Read
  3722 ;;		i1_setPWM_DutyCycle
  3723 ;; This function is called by:
  3724 ;;		Interrupt level 1
  3725 ;; This function uses a non-reentrant model
  3726 ;;
  3727                           
  3728                           
  3729                           ;psect for function _isr1
  3730  015F                     _isr1:
  3731  015F                     i1l1958:
  3732                           
  3733                           ;BTL_HIHI_main.c: 184:     if (T0IF == 1)
  3734  015F  1D0B               	btfss	11,2	;volatile
  3735  0160  2962               	goto	u129_21
  3736  0161  2963               	goto	u129_20
  3737  0162                     u129_21:
  3738  0162  29B7               	goto	i1l1990
  3739  0163                     u129_20:
  3740  0163                     i1l1960:
  3741                           
  3742                           ;BTL_HIHI_main.c: 185:     {;BTL_HIHI_main.c: 186:         TMR0 = 5;
  3743  0163  3005               	movlw	5
  3744  0164  0081               	movwf	1	;volatile
  3745  0165                     i1l1962:
  3746                           
  3747                           ;BTL_HIHI_main.c: 187:         T0IF = 0;
  3748  0165  110B               	bcf	11,2	;volatile
  3749  0166                     i1l1964:
  3750                           
  3751                           ;BTL_HIHI_main.c: 188:         cnt_pos++;
  3752  0166  3001               	movlw	1
  3753  0167  00A0               	movwf	??_isr1
  3754  0168  0820               	movf	??_isr1,w
  3755  0169  07FB               	addwf	_cnt_pos,f
  3756  016A                     i1l1966:
  3757                           
  3758                           ;BTL_HIHI_main.c: 190:         if (cnt_pos == pos)
  3759  016A  087B               	movf	_cnt_pos,w
  3760  016B  067D               	xorwf	_pos,w
  3761  016C  1D03               	skipz
  3762  016D  296F               	goto	u130_21
  3763  016E  2970               	goto	u130_20
  3764  016F                     u130_21:
  3765  016F  2982               	goto	i1l1974
  3766  0170                     u130_20:
  3767  0170                     i1l1968:
  3768                           
  3769                           ;BTL_HIHI_main.c: 191:         {;BTL_HIHI_main.c: 192:             if (SelectServo == 0)
  3770  0170  087C               	movf	_SelectServo,w
  3771  0171  1D03               	btfss	3,2
  3772  0172  2974               	goto	u131_21
  3773  0173  2975               	goto	u131_20
  3774  0174                     u131_21:
  3775  0174  297C               	goto	i1l1972
  3776  0175                     u131_20:
  3777  0175                     i1l1970:
  3778                           
  3779                           ;BTL_HIHI_main.c: 193:             {;BTL_HIHI_main.c: 194:                 RB6 = ~RB6;
  3780  0175  3040               	movlw	64
  3781  0176  0686               	xorwf	6,f
  3782                           
  3783                           ;BTL_HIHI_main.c: 195:                 time_delay = 20000;
  3784  0177  3020               	movlw	32
  3785  0178  00BF               	movwf	_time_delay
  3786  0179  304E               	movlw	78
  3787  017A  00C0               	movwf	_time_delay+1
  3788                           
  3789                           ;BTL_HIHI_main.c: 196:             }
  3790  017B  2982               	goto	i1l1974
  3791  017C                     i1l1972:
  3792                           
  3793                           ;BTL_HIHI_main.c: 198:             {;BTL_HIHI_main.c: 199:                 RB5 = ~RB5;
  3794  017C  3020               	movlw	32
  3795  017D  0686               	xorwf	6,f
  3796                           
  3797                           ;BTL_HIHI_main.c: 200:                 time_delay = 30000;
  3798  017E  3030               	movlw	48
  3799  017F  00BF               	movwf	_time_delay
  3800  0180  3075               	movlw	117
  3801  0181  00C0               	movwf	_time_delay+1
  3802  0182                     i1l1974:
  3803                           
  3804                           ;BTL_HIHI_main.c: 204:         if (cnt_pos == 200 - pos)
  3805  0182  3000               	movlw	0
  3806  0183  00A1               	movwf	??_isr1+1
  3807  0184  087D               	movf	_pos,w
  3808  0185  3CC8               	sublw	200
  3809  0186  00A0               	movwf	??_isr1
  3810  0187  1C03               	skipc
  3811  0188  03A1               	decf	??_isr1+1,f
  3812  0189  087B               	movf	_cnt_pos,w
  3813  018A  00A2               	movwf	??_isr1+2
  3814  018B  01A3               	clrf	??_isr1+3
  3815  018C  0821               	movf	??_isr1+1,w
  3816  018D  0623               	xorwf	??_isr1+3,w
  3817  018E  1D03               	skipz
  3818  018F  2992               	goto	u132_25
  3819  0190  0820               	movf	??_isr1,w
  3820  0191  0622               	xorwf	??_isr1+2,w
  3821  0192                     u132_25:
  3822  0192  1D03               	skipz
  3823  0193  2995               	goto	u132_21
  3824  0194  2996               	goto	u132_20
  3825  0195                     u132_21:
  3826  0195  29A1               	goto	i1l1984
  3827  0196                     u132_20:
  3828  0196                     i1l1976:
  3829                           
  3830                           ;BTL_HIHI_main.c: 205:         {;BTL_HIHI_main.c: 206:             if (SelectServo == 0)
  3831  0196  087C               	movf	_SelectServo,w
  3832  0197  1D03               	btfss	3,2
  3833  0198  299A               	goto	u133_21
  3834  0199  299B               	goto	u133_20
  3835  019A                     u133_21:
  3836  019A  299E               	goto	i1l1980
  3837  019B                     u133_20:
  3838  019B                     i1l1978:
  3839                           
  3840                           ;BTL_HIHI_main.c: 207:             {;BTL_HIHI_main.c: 208:                 RB6 = ~RB6;
  3841  019B  3040               	movlw	64
  3842  019C  0686               	xorwf	6,f
  3843                           
  3844                           ;BTL_HIHI_main.c: 209:             }
  3845  019D  29A0               	goto	i1l1982
  3846  019E                     i1l1980:
  3847                           
  3848                           ;BTL_HIHI_main.c: 211:             {;BTL_HIHI_main.c: 212:                 RB5 = ~RB5;
  3849  019E  3020               	movlw	32
  3850  019F  0686               	xorwf	6,f
  3851  01A0                     i1l1982:
  3852                           
  3853                           ;BTL_HIHI_main.c: 214:             cnt_pos = 0;
  3854  01A0  01FB               	clrf	_cnt_pos
  3855  01A1                     i1l1984:
  3856                           
  3857                           ;BTL_HIHI_main.c: 217:         if (OpenServo == 1)
  3858  01A1  0343               	decf	_OpenServo,w
  3859  01A2  1D03               	btfss	3,2
  3860  01A3  29A5               	goto	u134_21
  3861  01A4  29A6               	goto	u134_20
  3862  01A5                     u134_21:
  3863  01A5  29B7               	goto	i1l1990
  3864  01A6                     u134_20:
  3865  01A6                     i1l1986:
  3866                           
  3867                           ;BTL_HIHI_main.c: 218:         {;BTL_HIHI_main.c: 219:             cnt_time_delay++;
  3868  01A6  3001               	movlw	1
  3869  01A7  07C5               	addwf	_cnt_time_delay,f
  3870  01A8  1803               	skipnc
  3871  01A9  0AC6               	incf	_cnt_time_delay+1,f
  3872  01AA  3000               	movlw	0
  3873  01AB  07C6               	addwf	_cnt_time_delay+1,f
  3874                           
  3875                           ;BTL_HIHI_main.c: 221:             if (cnt_time_delay >= time_delay)
  3876  01AC  0840               	movf	_time_delay+1,w
  3877  01AD  0246               	subwf	_cnt_time_delay+1,w
  3878  01AE  1D03               	skipz
  3879  01AF  29B2               	goto	u135_25
  3880  01B0  083F               	movf	_time_delay,w
  3881  01B1  0245               	subwf	_cnt_time_delay,w
  3882  01B2                     u135_25:
  3883  01B2  1C03               	skipc
  3884  01B3  29B5               	goto	u135_21
  3885  01B4  29B6               	goto	u135_20
  3886  01B5                     u135_21:
  3887  01B5  29B7               	goto	i1l1990
  3888  01B6                     u135_20:
  3889  01B6                     i1l1988:
  3890                           
  3891                           ;BTL_HIHI_main.c: 222:             {;BTL_HIHI_main.c: 223:                 OpenServo = 0
      +                          ;
  3892  01B6  01C3               	clrf	_OpenServo
  3893  01B7                     i1l1990:
  3894                           
  3895                           ;BTL_HIHI_main.c: 229:     if (INTF == 1)
  3896  01B7  1C8B               	btfss	11,1	;volatile
  3897  01B8  29BA               	goto	u136_21
  3898  01B9  29BB               	goto	u136_20
  3899  01BA                     u136_21:
  3900  01BA  29CD               	goto	i1l2000
  3901  01BB                     u136_20:
  3902  01BB                     i1l1992:
  3903                           
  3904                           ;BTL_HIHI_main.c: 230:     {;BTL_HIHI_main.c: 231:         setPWM_DutyCycle(0);
  3905  01BB  3000               	movlw	0
  3906  01BC  00F6               	movwf	i1setPWM_DutyCycle@DC
  3907  01BD  00F7               	movwf	i1setPWM_DutyCycle@DC+1
  3908  01BE  120A  118A  265D  120A  118A  	fcall	i1_setPWM_DutyCycle
  3909  01C3                     i1l1994:
  3910                           
  3911                           ;BTL_HIHI_main.c: 232:         flag_dc = 0;
  3912  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  3913  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  3914  01C5  01C1               	clrf	_flag_dc
  3915  01C6                     i1l1996:
  3916                           
  3917                           ;BTL_HIHI_main.c: 233:         UART_send_string("check\n");
  3918  01C6  303B               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  3919  01C7  120A  118A  25D0  120A  118A  	fcall	_UART_send_string
  3920  01CC                     i1l1998:
  3921                           
  3922                           ;BTL_HIHI_main.c: 234:         INTF = 0;
  3923  01CC  108B               	bcf	11,1	;volatile
  3924  01CD                     i1l2000:
  3925                           
  3926                           ;BTL_HIHI_main.c: 238:     if (RCIF == 1)
  3927  01CD  1283               	bcf	3,5	;RP0=0, select bank0
  3928  01CE  1303               	bcf	3,6	;RP1=0, select bank0
  3929  01CF  1E8C               	btfss	12,5	;volatile
  3930  01D0  29D2               	goto	u137_21
  3931  01D1  29D3               	goto	u137_20
  3932  01D2                     u137_21:
  3933  01D2  2A34               	goto	i1l335
  3934  01D3                     u137_20:
  3935  01D3                     i1l2002:
  3936                           
  3937                           ;BTL_HIHI_main.c: 239:     {;BTL_HIHI_main.c: 240:         result = RCREG;
  3938  01D3  081A               	movf	26,w	;volatile
  3939  01D4  00A0               	movwf	??_isr1
  3940  01D5  0820               	movf	??_isr1,w
  3941  01D6  00FA               	movwf	_result
  3942  01D7                     i1l2006:	
  3943                           ;BTL_HIHI_main.c: 241:         if (count_sp1 < 0)
  3944                           
  3945                           
  3946                           ;BTL_HIHI_main.c: 248:         if (result == 'a')
  3947  01D7  3061               	movlw	97
  3948  01D8  067A               	xorwf	_result,w
  3949  01D9  1D03               	btfss	3,2
  3950  01DA  29DC               	goto	u138_21
  3951  01DB  29DD               	goto	u138_20
  3952  01DC                     u138_21:
  3953  01DC  29F1               	goto	i1l2016
  3954  01DD                     u138_20:
  3955  01DD                     i1l2008:
  3956                           
  3957                           ;BTL_HIHI_main.c: 249:         {;BTL_HIHI_main.c: 250:             count_sp1++;
  3958  01DD  3001               	movlw	1
  3959  01DE  00A0               	movwf	??_isr1
  3960  01DF  0820               	movf	??_isr1,w
  3961  01E0  07C9               	addwf	_count_sp1,f
  3962  01E1                     i1l2010:
  3963                           
  3964                           ;BTL_HIHI_main.c: 251:             EEPROM_Write(0x00, count_sp1);
  3965  01E1  0849               	movf	_count_sp1,w
  3966  01E2  00A0               	movwf	??_isr1
  3967  01E3  0820               	movf	??_isr1,w
  3968  01E4  00F0               	movwf	EEPROM_Write@Data
  3969  01E5  3000               	movlw	0
  3970  01E6  120A  118A  2628  120A  118A  	fcall	_EEPROM_Write
  3971  01EB                     i1l2012:
  3972                           
  3973                           ;BTL_HIHI_main.c: 252:             SelectServo = 0;
  3974  01EB  01FC               	clrf	_SelectServo
  3975  01EC                     i1l2014:
  3976                           
  3977                           ;BTL_HIHI_main.c: 253:             OpenServo = 1;
  3978  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  3979  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  3980  01EE  01C3               	clrf	_OpenServo
  3981  01EF  0AC3               	incf	_OpenServo,f
  3982                           
  3983                           ;BTL_HIHI_main.c: 254:         }
  3984  01F0  2A1F               	goto	i1l2034
  3985  01F1                     i1l2016:
  3986  01F1  3062               	movlw	98
  3987  01F2  067A               	xorwf	_result,w
  3988  01F3  1D03               	btfss	3,2
  3989  01F4  29F6               	goto	u139_21
  3990  01F5  29F7               	goto	u139_20
  3991  01F6                     u139_21:
  3992  01F6  2A08               	goto	i1l2026
  3993  01F7                     u139_20:
  3994  01F7                     i1l2018:
  3995                           
  3996                           ;BTL_HIHI_main.c: 256:         {;BTL_HIHI_main.c: 257:             count_sp2++;
  3997  01F7  3001               	movlw	1
  3998  01F8  00A0               	movwf	??_isr1
  3999  01F9  0820               	movf	??_isr1,w
  4000  01FA  07C8               	addwf	_count_sp2,f
  4001  01FB                     i1l2020:
  4002                           
  4003                           ;BTL_HIHI_main.c: 258:             EEPROM_Write(0x01, count_sp2);
  4004  01FB  0848               	movf	_count_sp2,w
  4005  01FC  00A0               	movwf	??_isr1
  4006  01FD  0820               	movf	??_isr1,w
  4007  01FE  00F0               	movwf	EEPROM_Write@Data
  4008  01FF  3001               	movlw	1
  4009  0200  120A  118A  2628  120A  118A  	fcall	_EEPROM_Write
  4010  0205                     i1l2022:
  4011                           
  4012                           ;BTL_HIHI_main.c: 259:             SelectServo = 1;
  4013  0205  01FC               	clrf	_SelectServo
  4014  0206  0AFC               	incf	_SelectServo,f
  4015  0207  29EC               	goto	i1l2014
  4016  0208                     i1l2026:
  4017  0208  3063               	movlw	99
  4018  0209  067A               	xorwf	_result,w
  4019  020A  1D03               	btfss	3,2
  4020  020B  2A0D               	goto	u140_21
  4021  020C  2A0E               	goto	u140_20
  4022  020D                     u140_21:
  4023  020D  2A1F               	goto	i1l2034
  4024  020E                     u140_20:
  4025  020E                     i1l2028:
  4026                           
  4027                           ;BTL_HIHI_main.c: 263:         {;BTL_HIHI_main.c: 264:             count_sp3++;
  4028  020E  3001               	movlw	1
  4029  020F  00A0               	movwf	??_isr1
  4030  0210  0820               	movf	??_isr1,w
  4031  0211  07C7               	addwf	_count_sp3,f
  4032  0212                     i1l2030:
  4033                           
  4034                           ;BTL_HIHI_main.c: 265:             EEPROM_Write(0x02, count_sp3);
  4035  0212  0847               	movf	_count_sp3,w
  4036  0213  00A0               	movwf	??_isr1
  4037  0214  0820               	movf	??_isr1,w
  4038  0215  00F0               	movwf	EEPROM_Write@Data
  4039  0216  3002               	movlw	2
  4040  0217  120A  118A  2628  120A  118A  	fcall	_EEPROM_Write
  4041  021C                     i1l2032:
  4042                           
  4043                           ;BTL_HIHI_main.c: 266:             OpenServo = 0;
  4044  021C  1283               	bcf	3,5	;RP0=0, select bank0
  4045  021D  1303               	bcf	3,6	;RP1=0, select bank0
  4046  021E  01C3               	clrf	_OpenServo
  4047  021F                     i1l2034:
  4048                           
  4049                           ;BTL_HIHI_main.c: 268:         flag_dc = 1;
  4050  021F  01C1               	clrf	_flag_dc
  4051  0220  0AC1               	incf	_flag_dc,f
  4052  0221                     i1l2036:
  4053                           
  4054                           ;BTL_HIHI_main.c: 269:         setPWM_DutyCycle(ADC_Read(0));
  4055  0221  3000               	movlw	0
  4056  0222  120A  118A  245E  120A  118A  	fcall	i1_ADC_Read
  4057  0227  0871               	movf	?i1_ADC_Read+1,w
  4058  0228  00F7               	movwf	i1setPWM_DutyCycle@DC+1
  4059  0229  0870               	movf	?i1_ADC_Read,w
  4060  022A  00F6               	movwf	i1setPWM_DutyCycle@DC
  4061  022B  120A  118A  265D  120A  118A  	fcall	i1_setPWM_DutyCycle
  4062  0230                     i1l2038:
  4063                           
  4064                           ;BTL_HIHI_main.c: 270:         result = '\0';
  4065  0230  01FA               	clrf	_result
  4066  0231                     i1l2040:
  4067                           
  4068                           ;BTL_HIHI_main.c: 272:         RCIF = 0;
  4069  0231  1283               	bcf	3,5	;RP0=0, select bank0
  4070  0232  1303               	bcf	3,6	;RP1=0, select bank0
  4071  0233  128C               	bcf	12,5	;volatile
  4072  0234                     i1l335:
  4073  0234  0827               	movf	??_isr1+7,w
  4074  0235  00FF               	movwf	btemp+1
  4075  0236  0826               	movf	??_isr1+6,w
  4076  0237  008A               	movwf	10
  4077  0238  0825               	movf	??_isr1+5,w
  4078  0239  0084               	movwf	4
  4079  023A  0E24               	swapf	??_isr1+4,w
  4080  023B  0083               	movwf	3
  4081  023C  0EFE               	swapf	btemp,f
  4082  023D  0E7E               	swapf	btemp,w
  4083  023E  0009               	retfie
  4084  023F                     __end_of_isr1:
  4085                           
  4086                           	psect	intentry
  4087  0004                     __pintentry:	
  4088                           ;incstack = 0
  4089 ;; hardware stack exceeded
  4090                           ; Regs used in _isr1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4091                           
  4092  0004                     interrupt_function:
  4093  007E                     saved_w	set	btemp
  4094  0004  00FE               	movwf	btemp
  4095  0005  0E03               	swapf	3,w
  4096  0006  1283               	bcf	3,5	;RP0=0, select bank0
  4097  0007  1303               	bcf	3,6	;RP1=0, select bank0
  4098  0008  00A4               	movwf	??_isr1+4
  4099  0009  0804               	movf	4,w
  4100  000A  00A5               	movwf	??_isr1+5
  4101  000B  080A               	movf	10,w
  4102  000C  00A6               	movwf	??_isr1+6
  4103  000D  087F               	movf	btemp+1,w
  4104  000E  00A7               	movwf	??_isr1+7
  4105  000F  120A  118A  295F   	ljmp	_isr1
  4106                           
  4107                           	psect	text26
  4108  065D                     __ptext26:	
  4109 ;; *************** function i1_setPWM_DutyCycle *****************
  4110 ;; Defined at:
  4111 ;;		line 398 in file "BTL_HIHI_main.c"
  4112 ;; Parameters:    Size  Location     Type
  4113 ;;  DC              2    6[COMMON] unsigned int 
  4114 ;; Auto vars:     Size  Location     Type
  4115 ;;		None
  4116 ;; Return value:  Size  Location     Type
  4117 ;;                  1    wreg      void 
  4118 ;; Registers used:
  4119 ;;		wreg, status,2, status,0
  4120 ;; Tracked objects:
  4121 ;;		On entry : 0/0
  4122 ;;		On exit  : 0/0
  4123 ;;		Unchanged: 0/0
  4124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4125 ;;      Params:         2       0       0       0       0
  4126 ;;      Locals:         0       0       0       0       0
  4127 ;;      Temps:          2       0       0       0       0
  4128 ;;      Totals:         4       0       0       0       0
  4129 ;;Total ram usage:        4 bytes
  4130 ;; Hardware stack levels used:    1
  4131 ;; This function calls:
  4132 ;;		Nothing
  4133 ;; This function is called by:
  4134 ;;		_isr1
  4135 ;; This function uses a non-reentrant model
  4136 ;;
  4137                           
  4138                           
  4139                           ;psect for function i1_setPWM_DutyCycle
  4140  065D                     i1_setPWM_DutyCycle:
  4141  065D                     i1l1854:	
  4142                           ;incstack = 0
  4143 ;; hardware stack exceeded
  4144                           ; Regs used in i1_setPWM_DutyCycle: [wreg+status,2+status,0]
  4145                           
  4146                           
  4147                           ;BTL_HIHI_main.c: 398: void setPWM_DutyCycle(uint16_t DC);BTL_HIHI_main.c: 399: {;BTL_HI
      +                          HI_main.c: 403:     CCP1Y = DC & (1 << 0);
  4148  065D  1876               	btfsc	i1setPWM_DutyCycle@DC,0
  4149  065E  2E60               	goto	u122_21
  4150  065F  2E64               	goto	u122_20
  4151  0660                     u122_21:
  4152  0660  1283               	bcf	3,5	;RP0=0, select bank0
  4153  0661  1303               	bcf	3,6	;RP1=0, select bank0
  4154  0662  1617               	bsf	23,4	;volatile
  4155  0663  2E67               	goto	u123_24
  4156  0664                     u122_20:
  4157  0664  1283               	bcf	3,5	;RP0=0, select bank0
  4158  0665  1303               	bcf	3,6	;RP1=0, select bank0
  4159  0666  1217               	bcf	23,4	;volatile
  4160  0667                     u123_24:
  4161                           
  4162                           ;BTL_HIHI_main.c: 404:     CCP1X = DC & (1 << 1);
  4163  0667  1297               	bcf	23,5	;volatile
  4164  0668                     i1l1856:
  4165                           
  4166                           ;BTL_HIHI_main.c: 406:     CCPR1L = DC >> 2;
  4167  0668  0877               	movf	i1setPWM_DutyCycle@DC+1,w
  4168  0669  00F9               	movwf	??i1_setPWM_DutyCycle+1
  4169  066A  0876               	movf	i1setPWM_DutyCycle@DC,w
  4170  066B  00F8               	movwf	??i1_setPWM_DutyCycle
  4171  066C  1003               	clrc
  4172  066D  0CF9               	rrf	??i1_setPWM_DutyCycle+1,f
  4173  066E  0CF8               	rrf	??i1_setPWM_DutyCycle,f
  4174  066F  1003               	clrc
  4175  0670  0CF9               	rrf	??i1_setPWM_DutyCycle+1,f
  4176  0671  0CF8               	rrf	??i1_setPWM_DutyCycle,f
  4177  0672  0878               	movf	??i1_setPWM_DutyCycle,w
  4178  0673  0095               	movwf	21	;volatile
  4179  0674                     i1l365:
  4180  0674  0008               	return
  4181  0675                     __end_ofi1_setPWM_DutyCycle:
  4182                           
  4183                           	psect	text27
  4184  045E                     __ptext27:	
  4185 ;; *************** function i1_ADC_Read *****************
  4186 ;; Defined at:
  4187 ;;		line 340 in file "BTL_HIHI_main.c"
  4188 ;; Parameters:    Size  Location     Type
  4189 ;;  ADC_channel     1    wreg     unsigned char 
  4190 ;; Auto vars:     Size  Location     Type
  4191 ;;  ADC_channel     1    5[COMMON] unsigned char 
  4192 ;;  result          2    3[COMMON] unsigned int 
  4193 ;; Return value:  Size  Location     Type
  4194 ;;                  2    0[COMMON] unsigned int 
  4195 ;; Registers used:
  4196 ;;		wreg, status,2, status,0
  4197 ;; Tracked objects:
  4198 ;;		On entry : 0/0
  4199 ;;		On exit  : 0/0
  4200 ;;		Unchanged: 0/0
  4201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4202 ;;      Params:         2       0       0       0       0
  4203 ;;      Locals:         3       0       0       0       0
  4204 ;;      Temps:          1       0       0       0       0
  4205 ;;      Totals:         6       0       0       0       0
  4206 ;;Total ram usage:        6 bytes
  4207 ;; Hardware stack levels used:    1
  4208 ;; This function calls:
  4209 ;;		Nothing
  4210 ;; This function is called by:
  4211 ;;		_isr1
  4212 ;; This function uses a non-reentrant model
  4213 ;;
  4214                           
  4215                           
  4216                           ;psect for function i1_ADC_Read
  4217  045E                     i1_ADC_Read:
  4218                           
  4219                           ;incstack = 0
  4220 ;; hardware stack exceeded
  4221                           ; Regs used in i1_ADC_Read: [wreg+status,2+status,0]
  4222                           ;i1ADC_Read@ADC_channel stored from wreg
  4223  045E  00F5               	movwf	i1ADC_Read@ADC_channel
  4224  045F                     i1l1838:
  4225                           
  4226                           ;BTL_HIHI_main.c: 340: uint16_t ADC_Read(uint8_t ADC_channel);BTL_HIHI_main.c: 341: {;BT
      +                          L_HIHI_main.c: 343:     if (ADC_channel < 0 || ADC_channel > 7)
  4227  045F  3008               	movlw	8
  4228  0460  0275               	subwf	i1ADC_Read@ADC_channel,w
  4229  0461  1C03               	skipc
  4230  0462  2C64               	goto	u112_21
  4231  0463  2C65               	goto	u112_20
  4232  0464                     u112_21:
  4233  0464  2C68               	goto	i1l350
  4234  0465                     u112_20:
  4235  0465                     i1l1840:
  4236                           
  4237                           ;BTL_HIHI_main.c: 344:         return 0;
  4238  0465  01F0               	clrf	?i1_ADC_Read
  4239  0466  01F1               	clrf	?i1_ADC_Read+1
  4240  0467  2CAC               	goto	i1l351
  4241  0468                     i1l350:
  4242                           
  4243                           ;BTL_HIHI_main.c: 347:     CHS0 = (ADC_channel & 1) >> 0;
  4244  0468  1875               	btfsc	i1ADC_Read@ADC_channel,0
  4245  0469  2C6B               	goto	u113_21
  4246  046A  2C6F               	goto	u113_20
  4247  046B                     u113_21:
  4248  046B  1283               	bcf	3,5	;RP0=0, select bank0
  4249  046C  1303               	bcf	3,6	;RP1=0, select bank0
  4250  046D  159F               	bsf	31,3	;volatile
  4251  046E  2C72               	goto	u114_24
  4252  046F                     u113_20:
  4253  046F  1283               	bcf	3,5	;RP0=0, select bank0
  4254  0470  1303               	bcf	3,6	;RP1=0, select bank0
  4255  0471  119F               	bcf	31,3	;volatile
  4256  0472                     u114_24:
  4257  0472                     i1l1844:
  4258                           
  4259                           ;BTL_HIHI_main.c: 348:     CHS1 = (ADC_channel & 2) >> 1;
  4260  0472  0875               	movf	i1ADC_Read@ADC_channel,w
  4261  0473  00F2               	movwf	??i1_ADC_Read
  4262  0474  3001               	movlw	1
  4263  0475                     u115_25:
  4264  0475  1003               	clrc
  4265  0476  0CF2               	rrf	??i1_ADC_Read,f
  4266  0477  3EFF               	addlw	-1
  4267  0478  1D03               	skipz
  4268  0479  2C75               	goto	u115_25
  4269  047A  1872               	btfsc	??i1_ADC_Read,0
  4270  047B  2C7D               	goto	u116_21
  4271  047C  2C81               	goto	u116_20
  4272  047D                     u116_21:
  4273  047D  1283               	bcf	3,5	;RP0=0, select bank0
  4274  047E  1303               	bcf	3,6	;RP1=0, select bank0
  4275  047F  161F               	bsf	31,4	;volatile
  4276  0480  2C84               	goto	u117_24
  4277  0481                     u116_20:
  4278  0481  1283               	bcf	3,5	;RP0=0, select bank0
  4279  0482  1303               	bcf	3,6	;RP1=0, select bank0
  4280  0483  121F               	bcf	31,4	;volatile
  4281  0484                     u117_24:
  4282                           
  4283                           ;BTL_HIHI_main.c: 349:     CHS2 = (ADC_channel & 4) >> 2;
  4284  0484  0875               	movf	i1ADC_Read@ADC_channel,w
  4285  0485  00F2               	movwf	??i1_ADC_Read
  4286  0486  3002               	movlw	2
  4287  0487                     u118_25:
  4288  0487  1003               	clrc
  4289  0488  0CF2               	rrf	??i1_ADC_Read,f
  4290  0489  3EFF               	addlw	-1
  4291  048A  1D03               	skipz
  4292  048B  2C87               	goto	u118_25
  4293  048C  1872               	btfsc	??i1_ADC_Read,0
  4294  048D  2C8F               	goto	u119_21
  4295  048E  2C93               	goto	u119_20
  4296  048F                     u119_21:
  4297  048F  1283               	bcf	3,5	;RP0=0, select bank0
  4298  0490  1303               	bcf	3,6	;RP1=0, select bank0
  4299  0491  169F               	bsf	31,5	;volatile
  4300  0492  2C96               	goto	u120_24
  4301  0493                     u119_20:
  4302  0493  1283               	bcf	3,5	;RP0=0, select bank0
  4303  0494  1303               	bcf	3,6	;RP1=0, select bank0
  4304  0495  129F               	bcf	31,5	;volatile
  4305  0496                     u120_24:
  4306  0496                     i1l1846:
  4307                           
  4308                           ;BTL_HIHI_main.c: 352:     _delay((unsigned long)((25)*(20000000/4000000.0)));
  4309  0496  3029               	movlw	41
  4310  0497  00F2               	movwf	??i1_ADC_Read
  4311  0498                     u153_27:
  4312  0498  0BF2               	decfsz	??i1_ADC_Read,f
  4313  0499  2C98               	goto	u153_27
  4314  049A  0000               	nop
  4315  049B                     i1l1848:
  4316                           
  4317                           ;BTL_HIHI_main.c: 355:     GO_DONE = 1;
  4318  049B  1283               	bcf	3,5	;RP0=0, select bank0
  4319  049C  1303               	bcf	3,6	;RP1=0, select bank0
  4320  049D  151F               	bsf	31,2	;volatile
  4321  049E                     i1l352:	
  4322                           ;BTL_HIHI_main.c: 359:         ;
  4323                           
  4324                           
  4325                           ;BTL_HIHI_main.c: 358:     while (GO_DONE)
  4326  049E  191F               	btfsc	31,2	;volatile
  4327  049F  2CA1               	goto	u121_21
  4328  04A0  2CA2               	goto	u121_20
  4329  04A1                     u121_21:
  4330  04A1  2C9E               	goto	i1l352
  4331  04A2                     u121_20:
  4332  04A2                     i1l1850:
  4333                           
  4334                           ;BTL_HIHI_main.c: 362:     uint16_t result = ((ADRESH << 8) + ADRESL);
  4335  04A2  081E               	movf	30,w	;volatile
  4336  04A3  00F4               	movwf	i1ADC_Read@result+1
  4337  04A4  1683               	bsf	3,5	;RP0=1, select bank1
  4338  04A5  1303               	bcf	3,6	;RP1=0, select bank1
  4339  04A6  081E               	movf	30,w	;volatile
  4340  04A7  00F3               	movwf	i1ADC_Read@result
  4341                           
  4342                           ;BTL_HIHI_main.c: 363:     return result;
  4343  04A8  0874               	movf	i1ADC_Read@result+1,w
  4344  04A9  00F1               	movwf	?i1_ADC_Read+1
  4345  04AA  0873               	movf	i1ADC_Read@result,w
  4346  04AB  00F0               	movwf	?i1_ADC_Read
  4347  04AC                     i1l351:
  4348  04AC  0008               	return
  4349  04AD                     __end_ofi1_ADC_Read:
  4350                           
  4351                           	psect	text28
  4352  05D0                     __ptext28:	
  4353 ;; *************** function _UART_send_string *****************
  4354 ;; Defined at:
  4355 ;;		line 425 in file "BTL_HIHI_main.c"
  4356 ;; Parameters:    Size  Location     Type
  4357 ;;  st_pt           1    wreg     PTR unsigned char 
  4358 ;;		 -> STR_6(7), 
  4359 ;; Auto vars:     Size  Location     Type
  4360 ;;  st_pt           1    2[COMMON] PTR unsigned char 
  4361 ;;		 -> STR_6(7), 
  4362 ;; Return value:  Size  Location     Type
  4363 ;;                  1    wreg      void 
  4364 ;; Registers used:
  4365 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4366 ;; Tracked objects:
  4367 ;;		On entry : 0/0
  4368 ;;		On exit  : 0/0
  4369 ;;		Unchanged: 0/0
  4370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4371 ;;      Params:         0       0       0       0       0
  4372 ;;      Locals:         1       0       0       0       0
  4373 ;;      Temps:          1       0       0       0       0
  4374 ;;      Totals:         2       0       0       0       0
  4375 ;;Total ram usage:        2 bytes
  4376 ;; Hardware stack levels used:    1
  4377 ;; Hardware stack levels required when called:    1
  4378 ;; This function calls:
  4379 ;;		_UART_send_char
  4380 ;; This function is called by:
  4381 ;;		_isr1
  4382 ;; This function uses a non-reentrant model
  4383 ;;
  4384                           
  4385                           
  4386                           ;psect for function _UART_send_string
  4387  05D0                     _UART_send_string:
  4388                           
  4389                           ;incstack = 0
  4390 ;; hardware stack exceeded
  4391                           ; Regs used in _UART_send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4392                           ;UART_send_string@st_pt stored from wreg
  4393  05D0  00F2               	movwf	UART_send_string@st_pt
  4394  05D1                     i1l1812:
  4395                           
  4396                           ;BTL_HIHI_main.c: 425: void UART_send_string(char *st_pt);BTL_HIHI_main.c: 426: {;BTL_HI
      +                          HI_main.c: 427:     while (*st_pt)
  4397  05D1  2DE2               	goto	i1l1818
  4398  05D2                     i1l1814:
  4399                           
  4400                           ;BTL_HIHI_main.c: 428:         UART_send_char(*st_pt++);
  4401  05D2  0872               	movf	UART_send_string@st_pt,w
  4402  05D3  0084               	movwf	4
  4403  05D4  120A  118A  24AD  120A  118A  	fcall	stringdir
  4404  05D9  120A  118A  26DF  120A  118A  	fcall	_UART_send_char
  4405  05DE                     i1l1816:
  4406  05DE  3001               	movlw	1
  4407  05DF  00F1               	movwf	??_UART_send_string
  4408  05E0  0871               	movf	??_UART_send_string,w
  4409  05E1  07F2               	addwf	UART_send_string@st_pt,f
  4410  05E2                     i1l1818:
  4411                           
  4412                           ;BTL_HIHI_main.c: 427:     while (*st_pt)
  4413  05E2  0872               	movf	UART_send_string@st_pt,w
  4414  05E3  0084               	movwf	4
  4415  05E4  120A  118A  24AD  120A  118A  	fcall	stringdir
  4416  05E9  3A00               	xorlw	0
  4417  05EA  1D03               	skipz
  4418  05EB  2DED               	goto	u110_21
  4419  05EC  2DEE               	goto	u110_20
  4420  05ED                     u110_21:
  4421  05ED  2DD2               	goto	i1l1814
  4422  05EE                     u110_20:
  4423  05EE                     i1l380:
  4424  05EE  0008               	return
  4425  05EF                     __end_of_UART_send_string:
  4426                           
  4427                           	psect	text29
  4428  06DF                     __ptext29:	
  4429 ;; *************** function _UART_send_char *****************
  4430 ;; Defined at:
  4431 ;;		line 418 in file "BTL_HIHI_main.c"
  4432 ;; Parameters:    Size  Location     Type
  4433 ;;  bt              1    wreg     unsigned char 
  4434 ;; Auto vars:     Size  Location     Type
  4435 ;;  bt              1    0[COMMON] unsigned char 
  4436 ;; Return value:  Size  Location     Type
  4437 ;;                  1    wreg      void 
  4438 ;; Registers used:
  4439 ;;		wreg
  4440 ;; Tracked objects:
  4441 ;;		On entry : 0/0
  4442 ;;		On exit  : 0/0
  4443 ;;		Unchanged: 0/0
  4444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4445 ;;      Params:         0       0       0       0       0
  4446 ;;      Locals:         1       0       0       0       0
  4447 ;;      Temps:          0       0       0       0       0
  4448 ;;      Totals:         1       0       0       0       0
  4449 ;;Total ram usage:        1 bytes
  4450 ;; Hardware stack levels used:    1
  4451 ;; This function calls:
  4452 ;;		Nothing
  4453 ;; This function is called by:
  4454 ;;		_UART_send_string
  4455 ;; This function uses a non-reentrant model
  4456 ;;
  4457                           
  4458                           
  4459                           ;psect for function _UART_send_char
  4460  06DF                     _UART_send_char:
  4461                           
  4462                           ;incstack = 0
  4463 ;; hardware stack exceeded
  4464                           ; Regs used in _UART_send_char: [wreg]
  4465                           ;UART_send_char@bt stored from wreg
  4466  06DF  00F0               	movwf	UART_send_char@bt
  4467  06E0                     i1l1586:
  4468  06E0                     i1l371:	
  4469                           ;BTL_HIHI_main.c: 421:         ;
  4470                           
  4471                           
  4472                           ;BTL_HIHI_main.c: 420:     while (!TRMT)
  4473  06E0  1683               	bsf	3,5	;RP0=1, select bank1
  4474  06E1  1303               	bcf	3,6	;RP1=0, select bank1
  4475  06E2  1C98               	btfss	24,1	;volatile
  4476  06E3  2EE5               	goto	u76_21
  4477  06E4  2EE6               	goto	u76_20
  4478  06E5                     u76_21:
  4479  06E5  2EE0               	goto	i1l371
  4480  06E6                     u76_20:
  4481  06E6                     i1l1588:
  4482                           
  4483                           ;BTL_HIHI_main.c: 422:     TXREG = bt;
  4484  06E6  0870               	movf	UART_send_char@bt,w
  4485  06E7  1283               	bcf	3,5	;RP0=0, select bank0
  4486  06E8  1303               	bcf	3,6	;RP1=0, select bank0
  4487  06E9  0099               	movwf	25	;volatile
  4488  06EA                     i1l374:
  4489  06EA  0008               	return
  4490  06EB                     __end_of_UART_send_char:
  4491                           
  4492                           	psect	text30
  4493  0628                     __ptext30:	
  4494 ;; *************** function _EEPROM_Write *****************
  4495 ;; Defined at:
  4496 ;;		line 463 in file "BTL_HIHI_main.c"
  4497 ;; Parameters:    Size  Location     Type
  4498 ;;  Address         1    wreg     unsigned char 
  4499 ;;  Data            1    0[COMMON] unsigned char 
  4500 ;; Auto vars:     Size  Location     Type
  4501 ;;  Address         1    1[COMMON] unsigned char 
  4502 ;; Return value:  Size  Location     Type
  4503 ;;                  1    wreg      void 
  4504 ;; Registers used:
  4505 ;;		wreg
  4506 ;; Tracked objects:
  4507 ;;		On entry : 0/0
  4508 ;;		On exit  : 0/0
  4509 ;;		Unchanged: 0/0
  4510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4511 ;;      Params:         1       0       0       0       0
  4512 ;;      Locals:         1       0       0       0       0
  4513 ;;      Temps:          0       0       0       0       0
  4514 ;;      Totals:         2       0       0       0       0
  4515 ;;Total ram usage:        2 bytes
  4516 ;; Hardware stack levels used:    1
  4517 ;; This function calls:
  4518 ;;		Nothing
  4519 ;; This function is called by:
  4520 ;;		_isr1
  4521 ;; This function uses a non-reentrant model
  4522 ;;
  4523                           
  4524                           
  4525                           ;psect for function _EEPROM_Write
  4526  0628                     _EEPROM_Write:
  4527                           
  4528                           ;incstack = 0
  4529 ;; hardware stack exceeded
  4530                           ; Regs used in _EEPROM_Write: [wreg]
  4531                           ;EEPROM_Write@Address stored from wreg
  4532  0628  00F1               	movwf	EEPROM_Write@Address
  4533  0629                     i1l1820:
  4534  0629                     i1l389:	
  4535                           ;BTL_HIHI_main.c: 466:         ;
  4536                           
  4537                           
  4538                           ;BTL_HIHI_main.c: 465:     while (WR)
  4539  0629  1683               	bsf	3,5	;RP0=1, select bank3
  4540  062A  1703               	bsf	3,6	;RP1=1, select bank3
  4541  062B  188C               	btfsc	12,1	;volsfr
  4542  062C  2E2E               	goto	u111_21
  4543  062D  2E2F               	goto	u111_20
  4544  062E                     u111_21:
  4545  062E  2E29               	goto	i1l389
  4546  062F                     u111_20:
  4547  062F                     i1l1822:
  4548                           
  4549                           ;BTL_HIHI_main.c: 467:     EEADR = Address;
  4550  062F  0871               	movf	EEPROM_Write@Address,w
  4551  0630  1283               	bcf	3,5	;RP0=0, select bank2
  4552  0631  1703               	bsf	3,6	;RP1=1, select bank2
  4553  0632  008D               	movwf	13	;volatile
  4554                           
  4555                           ;BTL_HIHI_main.c: 468:     EEDATA = Data;
  4556  0633  0870               	movf	EEPROM_Write@Data,w
  4557  0634  008C               	movwf	12	;volatile
  4558  0635                     i1l1824:
  4559                           
  4560                           ;BTL_HIHI_main.c: 469:     EEPGD = 0;
  4561  0635  1683               	bsf	3,5	;RP0=1, select bank3
  4562  0636  1703               	bsf	3,6	;RP1=1, select bank3
  4563  0637  138C               	bcf	12,7	;volsfr
  4564  0638                     i1l1826:
  4565                           
  4566                           ;BTL_HIHI_main.c: 470:     EECON1bits.WREN = 1;
  4567  0638  150C               	bsf	12,2	;volsfr
  4568  0639                     i1l1828:
  4569                           
  4570                           ;BTL_HIHI_main.c: 471:     GIE = 0;
  4571  0639  138B               	bcf	11,7	;volatile
  4572                           
  4573                           ;BTL_HIHI_main.c: 472:     EECON2 = 0x55;
  4574  063A  3055               	movlw	85
  4575  063B  008D               	movwf	13	;volsfr
  4576                           
  4577                           ;BTL_HIHI_main.c: 473:     EECON2 = 0xAA;
  4578  063C  30AA               	movlw	170
  4579  063D  008D               	movwf	13	;volsfr
  4580  063E                     i1l1830:
  4581                           
  4582                           ;BTL_HIHI_main.c: 474:     EECON1bits.WR = 1;
  4583  063E  148C               	bsf	12,1	;volsfr
  4584  063F                     i1l1832:
  4585                           
  4586                           ;BTL_HIHI_main.c: 475:     GIE = 1;
  4587  063F  178B               	bsf	11,7	;volatile
  4588  0640                     i1l1834:
  4589                           
  4590                           ;BTL_HIHI_main.c: 476:     EECON1bits.WREN = 0;
  4591  0640  110C               	bcf	12,2	;volsfr
  4592  0641                     i1l1836:
  4593                           
  4594                           ;BTL_HIHI_main.c: 477:     EECON1bits.WR = 0;
  4595  0641  108C               	bcf	12,1	;volsfr
  4596  0642                     i1l392:
  4597  0642  0008               	return
  4598  0643                     __end_of_EEPROM_Write:
  4599  007E                     btemp	set	126	;btemp
  4600  007E                     wtemp0	set	126
  4601                           
  4602                           	psect	config
  4603                           
  4604                           ;Config register CONFIG @ 0x2007
  4605                           ;	Oscillator Selection bits
  4606                           ;	FOSC = HS, HS oscillator
  4607                           ;	Watchdog Timer Enable bit
  4608                           ;	WDTE = OFF, WDT disabled
  4609                           ;	Power-up Timer Enable bit
  4610                           ;	PWRTE = OFF, PWRT disabled
  4611                           ;	Brown-out Reset Enable bit
  4612                           ;	BOREN = OFF, BOR disabled
  4613                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  4614                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  4615                           ;	Data EEPROM Memory Code Protection bit
  4616                           ;	CPD = OFF, Data EEPROM code protection off
  4617                           ;	Flash Program Memory Write Enable bits
  4618                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  4619                           ;	In-Circuit Debugger Mode bit
  4620                           ;	DEBUG = 0x1, unprogrammed default
  4621                           ;	Flash Program Memory Code Protection bit
  4622                           ;	CP = OFF, Code protection off
  4623  2007                     	org	8199
  4624  2007  3F3A               	dw	16186

Data Sizes:
    Strings     72
    Constant    0
    Data        9
    BSS         10
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80     29      45
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_send_string@st_pt	PTR unsigned char  size(1) Largest target is 7
		 -> STR_6(CODE[7]), 

    LCD_Write_String@Str	PTR unsigned char  size(1) Largest target is 17
		 -> STR_5(CODE[7]), STR_4(CODE[8]), STR_3(CODE[16]), STR_2(CODE[17]), 
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr1 in COMMON

    _isr1->i1_setPWM_DutyCycle
    i1_setPWM_DutyCycle->i1_ADC_Read
    _UART_send_string->_UART_send_char

Critical Paths under _main in BANK0

    _main->_LCD_Write
    _setPWM_DutyCycle->_ADC_Read
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write->_LCD_Set_Cursor
    _LCD_Write_Char->_LCD_Write_4Bit
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_Init->_LCD_CMD
    _LCD_Clear->_LCD_CMD
    _LCD_CMD->_LCD_Write_4Bit
    _LCD_Write_4Bit->_IO_Expander_Write
    _IO_Expander_Write->_I2C_Master_Write

Critical Paths under _isr1 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr1 in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr1 in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr1 in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    4032
                                             27 BANK0      2     2      0
                           _ADC_Init
                           _ADC_Read
                        _EEPROM_Read
                    _I2C_Master_Init
                            _IR_Init
                          _LCD_Clear
                           _LCD_Init
                     _LCD_Set_Cursor
                          _LCD_Write
                   _LCD_Write_String
                         _Servo_Init
                        _config_UART
                           _init_PWM
                   _setPWM_DutyCycle
 ---------------------------------------------------------------------------------
 (1) _setPWM_DutyCycle                                     4     2      2     220
                                             14 BANK0      4     2      2
                           _ADC_Read (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_PWM                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_UART                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Servo_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     3     3      0     388
                                             14 BANK0      3     3      0
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (1) _LCD_Write                                            9     7      2    2304
                                             18 BANK0      9     7      2
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              8 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              8 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Char                                       2     2      0     133
                                             12 BANK0      2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       4     3      1     655
                                             14 BANK0      4     3      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             4     4      0     199
                                             14 BANK0      4     4      0
                  _IO_Expander_Write
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            1     1      0     133
                                             14 BANK0      1     1      0
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _LCD_CMD                                              2     2      0     133
                                             12 BANK0      2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_4Bit                                       2     2      0      89
                                             10 BANK0      2     2      0
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (4) _IO_Expander_Write                                    1     1      0      44
                                              9 BANK0      1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     1     1      0      22
                                              8 BANK0      1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IR_Init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Read                                          1     1      0      22
                                              8 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             6     4      2     111
                                              8 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _isr1                                                 8     8      0     579
                                              0 BANK0      8     8      0
                       _EEPROM_Write
                   _UART_send_string
                         i1_ADC_Read
                 i1_setPWM_DutyCycle
 ---------------------------------------------------------------------------------
 (9) i1_setPWM_DutyCycle                                   4     2      2      96
                                              6 COMMON     4     2      2
                         i1_ADC_Read (ARG)
 ---------------------------------------------------------------------------------
 (9) i1_ADC_Read                                           6     4      2     111
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (9) _UART_send_string                                     2     2      0     100
                                              1 COMMON     2     2      0
                     _UART_send_char
 ---------------------------------------------------------------------------------
 (10) _UART_send_char                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _EEPROM_Write                                         2     1      1     272
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _EEPROM_Read
   _I2C_Master_Init
   _IR_Init
   _LCD_Clear
     _LCD_CMD
       _LCD_Write_4Bit
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   _LCD_Init
     _IO_Expander_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _LCD_CMD
       _LCD_Write_4Bit
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   _LCD_Set_Cursor
     _LCD_CMD
       _LCD_Write_4Bit
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   _LCD_Write
     _LCD_Set_Cursor
       _LCD_CMD
         _LCD_Write_4Bit
           _IO_Expander_Write
             _I2C_Master_Start
               _I2C_Master_Wait
             _I2C_Master_Stop
               _I2C_Master_Wait
             _I2C_Master_Write
               _I2C_Master_Wait
     _LCD_Write_Char
       _LCD_Write_4Bit
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
     ___awdiv
     ___awmod
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Write_4Bit
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   _Servo_Init
   _config_UART
   _init_PWM
   _setPWM_DutyCycle
     _ADC_Read (ARG)

 _isr1 (ROOT)
   _EEPROM_Write
   _UART_send_string
     _UART_send_char
   i1_ADC_Read
   i1_setPWM_DutyCycle
     i1_ADC_Read (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1D      2D       5       56.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3B      12        0.0%
ABS                  0      0      3B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Wed Jun 08 09:52:42 2022

                          pc 0002                           l40 06C5                           l43 06D1  
                         l52 0694                           l37 06DE                           l61 05CF  
                         l46 0707                           l54 0698                           l70 0591  
                         l55 0699                           l64 05B0                           l49 06FE  
                         l58 02EB                           l67 060C                           l83 0572  
                         l76 0550                           l98 06B6                           _RS 004B  
                         _WR 0C61                 ___awdiv@sign 002E                           fsr 0004  
          ?_setPWM_DutyCycle 002E                  ?i1_ADC_Read 0070                          l350 0415  
                        l351 045D                          l352 044D                          l344 0408  
                        l360 0508                          l361 050D                          l338 06F5  
                        l362 0527                          l347 06C4                          l365 065C  
                        l358 0503                          l631 0354                          l383 0627  
                        l359 0521                          l368 0715                          l386 06A8  
                        l644 03AF                          _GIE 005F                          _RB1 0031  
                        _RB2 0032                          _RB5 0035                          _RB6 0036  
                        _PS0 0408                          _PR2 0092                          _PS1 0409  
                        _PEN 048A                          _PS2 040A                          u710 06CB  
                        u711 06CA                          u720 06D1                          u721 06D0  
                        u730 0698                          u810 0321                          u731 0697  
                        u811 0320                          _SEN 0488                          u805 0313  
                        u830 0332                          u910 0384                          u831 0331  
                        u911 0383                          _PSA 040B                          u920 038E  
                        u745 05FF                          u825 0322                          u921 038D  
                        u905 0376                          u850 0346                          u770 02F3  
                        u755 0584                          u851 0345                          u835 032E  
                        u771 02F2                          u860 034B                          u780 02FE  
                        u940 03A1                          u861 034A                          u845 033A  
                        u781 02FD                          u941 03A0                          u925 038A  
                        u790 030F                          u950 03A6                          u870 035C  
                        u791 030E                          u951 03A5                          u935 0395  
                        u871 035B                          u880 0367                          u960 0550  
                        u881 0366                          u961 054F                          _RX9 00C6  
                        u890 0372                          u970 0404                          u891 0371  
                        u971 0403                          u980 0412                          u981 0411  
                        u990 041C                          u991 0418                          _TX9 04C6  
                        _pos 007D                          fsr0 0004                          indf 0000  
         ??_setPWM_DutyCycle 0030                 ___awmod@sign 002E              __end_of_LCD_CMD 060D  
        LCD_Write_String@Str 0030               _LCD_Set_Cursor 0551                         l1600 02FE  
                       l1610 0312                         l1602 0303                         l1540 06CB  
                       l1700 02AF                         l1620 0338                         l1612 0319  
                       l1604 0307                         l2092 0516                         l1542 06FF  
                       l1550 068B                         l1702 02B5                         l2094 056D  
                       l1630 0350                         l1622 0339                         l1614 031D  
                       l1606 0309                         l1710 052E                         l1800 0443  
                       l1544 0704                         l1552 0690                         l1560 05A0  
                       l1704 02C9                         l1624 0340                         l1616 0321  
                       l1608 030F                         l1640 0361                         l1712 053B  
                       l1720 06EB                         l1722 06B7                         l1802 044A  
                       l1538 06C5                         l1546 06F6                         l1554 05B4  
                       l1562 05F2                         l1706 02D7                         l1570 0578  
                       l1618 0332                         l1626 0346                         l1650 0375  
                       l1642 0363                         l1634 0355                         l1714 0543  
                       l1810 0650                         l1804 0451                         l1548 06FB  
                       l1556 0595                         l1564 05F3                         l1716 06A9  
                       l1572 0554                         l1628 034B                         l1660 0394  
                       l1652 037C                         l1644 0367                         l1636 0358  
                       l1708 052B                         l1740 0612                         l1724 04FB  
                       l1900 0087                         l1734 0710                         l1558 0599  
                       l1566 05FA                         l1718 06AF                         l1574 0555  
                       l1590 02EC                         l1662 039B                         l1654 0380  
                       l1646 036C                         l1638 035C                         l1750 061B  
                       l1742 0613                         l1726 0511                         l1910 0090  
                       l1902 0088                         l1680 06DD                         l1672 06D2  
                       l1576 055D                         l1568 0576                         l1592 02EF  
                       l1656 0384                         l1648 0372                         l1664 03A1  
                       l1760 0624                         l1752 061E                         l1744 0616  
                       l1736 060D                         l1728 0523                         l1808 0643  
                       l1920 00B9                         l1912 0093                         l1904 008B  
                       l1762 069D                         l1674 06D6                         l1690 0268  
                       l1682 0242                         l1578 0565                         l1594 02F3  
                       l1666 03A6                         l1658 038E                         l1770 03B3  
                       l1754 0621                         l1746 0619                         l1738 0610  
                       l1930 00EE                         l1922 00BE                         l1914 009E  
                       l1906 008C                         l1764 06A1                         l1676 06D9  
                       l1692 0279                         l1684 0246                         l1596 02F8  
                       l1668 03AB                         l1780 03DD                         l1772 03B8  
                       l1756 0622                         l1748 061A                         l1940 0116  
                       l1932 00FE                         l1924 00C8                         l1916 00A9  
                       l1908 008D                         l1766 06A4                         l1678 06DC  
                       l1694 027F                         l1686 024C                         l1598 02FA  
                       l1790 0405                         l1782 03E5                         l1758 0623  
                       l1950 0135                         l1942 011C                         l1926 00CE  
                       l1934 0102                         l1918 00B4                         l1792 040C  
                       l1696 0290                         l1688 025D                         l1784 03E9  
                       l1776 03BC                         l1952 013A                         l1944 0126  
                       l1936 0107                         l1928 00DE                         l1880 0052  
                       l1794 0412                         l1698 029B                         l1786 03FF  
                       l1778 03D3                         l1954 013E                         l1946 012C  
                       l1938 010C                         l1890 0076                         l1882 005C  
                       l1874 0037                         l1956 014F                         l1948 0130  
                       l1892 007B                         l1884 0067                         l1876 0042  
                       l1798 041F                         l1894 0080                         l1886 006C  
                       l1878 004C                         l1896 0083                         l1888 0071  
                       l1898 0084                         _ADFM 04FF                         _ADON 00F8  
                       _CHS0 00FB                         _CHS1 00FC                         _CHS2 00FD  
                       STR_1 04B3                         STR_2 04C4                         STR_3 04D5  
                       STR_4 04E5                         STR_5 04F4                         STR_6 04ED  
                       _BRGH 04C2                         _T0IE 005D                         _T0IF 005A  
                       _CREN 00C4                         _T0CS 040D                         u1020 042E  
                       u1004 041F                         u1021 042A                         u1015 0422  
                       u1050 0440                         u1034 0431                         u1051 043C  
                       u1045 0434                         u1070 0451                         u1071 0450  
                       u1064 0443                         u1080 064C                         u1240 00B9  
                       u1081 0648                         u1241 00B8                         u1250 0107  
                       u1251 0106                         u1260 0135                         u1261 0134  
                       u1094 064F                         u1270 0158                         u1271 0154  
                       u1417 0252                         u1507 06B3                         u1427 0263  
                       u1284 015B                         u1517 05AD                         u1437 0274  
                       u1527 0447                         u1447 0285                         u1457 0296  
                       u1467 02A9                         u1477 02BD                         u1487 02D1  
                       u1497 02E5                         _PEIE 005E                         _INTE 005C  
                       _INTF 0059                         _RCIE 0465                         _RCIF 0065  
                       _TMR0 0001                         _SPEN 00C7                         _TRMT 04C1  
                       _TXEN 04C5                         _SYNC 04C4              __end_of_IR_Init 0716  
          ?_LCD_Write_String 0070                         _isr1 015F                         _main 0037  
         __size_of_LCD_Clear 000E                         btemp 007E             __end_of_ADC_Init 06C5  
           __end_of_ADC_Read 045E                         start 0012           ??_LCD_Write_String 002E  
         __size_of_LCD_Write 0059         LCD_Write_4Bit@Nibble 002B    __size_of_UART_send_string 001F  
       __end_of_EEPROM_Write 0643             __end_of_LCD_Init 02EC             ?_I2C_Master_Init 0070  
           ?_I2C_Master_Wait 0070             ?_I2C_Master_Stop 0070  __size_ofi1_setPWM_DutyCycle 0018  
                      _ADCS0 00FE                        _ADCS1 00FF                        _ADCS2 04FE  
                      ?_isr1 0070                        ?_main 0070                        _CCP1X 00BD  
                      _CCP1Y 00BC              __end_of___awdiv 0355                        _EEADR 010D  
            __end_of___awmod 03B0                        _EEPGD 0C67              ___awdiv@divisor 0028  
                      _PCFG0 04F8                        _PCFG1 04F9                        _PCFG2 04FA  
                      _PCFG3 04FB                        i1l350 0468                        i1l351 04AC  
                      i1l335 0234                        i1l352 049E                        i1l371 06E0  
                      i1l380 05EE                        i1l365 0674                        i1l374 06EA  
                      i1l392 0642                        i1l389 0629              ___awdiv@counter 002D  
                      _RCREG 001A                        _SPBRG 0099                        _SSPIF 0063  
                      u76_20 06E6                        u76_21 06E5                        _TXREG 0019  
     __end_of_LCD_Set_Cursor 0573                  LCD_Write@y_ 0039                        pclath 000A  
                      status 0003                        wtemp0 007E             EEPROM_Write@Data 0070  
        __size_ofi1_ADC_Read 004F         __size_of_EEPROM_Read 000F               _LCD_Write_4Bit 0592  
             _LCD_Write_Char 0573              __initialization 0015                 __end_of_isr1 023F  
               __end_of_main 015F            _IO_Expander_Write 05B1           ?_IO_Expander_Write 0070  
                     ??_isr1 0020                       ??_main 003B            __end_of_LCD_Clear 06B7  
                  ??_LCD_CMD 002C            __end_of_LCD_Write 0409            ?_I2C_Master_Start 0070  
          ?_I2C_Master_Write 0070          ??_IO_Expander_Write 0029              ?_LCD_Set_Cursor 002E  
                  ??_IR_Init 0028           ??_I2C_Master_Start 0028           ??_I2C_Master_Write 0028  
                     _CCP1M2 00BA                       _CCP1M3 00BB                       _ADRESH 001E  
                     _ADRESL 009E                       _EEDATA 010C                       _CCPR1L 0015  
                     _EECON2 018D             ___awdiv@dividend 002A                       u110_20 05EE  
                     i1l2000 01CD                       u110_21 05ED                       i1l2010 01E1  
                     i1l2002 01D3                       i1l2020 01FB                       i1l2012 01EB  
                     i1l2030 0212                       i1l2022 0205                       i1l2014 01EC  
                     i1l2006 01D7                       u111_20 062F                       i1l2040 0231  
                     i1l2032 021C                       i1l2008 01DD                       i1l2016 01F1  
                     u111_21 062E                       i1l2018 01F7                       i1l2026 0208  
                     i1l2034 021F                       i1l2036 0221                       i1l2028 020E  
                     i1l2038 0230                       u112_20 0465                       u112_21 0464  
                     u120_24 0496                       u121_20 04A2                       u113_20 046F  
                     u121_21 04A1                       u113_21 046B                       i1l1820 0629  
                     i1l1812 05D1                       i1l1830 063E                       i1l1822 062F  
                     i1l1814 05D2                       i1l1832 063F                       i1l1824 0635  
                     i1l1816 05DE                       i1l1840 0465                       u122_20 0664  
                     u130_20 0170                       u122_21 0660                       u130_21 016F  
                     i1l1834 0640                       i1l1826 0638                       i1l1586 06E0  
                     i1l1818 05E2                       i1l1850 04A2                       i1l1836 0641  
                     i1l1828 0639                       i1l1588 06E6                       i1l1844 0472  
                     u114_24 0472                       i1l1846 0496                       i1l1838 045F  
                     i1l1854 065D                       i1l1848 049B                       i1l1856 0668  
                     u131_20 0175                       i1l1960 0163                       u131_21 0174  
                     i1l1970 0175                       i1l1962 0165                       u123_24 0667  
                     i1l1980 019E                       i1l1972 017C                       i1l1964 0166  
                     u115_25 0475                       i1l1982 01A0                       i1l1974 0182  
                     i1l1966 016A                       i1l1990 01B7                       i1l1958 015F  
                     u116_20 0481                       u140_20 020E                       i1l1992 01BB  
                     i1l1976 0196                       i1l1984 01A1                       u132_20 0196  
                     i1l1968 0170                       u116_21 047D                       u140_21 020D  
                     u132_21 0195                       i1l1994 01C3                       i1l1986 01A6  
                     i1l1978 019B                       i1l1996 01C6                       i1l1988 01B6  
                     u132_25 0192                       i1l1998 01CC                       u133_20 019B  
                     u133_21 019A                       u117_24 0484                       u134_20 01A6  
                     u134_21 01A5                       _INTEDG 040E                       u118_25 0487  
                     u119_20 0493                       u135_20 01B6                       u119_21 048F  
                     u135_21 01B5                       u135_25 01B2                       u136_20 01BB  
                     u136_21 01BA                       u137_20 01D3                       u129_20 0163  
                     u137_21 01D2                       u129_21 0162                       u153_27 0498  
                     u138_20 01DD                       u138_21 01DC                       u139_20 01F7  
                     u139_21 01F6                       _TMR2ON 0092                       _SSPADD 0093  
                     _TRISA0 0428                       _TRISB0 0430                       _TRISB1 0431  
                     _TRISB2 0432                       _TRISC2 043A                       _TRISC3 043B  
                     _TRISB5 0435                       _TRISC4 043C                       _TRISB6 0436  
                     _TRISC6 043E                       _TRISC7 043F                       _SSPCON 0014  
                     _SSPBUF 0013       __end_of_LCD_Write_4Bit 05B1                       _B_rate 003D  
     __end_of_LCD_Write_Char 0592         __size_of_config_UART 001B    __end_of_IO_Expander_Write 05D0  
                  ??___awdiv 002C                    ??___awmod 002C             __end_of_init_PWM 0528  
                 _Servo_Init 06EB             ___awdiv@quotient 002F              ___awmod@divisor 0028  
                     _result 007A              ___awmod@counter 002D                 __pdataCOMMON 007D  
                  ?_ADC_Init 0070                    ?_ADC_Read 0028                       saved_w 007E  
    __end_of__initialization 0033                    ?_LCD_Init 0070              ?_LCD_Write_4Bit 0070  
            ?_LCD_Write_Char 0070        __size_of_EEPROM_Write 001B               __pcstackCOMMON 0070  
               __pidataBANK0 0708             _UART_send_string 05D0                 ??i1_ADC_Read 0072  
                 ??_ADC_Init 0028                   ??_ADC_Read 002A                 _EEPROM_Write 0628  
                 __pbssBANK0 0045    __size_of_setPWM_DutyCycle 001A                   ??_LCD_Init 002E  
         __end_ofi1_ADC_Read 04AD   __size_of_IO_Expander_Write 001F                   __pmaintext 0037  
        ADC_Read@ADC_channel 002D                   __pintentry 0004                  ?_Servo_Init 0070  
                    _ACKSTAT 048E    __size_of_LCD_Write_String 0029                   _flag_trans 004A  
                    _T2CKPS0 0090                      _T2CKPS1 0091                      _LCD_CMD 05EF  
                    _GO_DONE 00FA                  _SelectServo 007C      __size_of_UART_send_char 000C  
                    _IR_Init 0710                      _SSPCON2 0091                      _SSPSTAT 0094  
                 __stringtab 04AD                    ?_init_PWM 0070                      _i2c_add 004C  
 __end_ofi1_setPWM_DutyCycle 0675                      ___awdiv 02EC                      ___awmod 0355  
          LCD_Write@count_sp 003A                      _flag_dc 0041             ??_LCD_Set_Cursor 002F  
                    __ptext1 0643                      __ptext2 04FB                      __ptext3 060D  
                    __ptext4 06EB                      __ptext5 0528                      __ptext6 03B0  
                    __ptext7 0355                      __ptext8 02EC                      __ptext9 0573  
                    _cnt_pos 007B             ___awmod@dividend 002A     __size_of_I2C_Master_Init 000D  
   __size_of_I2C_Master_Wait 000D     __size_of_I2C_Master_Stop 0009                    _LCD_Clear 06A9  
                  _LCD_Write 03B0         end_of_initialization 0033          __size_of_Servo_Init 000B  
                 ??_init_PWM 0028                ??_EEPROM_Read 0028    __size_of_I2C_Master_Start 0009  
  __size_of_I2C_Master_Write 0012                 _LCD_SWAP_OLL 0042                   _time_delay 003F  
                 LCD_CMD@CMD 002D         i1setPWM_DutyCycle@DC 0076                   ?_LCD_Clear 0070  
          __size_of_ADC_Init 000E            __size_of_ADC_Read 0055             ??_LCD_Write_4Bit 002A  
                 ?_LCD_Write 0032     __end_of_UART_send_string 05EF            LCD_Write_String@i 002E  
           ??_LCD_Write_Char 002C             _setPWM_DutyCycle 0643                ??_config_UART 0028  
          __size_of_LCD_Init 00AD          __end_of_EEPROM_Read 06A9             _LCD_Write_String 0528  
              __pidataCOMMON 0716                   LCD_Write@c 0038                   LCD_Write@i 0037  
                 LCD_Write@x 0032                   LCD_Write@y 0033          start_initialization 0015  
             _UART_send_char 06DF            ??_I2C_Master_Init 0028            ??_I2C_Master_Wait 0028  
          ??_I2C_Master_Stop 0028                    _OpenServo 0043                   init_fetch0 0675  
        __end_of_config_UART 0628                 ??_Servo_Init 0028                  __pdataBANK0 003D  
             ADC_Read@result 002B                     ?_LCD_CMD 0070       __end_of_UART_send_char 06EB  
                __pbssCOMMON 007A                    ___latbits 0002                __pcstackBANK0 0020  
                ??_LCD_Clear 002E                     ?_IR_Init 0070                  ??_LCD_Write 0034  
         __end_of_Servo_Init 06F6                  _EEPROM_Read 069A                    __pnvBANK0 004C  
           _I2C_Master_Start 06FF            __size_of_init_PWM 002D             _I2C_Master_Write 0688  
      IO_Expander_Write@Data 0029                     ?___awdiv 0028                     ?___awmod 0028  
           UART_send_char@bt 0070         I2C_Master_Write@data 0028                    __pstrings 04AD  
            ?_UART_send_char 0070                     _ADC_Init 06B7                     _ADC_Read 0409  
                  _count_sp1 0049                    _count_sp2 0048                    _count_sp3 0047  
         i1_setPWM_DutyCycle 065D          ?i1_setPWM_DutyCycle 0076            interrupt_function 0004  
                   _LCD_Init 023F                  _config_UART 060D         ??i1_setPWM_DutyCycle 0078  
   __end_of_setPWM_DutyCycle 065D                  __stringbase 04B2        UART_send_string@st_pt 0072  
           __size_of_LCD_CMD 001E           setPWM_DutyCycle@DC 002E             __size_of_IR_Init 0006  
          ?_UART_send_string 0070     __end_of_LCD_Write_String 0551           ??_UART_send_string 0071  
                 _EECON1bits 018C        i1ADC_Read@ADC_channel 0075             __size_of___awdiv 0069  
           __size_of___awmod 005B           __end_of__stringtab 04B3              _I2C_Master_Init 06D2  
            _I2C_Master_Wait 06C5              _I2C_Master_Stop 06F6                     __ptext10 0551  
                   __ptext11 023F                     __ptext20 0710                     __ptext12 06A9  
                   __ptext21 06D2                     __ptext13 05EF                     __ptext30 0628  
                   __ptext22 069A                     __ptext14 0592                     __ptext23 0409  
                   __ptext15 05B1                     __ptext24 06B7                     __ptext16 0688  
                   __ptext25 015F                     __ptext17 06F6                     __ptext26 065D  
                   __ptext18 06FF                     __ptext27 045E                     __ptext19 06C5  
                   __ptext28 05D0                     __ptext29 06DF                ?_EEPROM_Write 0070  
    __size_of_LCD_Set_Cursor 0022                     _init_PWM 04FB              _BackLight_State 0044  
              __size_of_isr1 00E0                __size_of_main 0128                   i1_ADC_Read 045E  
   __end_of_I2C_Master_Start 0708     __end_of_I2C_Master_Write 069A           EEPROM_Read@Address 0028  
         LCD_Write_Char@Data 002D                     init_ram0 0679               ??_EEPROM_Write 0071  
           i1ADC_Read@result 0073                     intlevel1 0000                 ?_EEPROM_Read 0070  
                  stringcode 04AD      __size_of_LCD_Write_4Bit 001F      __size_of_LCD_Write_Char 001F  
           ??_UART_send_char 0070      __end_of_I2C_Master_Init 06DF      __end_of_I2C_Master_Wait 06D2  
    __end_of_I2C_Master_Stop 06FF              LCD_Init@I2C_Add 0031          EEPROM_Write@Address 0071  
                   stringdir 04AD                     stringtab 04AD            LCD_Set_Cursor@COL 002E  
          LCD_Set_Cursor@ROW 0031               _cnt_time_delay 0045                 ?_config_UART 0070  
